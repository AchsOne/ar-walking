{"snapshots":{"/Users/florian/Documents/GitHub/ar-walking/app/src/main/java/com/example/arwalking/MainActivity.kt":{"filePath":"/Users/florian/Documents/GitHub/ar-walking/app/src/main/java/com/example/arwalking/MainActivity.kt","baseContent":"package com.example.arwalking\n\nimport androidx.activity.result.ActivityResultLauncher\nimport androidx.core.content.ContextCompat\nimport androidx.activity.result.contract.ActivityResultContracts\nimport android.provider.MediaStore\nimport android.Manifest\nimport android.content.Intent\nimport android.content.pm.PackageManager\nimport android.os.Bundle\nimport androidx.activity.ComponentActivity\nimport androidx.activity.compose.setContent\nimport androidx.activity.enableEdgeToEdge\nimport androidx.compose.foundation.layout.fillMaxSize\nimport androidx.compose.material3.MaterialTheme\nimport com.example.arwalking.screens.CameraNavigation\nimport androidx.compose.material3.Surface\nimport androidx.compose.runtime.Composable\nimport androidx.compose.runtime.CompositionLocalProvider\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.tooling.preview.Preview\nimport androidx.navigation.compose.NavHost\nimport androidx.navigation.compose.composable\nimport androidx.navigation.compose.rememberNavController\nimport com.example.arwalking.screens.HomeScreen\nimport com.example.arwalking.screens.LocalNavController\nimport com.example.arwalking.ui.theme.ARWalkingTheme\nimport java.net.URLDecoder\nimport java.nio.charset.StandardCharsets\nimport android.util.Log\nimport android.widget.Toast\nimport androidx.lifecycle.ViewModelProvider\n// OpenCV imports entfernt für Stub-Implementation\n\nclass MainActivity : ComponentActivity() {\n\n    private lateinit var routeViewModel: RouteViewModel\n\n\n    private val cameraPermissionLauncher: ActivityResultLauncher<String> =\n        registerForActivityResult(ActivityResultContracts.RequestPermission()) { granted ->\n            if (granted) {\n                openCamera()\n            }\n        }\n\n    private fun openCamera() {\n        val intent = Intent(MediaStore.ACTION_IMAGE_CAPTURE)\n        if (intent.resolveActivity(packageManager) != null) {\n            startActivity(intent)\n        }\n    }\n\n    private fun checkCameraAndLaunch() {\n        if (ContextCompat.checkSelfPermission(this, Manifest.permission.CAMERA) ==\n            PackageManager.PERMISSION_GRANTED\n        ) {\n            openCamera()\n        } else {\n            cameraPermissionLauncher.launch(Manifest.permission.CAMERA)\n        }\n    }\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n\n        // OpenCV initialisieren (Stub für lokale Entwicklung)\n        try {\n            // Simuliere OpenCV Initialisierung\n            Log.i(\"MainActivity\", \"OpenCV Stub loaded successfully\")\n        } catch (e: Exception) {\n            Log.e(\"MainActivity\", \"OpenCV Stub initialization failed: ${e.message}\")\n            Toast.makeText(this, \"OpenCV initialization failed!\", Toast.LENGTH_LONG).show()\n            return\n        }\n\n\n\n\n        // ViewModel erstellen\n        routeViewModel = ViewModelProvider(this)[RouteViewModel::class.java]\n\n        enableEdgeToEdge()\n        // Entferne checkCameraAndLaunch() - wird über Navigation gehandhabt\n        setContent {\n            ARWalkingTheme {\n                Surface(\n                    modifier = Modifier.fillMaxSize(),\n                    color = MaterialTheme.colorScheme.background\n                ) {\n                    ARWalkingApp()\n                }\n            }\n        }\n        val navigationRoute = routeViewModel.loadNavigationRoute(this)\n        if (navigationRoute != null) {\n            // Objekt ist bereit für weitere Verwendung\n            routeViewModel.logNavigationRoute(navigationRoute)\n            // weitere verwendung von navigationRoute....\n\n\n        } else {\n            Log.e(\"MainActivity\", \"Fehler beim Laden der Route\")\n        }\n    }\n}\n\n@Composable\nfun ARWalkingApp() {\n    val navController = rememberNavController()\n\n    CompositionLocalProvider(LocalNavController provides navController) {\n        NavHost(\n            navController = navController,\n            startDestination = \"home\"\n        ) {\n            composable(\"home\") {\n                HomeScreen(navController = navController)\n            }\n            composable(\"camera_navigation/{destination}/{startLocation}\") { backStackEntry ->\n                val encodedDestination = backStackEntry.arguments?.getString(\"destination\") ?: \"Unbekanntes Ziel\"\n                val encodedStartLocation = backStackEntry.arguments?.getString(\"startLocation\") ?: \"Unbekannter Start\"\n                val destination = URLDecoder.decode(encodedDestination, StandardCharsets.UTF_8.toString())\n                val startLocation = URLDecoder.decode(encodedStartLocation, StandardCharsets.UTF_8.toString())\n                CameraNavigation(\n                    destination = destination,\n                    startLocation = startLocation\n                )\n            }\n            composable(\"open_cv_camera_activity\") {\n                OpenCvCameraActivity();\n            }\n\n            // Hier können später weitere Screens hinzugefügt werden:\n            // composable(\"ar_view\") { ARScreen(navController = navController) }\n            // composable(\"settings\") { SettingsScreen(navController = navController) }\n        }\n    }\n}\n\n@Preview(showBackground = true)\n@Composable\nprivate fun ARWalkingAppPreview() {\n    ARWalkingTheme {\n        ARWalkingApp()\n    }\n}","baseTimestamp":1754049441966,"deltas":[{"timestamp":1754232021482,"changes":[{"type":"DELETE","lineNumber":84,"oldContent":"        // Sofort Feature Mapping und Upload-Komponenten initialisieren"},{"type":"DELETE","lineNumber":85,"oldContent":"        Log.i(\"MainActivity\", \"Initialisiere Feature Mapping und Upload-Komponenten beim App-Start...\")"},{"type":"INSERT","lineNumber":84,"content":"        // Sofort Feature Mapping initialisieren"},{"type":"INSERT","lineNumber":85,"content":"        Log.i(\"MainActivity\", \"Initialisiere Feature Mapping beim App-Start...\")"},{"type":"DELETE","lineNumber":87,"oldContent":"        routeViewModel.startUploadComponents(this)"}]},{"timestamp":1754250695407,"changes":[{"type":"MODIFY","lineNumber":26,"content":"","oldContent":"import com.example.arwalking.screens.LandmarkManagementScreen"}]},{"timestamp":1754250700368,"changes":[{"type":"MODIFY","lineNumber":104,"content":"            ","oldContent":"            // weitere verwendung von navigationRoute...."},{"type":"MODIFY","lineNumber":122,"content":"","oldContent":"    CompositionLocalProvider(LocalNavController provides navController) {"},{"type":"INSERT","lineNumber":131,"content":"        ) {"},{"type":"DELETE","lineNumber":133,"oldContent":"                HomeScreen(navController = navController)"},{"type":"INSERT","lineNumber":143,"content":"                )"},{"type":"DELETE","lineNumber":144,"oldContent":"            composable(\"open_cv_camera_activity\") {"},{"type":"DELETE","lineNumber":145,"oldContent":"            composable(\"training_mode\") {"},{"type":"DELETE","lineNumber":146,"oldContent":"                LandmarkManagementScreen(navController = navController)"},{"type":"DELETE","lineNumber":147,"oldContent":"            }"},{"type":"DELETE","lineNumber":148,"oldContent":"            composable(\"image_management\") {"},{"type":"DELETE","lineNumber":149,"oldContent":"                com.example.arwalking.screens.ImageManagementScreen(navController = navController)"},{"type":"DELETE","lineNumber":150,"oldContent":"            }"},{"type":"INSERT","lineNumber":147,"content":""},{"type":"INSERT","lineNumber":151,"content":"        }"},{"type":"DELETE","lineNumber":159,"oldContent":""},{"type":"INSERT","lineNumber":155,"content":"@Preview(showBackground = true)"}]},{"timestamp":1754313796183,"changes":[{"type":"DELETE","lineNumber":68,"oldContent":"        // OpenCV initialisieren (Stub für lokale Entwicklung)"},{"type":"DELETE","lineNumber":70,"oldContent":"            // Simuliere OpenCV Initialisierung"},{"type":"DELETE","lineNumber":71,"oldContent":"            Log.i(\"MainActivity\", \"OpenCV Stub loaded successfully\")"},{"type":"DELETE","lineNumber":72,"oldContent":"        } catch (e: Exception) {"},{"type":"DELETE","lineNumber":73,"oldContent":"            Log.e(\"MainActivity\", \"OpenCV Stub initialization failed: ${e.message}\")"},{"type":"DELETE","lineNumber":74,"oldContent":"            Toast.makeText(this, \"OpenCV initialization failed!\", Toast.LENGTH_LONG).show()"},{"type":"DELETE","lineNumber":75,"oldContent":"            return"},{"type":"DELETE","lineNumber":76,"oldContent":"        }"},{"type":"INSERT","lineNumber":69,"content":"            Log.i(\"MainActivity\", \"Starting MainActivity...\")"},{"type":"INSERT","lineNumber":71,"content":"            // ViewModel erstellen"},{"type":"INSERT","lineNumber":72,"content":"            routeViewModel = ViewModelProvider(this)[RouteViewModel::class.java]"},{"type":"INSERT","lineNumber":74,"content":"            enableEdgeToEdge()"},{"type":"INSERT","lineNumber":75,"content":"            "},{"type":"INSERT","lineNumber":76,"content":"            // UI zuerst setzen"},{"type":"INSERT","lineNumber":77,"content":"            setContent {"},{"type":"INSERT","lineNumber":78,"content":"                ARWalkingTheme {"},{"type":"INSERT","lineNumber":79,"content":"                    Surface("},{"type":"INSERT","lineNumber":80,"content":"                        modifier = Modifier.fillMaxSize(),"},{"type":"INSERT","lineNumber":81,"content":"                        color = MaterialTheme.colorScheme.background"},{"type":"INSERT","lineNumber":82,"content":"                    ) {"},{"type":"INSERT","lineNumber":83,"content":"                        ARWalkingApp()"},{"type":"INSERT","lineNumber":84,"content":"                    }"},{"type":"INSERT","lineNumber":85,"content":"                }"},{"type":"INSERT","lineNumber":86,"content":"            }"},{"type":"INSERT","lineNumber":88,"content":"            // Initialisierung asynchron durchführen"},{"type":"INSERT","lineNumber":89,"content":"            initializeAppAsync()"},{"type":"DELETE","lineNumber":81,"oldContent":"        // ViewModel erstellen"},{"type":"DELETE","lineNumber":82,"oldContent":"        routeViewModel = ViewModelProvider(this)[RouteViewModel::class.java]"},{"type":"INSERT","lineNumber":91,"content":"        } catch (e: Exception) {"},{"type":"INSERT","lineNumber":92,"content":"            Log.e(\"MainActivity\", \"Error in onCreate: ${e.message}\", e)"},{"type":"INSERT","lineNumber":93,"content":"            Toast.makeText(this, \"App initialization failed: ${e.message}\", Toast.LENGTH_LONG).show()"},{"type":"INSERT","lineNumber":94,"content":"        }"},{"type":"INSERT","lineNumber":95,"content":"    }"},{"type":"DELETE","lineNumber":84,"oldContent":"        // Sofort Feature Mapping initialisieren"},{"type":"DELETE","lineNumber":85,"oldContent":"        Log.i(\"MainActivity\", \"Initialisiere Feature Mapping beim App-Start...\")"},{"type":"DELETE","lineNumber":86,"oldContent":"        routeViewModel.initializeStorage(this)"},{"type":"INSERT","lineNumber":97,"content":"    private fun initializeAppAsync() {"},{"type":"INSERT","lineNumber":98,"content":"        try {"},{"type":"INSERT","lineNumber":99,"content":"            Log.i(\"MainActivity\", \"Starting async initialization...\")"},{"type":"INSERT","lineNumber":100,"content":"            "},{"type":"INSERT","lineNumber":101,"content":"            // Feature Mapping initialisieren (asynchron)"},{"type":"INSERT","lineNumber":102,"content":"            routeViewModel.initializeStorage(this)"},{"type":"DELETE","lineNumber":88,"oldContent":"        enableEdgeToEdge()"},{"type":"DELETE","lineNumber":89,"oldContent":"        // Entferne checkCameraAndLaunch() - wird über Navigation gehandhabt"},{"type":"DELETE","lineNumber":90,"oldContent":"        setContent {"},{"type":"DELETE","lineNumber":91,"oldContent":"            ARWalkingTheme {"},{"type":"DELETE","lineNumber":92,"oldContent":"                Surface("},{"type":"DELETE","lineNumber":93,"oldContent":"                    modifier = Modifier.fillMaxSize(),"},{"type":"DELETE","lineNumber":94,"oldContent":"                    color = MaterialTheme.colorScheme.background"},{"type":"DELETE","lineNumber":95,"oldContent":"                ) {"},{"type":"DELETE","lineNumber":96,"oldContent":"                    ARWalkingApp()"},{"type":"INSERT","lineNumber":104,"content":"            // Route laden (asynchron)"},{"type":"INSERT","lineNumber":105,"content":"            val navigationRoute = routeViewModel.loadNavigationRoute(this)"},{"type":"INSERT","lineNumber":106,"content":"            if (navigationRoute != null) {"},{"type":"INSERT","lineNumber":107,"content":"                routeViewModel.logNavigationRoute(navigationRoute)"},{"type":"INSERT","lineNumber":108,"content":"                routeViewModel.enableStorageSystemImmediately(this)"},{"type":"INSERT","lineNumber":109,"content":"                "},{"type":"INSERT","lineNumber":110,"content":"                // System-Validierung nur im Debug-Modus"},{"type":"INSERT","lineNumber":111,"content":"                if (BuildConfig.DEBUG) {"},{"type":"INSERT","lineNumber":112,"content":"                    try {"},{"type":"INSERT","lineNumber":113,"content":"                        val systemValidator = SystemValidator(this)"},{"type":"INSERT","lineNumber":114,"content":"                        systemValidator.validateSystem(routeViewModel)"},{"type":"INSERT","lineNumber":115,"content":"                        systemValidator.simulateFeatureMatching(routeViewModel, \"prof_ludwig_office\")"},{"type":"INSERT","lineNumber":116,"content":"                    } catch (e: Exception) {"},{"type":"INSERT","lineNumber":117,"content":"                        Log.w(\"MainActivity\", \"Debug validation failed: ${e.message}\")"},{"type":"INSERT","lineNumber":118,"content":"                    }"},{"type":"INSERT","lineNumber":120,"content":"            } else {"},{"type":"INSERT","lineNumber":121,"content":"                Log.w(\"MainActivity\", \"Navigation route could not be loaded\")"},{"type":"DELETE","lineNumber":99,"oldContent":"        }"},{"type":"DELETE","lineNumber":100,"oldContent":"        val navigationRoute = routeViewModel.loadNavigationRoute(this)"},{"type":"DELETE","lineNumber":101,"oldContent":"        if (navigationRoute != null) {"},{"type":"DELETE","lineNumber":102,"oldContent":"            // Objekt ist bereit für weitere Verwendung"},{"type":"DELETE","lineNumber":103,"oldContent":"            routeViewModel.logNavigationRoute(navigationRoute)"},{"type":"DELETE","lineNumber":105,"oldContent":"            // Feature Mapping ist bereits initialisiert, aktiviere es sofort"},{"type":"DELETE","lineNumber":106,"oldContent":"            routeViewModel.enableStorageSystemImmediately(this)"},{"type":"DELETE","lineNumber":107,"oldContent":"            "},{"type":"DELETE","lineNumber":108,"oldContent":"            // System-Validierung durchführen (nur im Debug-Modus)"},{"type":"DELETE","lineNumber":109,"oldContent":"            if (BuildConfig.DEBUG) {"},{"type":"DELETE","lineNumber":110,"oldContent":"                val systemValidator = SystemValidator(this)"},{"type":"DELETE","lineNumber":111,"oldContent":"                systemValidator.validateSystem(routeViewModel)"},{"type":"DELETE","lineNumber":112,"oldContent":"                "},{"type":"DELETE","lineNumber":113,"oldContent":"                // Simuliere Feature-Matching für Testzwecke"},{"type":"DELETE","lineNumber":114,"oldContent":"                systemValidator.simulateFeatureMatching(routeViewModel, \"prof_ludwig_office\")"},{"type":"DELETE","lineNumber":115,"oldContent":"            }"},{"type":"DELETE","lineNumber":116,"oldContent":"            "},{"type":"DELETE","lineNumber":117,"oldContent":"        } else {"},{"type":"DELETE","lineNumber":118,"oldContent":"            Log.e(\"MainActivity\", \"Fehler beim Laden der Route\")"},{"type":"INSERT","lineNumber":124,"content":"        } catch (e: Exception) {"},{"type":"INSERT","lineNumber":125,"content":"            Log.e(\"MainActivity\", \"Error in async initialization: ${e.message}\", e)"},{"type":"DELETE","lineNumber":127,"oldContent":"    CompositionLocalProvider(LocalNavController provides navController) {"},{"type":"DELETE","lineNumber":128,"oldContent":"        NavHost("},{"type":"DELETE","lineNumber":129,"oldContent":"            navController = navController,"},{"type":"DELETE","lineNumber":130,"oldContent":"            startDestination = \"home\""},{"type":"DELETE","lineNumber":131,"oldContent":"        ) {"},{"type":"DELETE","lineNumber":132,"oldContent":"            composable(\"home\") {"},{"type":"DELETE","lineNumber":133,"oldContent":"                HomeScreen(navController = navController)"},{"type":"INSERT","lineNumber":134,"content":"    try {"},{"type":"INSERT","lineNumber":135,"content":"        CompositionLocalProvider(LocalNavController provides navController) {"},{"type":"INSERT","lineNumber":136,"content":"            NavHost("},{"type":"INSERT","lineNumber":137,"content":"                navController = navController,"},{"type":"INSERT","lineNumber":138,"content":"                startDestination = \"home\""},{"type":"INSERT","lineNumber":139,"content":"            ) {"},{"type":"INSERT","lineNumber":140,"content":"                composable(\"home\") {"},{"type":"INSERT","lineNumber":141,"content":"                    try {"},{"type":"INSERT","lineNumber":142,"content":"                        HomeScreen(navController = navController)"},{"type":"INSERT","lineNumber":143,"content":"                    } catch (e: Exception) {"},{"type":"INSERT","lineNumber":144,"content":"                        Log.e(\"ARWalkingApp\", \"Error in HomeScreen: ${e.message}\", e)"},{"type":"INSERT","lineNumber":145,"content":"                        // Fallback UI"},{"type":"INSERT","lineNumber":146,"content":"                        Box("},{"type":"INSERT","lineNumber":147,"content":"                            modifier = Modifier.fillMaxSize(),"},{"type":"INSERT","lineNumber":148,"content":"                            contentAlignment = androidx.compose.ui.Alignment.Center"},{"type":"INSERT","lineNumber":149,"content":"                        ) {"},{"type":"INSERT","lineNumber":150,"content":"                            Text("},{"type":"INSERT","lineNumber":151,"content":"                                text = \"ArWalking\\nLoading...\","},{"type":"INSERT","lineNumber":152,"content":"                                textAlign = androidx.compose.ui.text.style.TextAlign.Center,"},{"type":"INSERT","lineNumber":153,"content":"                                style = MaterialTheme.typography.headlineMedium"},{"type":"INSERT","lineNumber":154,"content":"                            )"},{"type":"INSERT","lineNumber":155,"content":"                        }"},{"type":"INSERT","lineNumber":156,"content":"                    }"},{"type":"INSERT","lineNumber":157,"content":"                }"},{"type":"INSERT","lineNumber":158,"content":"                composable(\"camera_navigation/{destination}/{startLocation}\") { backStackEntry ->"},{"type":"INSERT","lineNumber":159,"content":"                    try {"},{"type":"INSERT","lineNumber":160,"content":"                        val encodedDestination = backStackEntry.arguments?.getString(\"destination\") ?: \"Unbekanntes Ziel\""},{"type":"INSERT","lineNumber":161,"content":"                        val encodedStartLocation = backStackEntry.arguments?.getString(\"startLocation\") ?: \"Unbekannter Start\""},{"type":"INSERT","lineNumber":162,"content":"                        val destination = URLDecoder.decode(encodedDestination, StandardCharsets.UTF_8.toString())"},{"type":"INSERT","lineNumber":163,"content":"                        val startLocation = URLDecoder.decode(encodedStartLocation, StandardCharsets.UTF_8.toString())"},{"type":"INSERT","lineNumber":164,"content":"                        CameraNavigation("},{"type":"INSERT","lineNumber":165,"content":"                            destination = destination,"},{"type":"INSERT","lineNumber":166,"content":"                            startLocation = startLocation"},{"type":"INSERT","lineNumber":167,"content":"                        )"},{"type":"INSERT","lineNumber":168,"content":"                    } catch (e: Exception) {"},{"type":"INSERT","lineNumber":169,"content":"                        Log.e(\"ARWalkingApp\", \"Error in CameraNavigation: ${e.message}\", e)"},{"type":"INSERT","lineNumber":170,"content":"                        // Fallback UI"},{"type":"INSERT","lineNumber":171,"content":"                        Box("},{"type":"INSERT","lineNumber":172,"content":"                            modifier = Modifier.fillMaxSize(),"},{"type":"INSERT","lineNumber":173,"content":"                            contentAlignment = androidx.compose.ui.Alignment.Center"},{"type":"INSERT","lineNumber":174,"content":"                        ) {"},{"type":"INSERT","lineNumber":175,"content":"                            Text("},{"type":"INSERT","lineNumber":176,"content":"                                text = \"Navigation Error\\n${e.message}\","},{"type":"INSERT","lineNumber":177,"content":"                                textAlign = androidx.compose.ui.text.style.TextAlign.Center,"},{"type":"INSERT","lineNumber":178,"content":"                                style = MaterialTheme.typography.bodyLarge"},{"type":"INSERT","lineNumber":179,"content":"                            )"},{"type":"INSERT","lineNumber":180,"content":"                        }"},{"type":"INSERT","lineNumber":181,"content":"                    }"},{"type":"INSERT","lineNumber":182,"content":"                }"},{"type":"DELETE","lineNumber":135,"oldContent":"            composable(\"camera_navigation/{destination}/{startLocation}\") { backStackEntry ->"},{"type":"DELETE","lineNumber":136,"oldContent":"                val encodedDestination = backStackEntry.arguments?.getString(\"destination\") ?: \"Unbekanntes Ziel\""},{"type":"DELETE","lineNumber":137,"oldContent":"                val encodedStartLocation = backStackEntry.arguments?.getString(\"startLocation\") ?: \"Unbekannter Start\""},{"type":"DELETE","lineNumber":138,"oldContent":"                val destination = URLDecoder.decode(encodedDestination, StandardCharsets.UTF_8.toString())"},{"type":"DELETE","lineNumber":139,"oldContent":"                val startLocation = URLDecoder.decode(encodedStartLocation, StandardCharsets.UTF_8.toString())"},{"type":"DELETE","lineNumber":140,"oldContent":"                CameraNavigation("},{"type":"DELETE","lineNumber":141,"oldContent":"                    destination = destination,"},{"type":"DELETE","lineNumber":142,"oldContent":"                    startLocation = startLocation"},{"type":"DELETE","lineNumber":143,"oldContent":"                )"},{"type":"DELETE","lineNumber":144,"oldContent":"            }"},{"type":"DELETE","lineNumber":145,"oldContent":""},{"type":"DELETE","lineNumber":147,"oldContent":""},{"type":"DELETE","lineNumber":148,"oldContent":""},{"type":"DELETE","lineNumber":149,"oldContent":"            // Hier können später weitere Screens hinzugefügt werden:"},{"type":"DELETE","lineNumber":150,"oldContent":"            // composable(\"ar_view\") { ARScreen(navController = navController) }"},{"type":"DELETE","lineNumber":151,"oldContent":"@Preview(showBackground = true)"},{"type":"DELETE","lineNumber":152,"oldContent":"            // composable(\"settings\") { SettingsScreen(navController = navController) }"},{"type":"DELETE","lineNumber":153,"oldContent":"            // composable(\"settings\") { SettingsScreen(navController = navController) }"},{"type":"INSERT","lineNumber":185,"content":"    } catch (e: Exception) {"},{"type":"INSERT","lineNumber":186,"content":"        Log.e(\"ARWalkingApp\", \"Critical error in ARWalkingApp: ${e.message}\", e)"},{"type":"INSERT","lineNumber":187,"content":"        // Minimal fallback UI"},{"type":"INSERT","lineNumber":188,"content":"        Box("},{"type":"INSERT","lineNumber":189,"content":"            modifier = Modifier.fillMaxSize(),"},{"type":"INSERT","lineNumber":190,"content":"            contentAlignment = androidx.compose.ui.Alignment.Center"},{"type":"INSERT","lineNumber":191,"content":"        ) {"},{"type":"INSERT","lineNumber":192,"content":"            Text("},{"type":"INSERT","lineNumber":193,"content":"                text = \"ArWalking\\nStarting...\","},{"type":"INSERT","lineNumber":194,"content":"                textAlign = androidx.compose.ui.text.style.TextAlign.Center"},{"type":"INSERT","lineNumber":195,"content":"            )"},{"type":"INSERT","lineNumber":198,"content":"}"}]},{"timestamp":1754313804477,"changes":[{"type":"INSERT","lineNumber":14,"content":"import androidx.compose.foundation.layout.Box"},{"type":"INSERT","lineNumber":16,"content":"import androidx.compose.material3.Text"},{"type":"DELETE","lineNumber":68,"oldContent":"            Log.i(\"MainActivity\", \"Starting MainActivity...\")"},{"type":"INSERT","lineNumber":71,"content":"            Log.i(\"MainActivity\", \"Starting MainActivity...\")"},{"type":"INSERT","lineNumber":72,"content":""},{"type":"INSERT","lineNumber":75,"content":""},{"type":"DELETE","lineNumber":76,"oldContent":""},{"type":"DELETE","lineNumber":78,"oldContent":""},{"type":"DELETE","lineNumber":80,"oldContent":""},{"type":"DELETE","lineNumber":82,"oldContent":""},{"type":"DELETE","lineNumber":86,"oldContent":""},{"type":"INSERT","lineNumber":92,"content":""},{"type":"INSERT","lineNumber":98,"content":""},{"type":"DELETE","lineNumber":99,"oldContent":"                }"},{"type":"DELETE","lineNumber":101,"oldContent":"            }"},{"type":"INSERT","lineNumber":105,"content":""},{"type":"DELETE","lineNumber":107,"oldContent":"            "},{"type":"MODIFY","lineNumber":121,"content":"                }","oldContent":"        }"},{"type":"MODIFY","lineNumber":124,"content":"            }","oldContent":"    }"},{"type":"INSERT","lineNumber":125,"content":"            "},{"type":"INSERT","lineNumber":126,"content":"        } catch (e: Exception) {"},{"type":"INSERT","lineNumber":127,"content":"            Log.e(\"MainActivity\", \"Error in async initialization: ${e.message}\", e)"},{"type":"INSERT","lineNumber":128,"content":"        }"},{"type":"INSERT","lineNumber":129,"content":"    }"},{"type":"DELETE","lineNumber":129,"oldContent":"        } catch (e: Exception) {"},{"type":"DELETE","lineNumber":131,"oldContent":"            Log.e(\"MainActivity\", \"Error in async initialization: ${e.message}\", e)"},{"type":"DELETE","lineNumber":135,"oldContent":"            }"},{"type":"DELETE","lineNumber":148,"oldContent":"        }"},{"type":"DELETE","lineNumber":157,"oldContent":"}"},{"type":"DELETE","lineNumber":159,"oldContent":""},{"type":"DELETE","lineNumber":161,"oldContent":"}"},{"type":"DELETE","lineNumber":163,"oldContent":"            )"},{"type":"DELETE","lineNumber":165,"oldContent":"                textAlign = androidx.compose.ui.text.style.TextAlign.Center"},{"type":"DELETE","lineNumber":167,"oldContent":"                text = \"ArWalking\\nStarting...\","},{"type":"DELETE","lineNumber":169,"oldContent":"            Text("},{"type":"DELETE","lineNumber":171,"oldContent":"        ) {"},{"type":"DELETE","lineNumber":173,"oldContent":"            contentAlignment = androidx.compose.ui.Alignment.Center"},{"type":"DELETE","lineNumber":175,"oldContent":"            modifier = Modifier.fillMaxSize(),"},{"type":"DELETE","lineNumber":177,"oldContent":"        Box("},{"type":"DELETE","lineNumber":179,"oldContent":"        // Minimal fallback UI"},{"type":"DELETE","lineNumber":181,"oldContent":"        Log.e(\"ARWalkingApp\", \"Critical error in ARWalkingApp: ${e.message}\", e)"},{"type":"DELETE","lineNumber":183,"oldContent":"    } catch (e: Exception) {"},{"type":"DELETE","lineNumber":185,"oldContent":"                }"},{"type":"DELETE","lineNumber":187,"oldContent":"                    }"},{"type":"DELETE","lineNumber":189,"oldContent":"                        }"},{"type":"DELETE","lineNumber":191,"oldContent":"                            )"},{"type":"DELETE","lineNumber":193,"oldContent":"                                style = MaterialTheme.typography.bodyLarge"},{"type":"DELETE","lineNumber":195,"oldContent":"                                textAlign = androidx.compose.ui.text.style.TextAlign.Center,"},{"type":"DELETE","lineNumber":197,"oldContent":"                                text = \"Navigation Error\\n${e.message}\","},{"type":"INSERT","lineNumber":178,"content":"                                text = \"Navigation Error\\n${e.message}\","},{"type":"INSERT","lineNumber":179,"content":"                                textAlign = androidx.compose.ui.text.style.TextAlign.Center,"},{"type":"INSERT","lineNumber":180,"content":"                                style = MaterialTheme.typography.bodyLarge"},{"type":"INSERT","lineNumber":181,"content":"                            )"},{"type":"INSERT","lineNumber":182,"content":"                        }"},{"type":"INSERT","lineNumber":183,"content":"                    }"},{"type":"INSERT","lineNumber":184,"content":"                }"},{"type":"INSERT","lineNumber":185,"content":"            }"},{"type":"INSERT","lineNumber":186,"content":"        }"},{"type":"INSERT","lineNumber":187,"content":"    } catch (e: Exception) {"},{"type":"INSERT","lineNumber":188,"content":"        Log.e(\"ARWalkingApp\", \"Critical error in ARWalkingApp: ${e.message}\", e)"},{"type":"INSERT","lineNumber":189,"content":"        // Minimal fallback UI"},{"type":"INSERT","lineNumber":190,"content":"        Box("},{"type":"INSERT","lineNumber":191,"content":"            modifier = Modifier.fillMaxSize(),"},{"type":"INSERT","lineNumber":192,"content":"            contentAlignment = androidx.compose.ui.Alignment.Center"},{"type":"INSERT","lineNumber":193,"content":"        ) {"},{"type":"INSERT","lineNumber":194,"content":"            Text("},{"type":"INSERT","lineNumber":195,"content":"                text = \"ArWalking\\nStarting...\","},{"type":"INSERT","lineNumber":196,"content":"                textAlign = androidx.compose.ui.text.style.TextAlign.Center"},{"type":"INSERT","lineNumber":197,"content":"            )"},{"type":"INSERT","lineNumber":198,"content":"        }"},{"type":"INSERT","lineNumber":199,"content":"    }"},{"type":"INSERT","lineNumber":200,"content":"}"},{"type":"INSERT","lineNumber":201,"content":""},{"type":"INSERT","lineNumber":202,"content":"@Preview(showBackground = true)"},{"type":"INSERT","lineNumber":203,"content":"@Composable"},{"type":"INSERT","lineNumber":204,"content":"private fun ARWalkingAppPreview() {"},{"type":"INSERT","lineNumber":205,"content":"    ARWalkingTheme {"},{"type":"INSERT","lineNumber":206,"content":"        ARWalkingApp()"},{"type":"INSERT","lineNumber":207,"content":"    }"},{"type":"INSERT","lineNumber":208,"content":"}"}]},{"timestamp":1754313833862,"changes":[{"type":"MODIFY","lineNumber":17,"content":"import com.example.arwalking.screens.CameraNavigation","oldContent":"import com.example.arwalking.screens.CameraNavigation"},{"type":"DELETE","lineNumber":71,"oldContent":"            // ViewModel erstellen"},{"type":"INSERT","lineNumber":72,"content":""},{"type":"INSERT","lineNumber":73,"content":"            // ViewModel erstellen"},{"type":"DELETE","lineNumber":78,"oldContent":""},{"type":"MODIFY","lineNumber":92,"content":"","oldContent":""},{"type":"MODIFY","lineNumber":105,"content":"","oldContent":""},{"type":"INSERT","lineNumber":120,"content":"                    }"},{"type":"DELETE","lineNumber":121,"oldContent":"        }"},{"type":"INSERT","lineNumber":123,"content":"                Log.w(\"MainActivity\", \"Navigation route could not be loaded\")"},{"type":"DELETE","lineNumber":125,"oldContent":"                Log.w(\"MainActivity\", \"Navigation route could not be loaded\")"},{"type":"DELETE","lineNumber":127,"oldContent":"}"},{"type":"DELETE","lineNumber":129,"oldContent":""},{"type":"DELETE","lineNumber":131,"oldContent":"@Composable"},{"type":"INSERT","lineNumber":130,"content":"}"},{"type":"INSERT","lineNumber":131,"content":""},{"type":"INSERT","lineNumber":132,"content":"@Composable"},{"type":"DELETE","lineNumber":136,"oldContent":"    try {"},{"type":"DELETE","lineNumber":137,"oldContent":"        CompositionLocalProvider(LocalNavController provides navController) {"},{"type":"DELETE","lineNumber":138,"oldContent":"            NavHost("},{"type":"DELETE","lineNumber":139,"oldContent":"                navController = navController,"},{"type":"DELETE","lineNumber":140,"oldContent":"                startDestination = \"home\""},{"type":"DELETE","lineNumber":141,"oldContent":"            ) {"},{"type":"DELETE","lineNumber":142,"oldContent":"                composable(\"home\") {"},{"type":"DELETE","lineNumber":143,"oldContent":"                    try {"},{"type":"DELETE","lineNumber":144,"oldContent":"                        HomeScreen(navController = navController)"},{"type":"DELETE","lineNumber":145,"oldContent":"                    } catch (e: Exception) {"},{"type":"DELETE","lineNumber":146,"oldContent":"                        Log.e(\"ARWalkingApp\", \"Error in HomeScreen: ${e.message}\", e)"},{"type":"DELETE","lineNumber":147,"oldContent":"                        // Fallback UI"},{"type":"DELETE","lineNumber":148,"oldContent":"                        Box("},{"type":"DELETE","lineNumber":149,"oldContent":"                            modifier = Modifier.fillMaxSize(),"},{"type":"DELETE","lineNumber":150,"oldContent":"                            contentAlignment = androidx.compose.ui.Alignment.Center"},{"type":"DELETE","lineNumber":151,"oldContent":"                        ) {"},{"type":"DELETE","lineNumber":152,"oldContent":"                            Text("},{"type":"DELETE","lineNumber":153,"oldContent":"                                text = \"ArWalking\\nLoading...\","},{"type":"DELETE","lineNumber":154,"oldContent":"                                textAlign = androidx.compose.ui.text.style.TextAlign.Center,"},{"type":"DELETE","lineNumber":155,"oldContent":"                                style = MaterialTheme.typography.headlineMedium"},{"type":"DELETE","lineNumber":156,"oldContent":"                            )"},{"type":"DELETE","lineNumber":157,"oldContent":"                        }"},{"type":"DELETE","lineNumber":158,"oldContent":"                    }"},{"type":"DELETE","lineNumber":159,"oldContent":"                }"},{"type":"DELETE","lineNumber":160,"oldContent":"                composable(\"camera_navigation/{destination}/{startLocation}\") { backStackEntry ->"},{"type":"DELETE","lineNumber":161,"oldContent":"                    try {"},{"type":"DELETE","lineNumber":162,"oldContent":"                        val encodedDestination = backStackEntry.arguments?.getString(\"destination\") ?: \"Unbekanntes Ziel\""},{"type":"DELETE","lineNumber":163,"oldContent":"                        val encodedStartLocation = backStackEntry.arguments?.getString(\"startLocation\") ?: \"Unbekannter Start\""},{"type":"DELETE","lineNumber":164,"oldContent":"                        val destination = URLDecoder.decode(encodedDestination, StandardCharsets.UTF_8.toString())"},{"type":"DELETE","lineNumber":165,"oldContent":"                        val startLocation = URLDecoder.decode(encodedStartLocation, StandardCharsets.UTF_8.toString())"},{"type":"DELETE","lineNumber":166,"oldContent":"                        CameraNavigation("},{"type":"DELETE","lineNumber":167,"oldContent":"                                text = \"Navigation Error\\n${e.message}\","},{"type":"DELETE","lineNumber":168,"oldContent":"                            destination = destination,"},{"type":"DELETE","lineNumber":169,"oldContent":"                                textAlign = androidx.compose.ui.text.style.TextAlign.Center,"},{"type":"DELETE","lineNumber":170,"oldContent":"                                style = MaterialTheme.typography.bodyLarge"},{"type":"DELETE","lineNumber":171,"oldContent":"                            startLocation = startLocation"},{"type":"DELETE","lineNumber":172,"oldContent":"                            )"},{"type":"DELETE","lineNumber":173,"oldContent":"                        }"},{"type":"DELETE","lineNumber":174,"oldContent":"                        )"},{"type":"DELETE","lineNumber":175,"oldContent":"                    }"},{"type":"DELETE","lineNumber":176,"oldContent":"                }"},{"type":"DELETE","lineNumber":177,"oldContent":"                    } catch (e: Exception) {"},{"type":"INSERT","lineNumber":136,"content":"    CompositionLocalProvider(LocalNavController provides navController) {"},{"type":"INSERT","lineNumber":137,"content":"        NavHost("},{"type":"INSERT","lineNumber":138,"content":"            navController = navController,"},{"type":"INSERT","lineNumber":139,"content":"            startDestination = \"home\""},{"type":"INSERT","lineNumber":140,"content":"        ) {"},{"type":"INSERT","lineNumber":141,"content":"            composable(\"home\") {"},{"type":"INSERT","lineNumber":142,"content":"                HomeScreen(navController = navController)"},{"type":"INSERT","lineNumber":144,"content":"            composable(\"camera_navigation/{destination}/{startLocation}\") { backStackEntry ->"},{"type":"INSERT","lineNumber":145,"content":"                val encodedDestination = backStackEntry.arguments?.getString(\"destination\") ?: \"Unbekanntes Ziel\""},{"type":"INSERT","lineNumber":146,"content":"                val encodedStartLocation = backStackEntry.arguments?.getString(\"startLocation\") ?: \"Unbekannter Start\""},{"type":"INSERT","lineNumber":147,"content":"                val destination = URLDecoder.decode(encodedDestination, StandardCharsets.UTF_8.toString())"},{"type":"INSERT","lineNumber":148,"content":"                val startLocation = URLDecoder.decode(encodedStartLocation, StandardCharsets.UTF_8.toString())"},{"type":"INSERT","lineNumber":149,"content":"                CameraNavigation("},{"type":"INSERT","lineNumber":150,"content":"                    destination = destination,"},{"type":"INSERT","lineNumber":151,"content":"                    startLocation = startLocation"},{"type":"INSERT","lineNumber":152,"content":"                )"},{"type":"INSERT","lineNumber":153,"content":"            }"},{"type":"DELETE","lineNumber":180,"oldContent":"                        Log.e(\"ARWalkingApp\", \"Error in CameraNavigation: ${e.message}\", e)"},{"type":"DELETE","lineNumber":181,"oldContent":"    } catch (e: Exception) {"},{"type":"DELETE","lineNumber":182,"oldContent":"        Log.e(\"ARWalkingApp\", \"Critical error in ARWalkingApp: ${e.message}\", e)"},{"type":"DELETE","lineNumber":183,"oldContent":"                        // Fallback UI"},{"type":"DELETE","lineNumber":184,"oldContent":"        // Minimal fallback UI"},{"type":"DELETE","lineNumber":185,"oldContent":"        Box("},{"type":"DELETE","lineNumber":186,"oldContent":"                        Box("},{"type":"DELETE","lineNumber":187,"oldContent":"            modifier = Modifier.fillMaxSize(),"},{"type":"DELETE","lineNumber":188,"oldContent":"            contentAlignment = androidx.compose.ui.Alignment.Center"},{"type":"DELETE","lineNumber":189,"oldContent":"                            modifier = Modifier.fillMaxSize(),"},{"type":"DELETE","lineNumber":190,"oldContent":"        ) {"},{"type":"DELETE","lineNumber":191,"oldContent":"            Text("},{"type":"DELETE","lineNumber":192,"oldContent":"                            contentAlignment = androidx.compose.ui.Alignment.Center"},{"type":"DELETE","lineNumber":193,"oldContent":"                text = \"ArWalking\\nStarting...\","},{"type":"DELETE","lineNumber":194,"oldContent":"                textAlign = androidx.compose.ui.text.style.TextAlign.Center"},{"type":"DELETE","lineNumber":195,"oldContent":"                        ) {"},{"type":"DELETE","lineNumber":196,"oldContent":"            )"},{"type":"DELETE","lineNumber":197,"oldContent":"        }"},{"type":"DELETE","lineNumber":198,"oldContent":"                            Text("},{"type":"DELETE","lineNumber":201,"oldContent":"}"},{"type":"DELETE","lineNumber":202,"oldContent":"    }"},{"type":"DELETE","lineNumber":204,"oldContent":"        ARWalkingApp()"},{"type":"DELETE","lineNumber":206,"oldContent":"    ARWalkingTheme {"},{"type":"INSERT","lineNumber":161,"content":"    ARWalkingTheme {"},{"type":"INSERT","lineNumber":162,"content":"        ARWalkingApp()"},{"type":"INSERT","lineNumber":163,"content":"    }"},{"type":"INSERT","lineNumber":164,"content":"}"}]},{"timestamp":1754313847320,"changes":[{"type":"INSERT","lineNumber":16,"content":"import androidx.compose.material3.Text"},{"type":"DELETE","lineNumber":17,"oldContent":"import com.example.arwalking.screens.CameraNavigation"},{"type":"INSERT","lineNumber":27,"content":"import com.example.arwalking.screens.SimpleHomeScreen"},{"type":"DELETE","lineNumber":71,"oldContent":""},{"type":"INSERT","lineNumber":73,"content":""},{"type":"INSERT","lineNumber":92,"content":"            initializeAppAsync()"},{"type":"DELETE","lineNumber":92,"oldContent":""},{"type":"INSERT","lineNumber":105,"content":"            routeViewModel.initializeStorage(this)"},{"type":"DELETE","lineNumber":105,"oldContent":""},{"type":"DELETE","lineNumber":128,"oldContent":"}"},{"type":"INSERT","lineNumber":130,"content":"    }"},{"type":"INSERT","lineNumber":131,"content":"}"},{"type":"DELETE","lineNumber":132,"oldContent":"    }"},{"type":"INSERT","lineNumber":144,"content":"            }"},{"type":"INSERT","lineNumber":155,"content":"        }"},{"type":"INSERT","lineNumber":156,"content":"    }"},{"type":"INSERT","lineNumber":157,"content":"}"},{"type":"INSERT","lineNumber":158,"content":""},{"type":"INSERT","lineNumber":159,"content":"@Preview(showBackground = true)"},{"type":"INSERT","lineNumber":160,"content":"@Composable"},{"type":"INSERT","lineNumber":161,"content":"private fun ARWalkingAppPreview() {"},{"type":"DELETE","lineNumber":157,"oldContent":"            }"},{"type":"DELETE","lineNumber":158,"oldContent":"        }"},{"type":"DELETE","lineNumber":159,"oldContent":"    }"},{"type":"DELETE","lineNumber":160,"oldContent":"private fun ARWalkingAppPreview() {"},{"type":"DELETE","lineNumber":161,"oldContent":""}]},{"timestamp":1754313851782,"changes":[{"type":"MODIFY","lineNumber":93,"content":"","oldContent":""},{"type":"MODIFY","lineNumber":106,"content":"","oldContent":""},{"type":"MODIFY","lineNumber":132,"content":"","oldContent":""},{"type":"DELETE","lineNumber":143,"oldContent":"                HomeScreen(navController = navController)"},{"type":"DELETE","lineNumber":144,"oldContent":"            composable(\"camera_navigation/{destination}/{startLocation}\") { backStackEntry ->"},{"type":"INSERT","lineNumber":143,"content":"                SimpleHomeScreen(navController = navController)"},{"type":"INSERT","lineNumber":145,"content":"            composable(\"camera_navigation/{destination}/{startLocation}\") { backStackEntry ->"},{"type":"DELETE","lineNumber":155,"oldContent":"    ARWalkingTheme {"},{"type":"DELETE","lineNumber":156,"oldContent":"        ARWalkingApp()"},{"type":"DELETE","lineNumber":159,"oldContent":"    }"},{"type":"DELETE","lineNumber":161,"oldContent":"}"},{"type":"DELETE","lineNumber":166,"oldContent":"@Preview(showBackground = true)"},{"type":"DELETE","lineNumber":167,"oldContent":"@Composable"},{"type":"DELETE","lineNumber":168,"oldContent":"private fun ARWalkingAppPreview() {"},{"type":"INSERT","lineNumber":162,"content":"    ARWalkingTheme {"},{"type":"INSERT","lineNumber":163,"content":"        ARWalkingApp()"},{"type":"INSERT","lineNumber":164,"content":"    }"},{"type":"INSERT","lineNumber":165,"content":"}"}]},{"timestamp":1754313907922,"changes":[{"type":"INSERT","lineNumber":92,"content":"            initializeAppAsync()"},{"type":"DELETE","lineNumber":93,"oldContent":""},{"type":"DELETE","lineNumber":101,"oldContent":"        try {"},{"type":"DELETE","lineNumber":102,"oldContent":"            Log.i(\"MainActivity\", \"Starting async initialization...\")"},{"type":"DELETE","lineNumber":103,"oldContent":"            "},{"type":"DELETE","lineNumber":104,"oldContent":"            // Feature Mapping initialisieren (asynchron)"},{"type":"DELETE","lineNumber":105,"oldContent":""},{"type":"DELETE","lineNumber":106,"oldContent":""},{"type":"DELETE","lineNumber":107,"oldContent":"            // Route laden (asynchron)"},{"type":"DELETE","lineNumber":108,"oldContent":"            val navigationRoute = routeViewModel.loadNavigationRoute(this)"},{"type":"DELETE","lineNumber":109,"oldContent":"            if (navigationRoute != null) {"},{"type":"DELETE","lineNumber":110,"oldContent":"                routeViewModel.logNavigationRoute(navigationRoute)"},{"type":"DELETE","lineNumber":111,"oldContent":"                routeViewModel.enableStorageSystemImmediately(this)"},{"type":"INSERT","lineNumber":101,"content":"        // Führe Initialisierung in einem separaten Thread aus"},{"type":"INSERT","lineNumber":102,"content":"        Thread {"},{"type":"INSERT","lineNumber":103,"content":"            try {"},{"type":"INSERT","lineNumber":104,"content":"                Log.i(\"MainActivity\", \"Starting async initialization...\")"},{"type":"DELETE","lineNumber":113,"oldContent":"                // System-Validierung nur im Debug-Modus"},{"type":"DELETE","lineNumber":114,"oldContent":"                if (BuildConfig.DEBUG) {"},{"type":"DELETE","lineNumber":115,"oldContent":"                    try {"},{"type":"DELETE","lineNumber":116,"oldContent":"                        val systemValidator = SystemValidator(this)"},{"type":"DELETE","lineNumber":117,"oldContent":"                        systemValidator.validateSystem(routeViewModel)"},{"type":"DELETE","lineNumber":118,"oldContent":"                        systemValidator.simulateFeatureMatching(routeViewModel, \"prof_ludwig_office\")"},{"type":"DELETE","lineNumber":119,"oldContent":"                    } catch (e: Exception) {"},{"type":"DELETE","lineNumber":120,"oldContent":"                        Log.w(\"MainActivity\", \"Debug validation failed: ${e.message}\")"},{"type":"INSERT","lineNumber":106,"content":"                // Feature Mapping initialisieren (asynchron)"},{"type":"INSERT","lineNumber":107,"content":"                routeViewModel.initializeStorage(this)"},{"type":"INSERT","lineNumber":108,"content":""},{"type":"INSERT","lineNumber":109,"content":"                // Route laden (asynchron)"},{"type":"INSERT","lineNumber":110,"content":"                val navigationRoute = routeViewModel.loadNavigationRoute(this)"},{"type":"INSERT","lineNumber":111,"content":"                if (navigationRoute != null) {"},{"type":"INSERT","lineNumber":112,"content":"                    routeViewModel.logNavigationRoute(navigationRoute)"},{"type":"INSERT","lineNumber":113,"content":"                    routeViewModel.enableStorageSystemImmediately(this)"},{"type":"INSERT","lineNumber":114,"content":"                    "},{"type":"INSERT","lineNumber":115,"content":"                    // System-Validierung nur im Debug-Modus"},{"type":"INSERT","lineNumber":116,"content":"                    if (BuildConfig.DEBUG) {"},{"type":"INSERT","lineNumber":117,"content":"                        try {"},{"type":"INSERT","lineNumber":118,"content":"                            val systemValidator = SystemValidator(this)"},{"type":"INSERT","lineNumber":119,"content":"                            systemValidator.validateSystem(routeViewModel)"},{"type":"INSERT","lineNumber":120,"content":"                            systemValidator.simulateFeatureMatching(routeViewModel, \"prof_ludwig_office\")"},{"type":"INSERT","lineNumber":121,"content":"                        } catch (e: Exception) {"},{"type":"INSERT","lineNumber":122,"content":"                            Log.w(\"MainActivity\", \"Debug validation failed: ${e.message}\")"},{"type":"INSERT","lineNumber":123,"content":"                        }"},{"type":"INSERT","lineNumber":125,"content":"                } else {"},{"type":"INSERT","lineNumber":126,"content":"                    Log.w(\"MainActivity\", \"Navigation route could not be loaded\")"},{"type":"DELETE","lineNumber":123,"oldContent":"            } else {"},{"type":"DELETE","lineNumber":124,"oldContent":"                Log.w(\"MainActivity\", \"Navigation route could not be loaded\")"},{"type":"INSERT","lineNumber":128,"content":"                "},{"type":"INSERT","lineNumber":129,"content":"                Log.i(\"MainActivity\", \"Async initialization completed successfully\")"},{"type":"INSERT","lineNumber":130,"content":"                "},{"type":"INSERT","lineNumber":131,"content":"            } catch (e: Exception) {"},{"type":"INSERT","lineNumber":132,"content":"                Log.e(\"MainActivity\", \"Error in async initialization: ${e.message}\", e)"},{"type":"DELETE","lineNumber":126,"oldContent":"            "},{"type":"DELETE","lineNumber":127,"oldContent":"        } catch (e: Exception) {"},{"type":"DELETE","lineNumber":128,"oldContent":"            Log.e(\"MainActivity\", \"Error in async initialization: ${e.message}\", e)"},{"type":"DELETE","lineNumber":129,"oldContent":"        }"},{"type":"INSERT","lineNumber":134,"content":"        }.start()"},{"type":"INSERT","lineNumber":136,"content":"}"},{"type":"DELETE","lineNumber":132,"oldContent":""},{"type":"DELETE","lineNumber":144,"oldContent":"            composable(\"camera_navigation/{destination}/{startLocation}\") { backStackEntry ->"},{"type":"INSERT","lineNumber":150,"content":"            composable(\"camera_navigation/{destination}/{startLocation}\") { backStackEntry ->"},{"type":"DELETE","lineNumber":158,"oldContent":"    ARWalkingTheme {"},{"type":"DELETE","lineNumber":160,"oldContent":"        ARWalkingApp()"},{"type":"DELETE","lineNumber":162,"oldContent":"    }"},{"type":"DELETE","lineNumber":164,"oldContent":"}"},{"type":"DELETE","lineNumber":166,"oldContent":"private fun ARWalkingAppPreview() {"},{"type":"DELETE","lineNumber":167,"oldContent":"                                style = MaterialTheme.typography.bodyLarge"},{"type":"DELETE","lineNumber":169,"oldContent":"                        }"},{"type":"DELETE","lineNumber":171,"oldContent":"                            )"}]},{"timestamp":1754313942558,"changes":[{"type":"INSERT","lineNumber":30,"content":"import com.example.arwalking.ui.theme.ARWalkingTheme"},{"type":"DELETE","lineNumber":35,"oldContent":"// OpenCV imports entfernt für Stub-Implementation"},{"type":"INSERT","lineNumber":37,"content":"// OpenCV imports entfernt für Stub-Implementation"},{"type":"DELETE","lineNumber":70,"oldContent":"        // OpenCV initialisieren (Stub für lokale Entwicklung)"},{"type":"MODIFY","lineNumber":71,"content":"        try {","oldContent":"            // Simuliere OpenCV Initialisierung"},{"type":"MODIFY","lineNumber":101,"content":"        // Führe nur minimale Initialisierung durch, um Crashes zu vermeiden","oldContent":"        // Führe Initialisierung in einem separaten Thread aus"},{"type":"DELETE","lineNumber":104,"oldContent":"                Log.i(\"MainActivity\", \"Starting async initialization...\")"},{"type":"DELETE","lineNumber":105,"oldContent":"                // Feature Mapping initialisieren (asynchron)"},{"type":"INSERT","lineNumber":104,"content":"                Log.i(\"MainActivity\", \"Starting minimal async initialization...\")"},{"type":"INSERT","lineNumber":105,"content":"                "},{"type":"INSERT","lineNumber":106,"content":"                // Nur grundlegende Initialisierung"},{"type":"DELETE","lineNumber":107,"oldContent":""},{"type":"MODIFY","lineNumber":108,"content":"                ","oldContent":"                // Route laden (asynchron)"},{"type":"INSERT","lineNumber":109,"content":"                // Route laden ohne komplexe Validierung"},{"type":"DELETE","lineNumber":111,"oldContent":"                    routeViewModel.logNavigationRoute(navigationRoute)"},{"type":"DELETE","lineNumber":112,"oldContent":"                "},{"type":"DELETE","lineNumber":113,"oldContent":"                    routeViewModel.enableStorageSystemImmediately(this)"},{"type":"DELETE","lineNumber":114,"oldContent":"                    "},{"type":"DELETE","lineNumber":115,"oldContent":"                    // System-Validierung nur im Debug-Modus"},{"type":"DELETE","lineNumber":116,"oldContent":"                    if (BuildConfig.DEBUG) {"},{"type":"DELETE","lineNumber":117,"oldContent":"                        try {"},{"type":"DELETE","lineNumber":118,"oldContent":"                            val systemValidator = SystemValidator(this)"},{"type":"DELETE","lineNumber":119,"oldContent":"                            systemValidator.validateSystem(routeViewModel)"},{"type":"DELETE","lineNumber":120,"oldContent":"                            systemValidator.simulateFeatureMatching(routeViewModel, \"prof_ludwig_office\")"},{"type":"DELETE","lineNumber":121,"oldContent":"                        } catch (e: Exception) {"},{"type":"DELETE","lineNumber":122,"oldContent":"                    }"},{"type":"DELETE","lineNumber":123,"oldContent":"                            Log.w(\"MainActivity\", \"Debug validation failed: ${e.message}\")"},{"type":"DELETE","lineNumber":124,"oldContent":"                }"},{"type":"DELETE","lineNumber":125,"oldContent":"                        }"},{"type":"INSERT","lineNumber":112,"content":"                    Log.i(\"MainActivity\", \"Navigation route loaded successfully\")"},{"type":"DELETE","lineNumber":127,"oldContent":"            }"},{"type":"INSERT","lineNumber":115,"content":"                }"},{"type":"DELETE","lineNumber":130,"oldContent":"                Log.i(\"MainActivity\", \"Async initialization completed successfully\")"},{"type":"INSERT","lineNumber":117,"content":"                Log.i(\"MainActivity\", \"Minimal initialization completed\")"},{"type":"DELETE","lineNumber":132,"oldContent":"    }"},{"type":"DELETE","lineNumber":134,"oldContent":""},{"type":"DELETE","lineNumber":136,"oldContent":"@Composable"},{"type":"INSERT","lineNumber":121,"content":"                // App sollte trotzdem funktionieren, auch wenn Initialisierung fehlschlägt"},{"type":"INSERT","lineNumber":122,"content":"            }"},{"type":"INSERT","lineNumber":124,"content":"    }"},{"type":"INSERT","lineNumber":125,"content":"}"},{"type":"INSERT","lineNumber":126,"content":""},{"type":"INSERT","lineNumber":127,"content":"@Composable"},{"type":"DELETE","lineNumber":140,"oldContent":"}"},{"type":"INSERT","lineNumber":139,"content":"            composable(\"camera_navigation/{destination}/{startLocation}\") { backStackEntry ->"},{"type":"DELETE","lineNumber":154,"oldContent":"            composable(\"camera_navigation/{destination}/{startLocation}\") { backStackEntry ->"},{"type":"INSERT","lineNumber":159,"content":"}"}]},{"timestamp":1754314349840,"changes":[{"type":"DELETE","lineNumber":27,"oldContent":"import com.example.arwalking.screens.SimpleHomeScreen"},{"type":"INSERT","lineNumber":112,"content":"                } else {"},{"type":"INSERT","lineNumber":113,"content":"                    Log.w(\"MainActivity\", \"Navigation route could not be loaded\")"},{"type":"INSERT","lineNumber":115,"content":"                "},{"type":"INSERT","lineNumber":117,"content":"                "},{"type":"INSERT","lineNumber":118,"content":"            } catch (e: Exception) {"},{"type":"INSERT","lineNumber":119,"content":"                Log.e(\"MainActivity\", \"Error in async initialization: ${e.message}\", e)"},{"type":"INSERT","lineNumber":122,"content":"        }.start()"},{"type":"DELETE","lineNumber":120,"oldContent":"                } else {"},{"type":"DELETE","lineNumber":122,"oldContent":"                    Log.w(\"MainActivity\", \"Navigation route could not be loaded\")"},{"type":"DELETE","lineNumber":123,"oldContent":"                "},{"type":"DELETE","lineNumber":124,"oldContent":"                "},{"type":"DELETE","lineNumber":125,"oldContent":"            } catch (e: Exception) {"},{"type":"DELETE","lineNumber":126,"oldContent":"                Log.e(\"MainActivity\", \"Error in async initialization: ${e.message}\", e)"},{"type":"DELETE","lineNumber":127,"oldContent":"        }.start()"},{"type":"DELETE","lineNumber":129,"oldContent":"            composable(\"camera_navigation/{destination}/{startLocation}\") { backStackEntry ->"},{"type":"INSERT","lineNumber":138,"content":"            composable(\"camera_navigation/{destination}/{startLocation}\") { backStackEntry ->"},{"type":"DELETE","lineNumber":148,"oldContent":"}"},{"type":"INSERT","lineNumber":156,"content":"        ARWalkingApp()"},{"type":"INSERT","lineNumber":157,"content":"    }"},{"type":"INSERT","lineNumber":158,"content":"}"}]},{"timestamp":1754314354775,"changes":[{"type":"MODIFY","lineNumber":35,"content":"import com.example.arwalking.BuildConfig","oldContent":""},{"type":"INSERT","lineNumber":37,"content":""},{"type":"DELETE","lineNumber":69,"oldContent":"        // OpenCV initialisieren (Stub für lokale Entwicklung)"},{"type":"MODIFY","lineNumber":112,"content":"                } else {","oldContent":"                } else {"},{"type":"INSERT","lineNumber":115,"content":"                "},{"type":"INSERT","lineNumber":118,"content":"            } catch (e: Exception) {"},{"type":"INSERT","lineNumber":119,"content":"                Log.e(\"MainActivity\", \"Error in async initialization: ${e.message}\", e)"},{"type":"DELETE","lineNumber":119,"oldContent":"                "},{"type":"INSERT","lineNumber":122,"content":"        }.start()"},{"type":"DELETE","lineNumber":121,"oldContent":"            } catch (e: Exception) {"},{"type":"DELETE","lineNumber":123,"oldContent":"                Log.e(\"MainActivity\", \"Error in async initialization: ${e.message}\", e)"},{"type":"DELETE","lineNumber":126,"oldContent":"        }.start()"},{"type":"DELETE","lineNumber":136,"oldContent":"            composable(\"camera_navigation/{destination}/{startLocation}\") { backStackEntry ->"},{"type":"MODIFY","lineNumber":136,"content":"                HomeScreen(navController = navController)","oldContent":"                SimpleHomeScreen(navController = navController)"},{"type":"INSERT","lineNumber":138,"content":"            composable(\"camera_navigation/{destination}/{startLocation}\") { backStackEntry ->"},{"type":"MODIFY","lineNumber":155,"content":"    ARWalkingTheme {","oldContent":"        ARWalkingApp()"},{"type":"INSERT","lineNumber":156,"content":"        ARWalkingApp()"}]},{"timestamp":1754315896736,"changes":[{"type":"DELETE","lineNumber":73,"oldContent":"            // ViewModel erstellen"},{"type":"DELETE","lineNumber":74,"oldContent":"            routeViewModel = ViewModelProvider(this)[RouteViewModel::class.java]"},{"type":"DELETE","lineNumber":75,"oldContent":""},{"type":"DELETE","lineNumber":78,"oldContent":"            // UI zuerst setzen"},{"type":"INSERT","lineNumber":75,"content":"            // UI zuerst setzen - ohne ViewModel Initialisierung"},{"type":"DELETE","lineNumber":90,"oldContent":"            // Initialisierung asynchron durchführen"},{"type":"INSERT","lineNumber":87,"content":"            // ViewModel und andere Initialisierung später und sicher"},{"type":"INSERT","lineNumber":93,"content":"            // App trotzdem weiter laufen lassen"},{"type":"INSERT","lineNumber":109,"content":"                    Log.i(\"MainActivity\", \"Navigation route loaded successfully\")"},{"type":"DELETE","lineNumber":112,"oldContent":"                } else {"},{"type":"DELETE","lineNumber":118,"oldContent":"                // App sollte trotzdem funktionieren, auch wenn Initialisierung fehlschlägt"},{"type":"DELETE","lineNumber":120,"oldContent":"            }"},{"type":"DELETE","lineNumber":122,"oldContent":"    }"},{"type":"INSERT","lineNumber":118,"content":"                // App sollte trotzdem funktionieren, auch wenn Initialisierung fehlschlägt"},{"type":"INSERT","lineNumber":119,"content":"            }"},{"type":"INSERT","lineNumber":121,"content":"    }"},{"type":"DELETE","lineNumber":127,"oldContent":"                )"},{"type":"INSERT","lineNumber":125,"content":"fun ARWalkingApp() {"},{"type":"MODIFY","lineNumber":136,"content":"            composable(\"camera_navigation/{destination}/{startLocation}\") { backStackEntry ->","oldContent":"            composable(\"camera_navigation/{destination}/{startLocation}\") { backStackEntry ->"},{"type":"DELETE","lineNumber":154,"oldContent":"        ARWalkingApp()"},{"type":"INSERT","lineNumber":152,"content":"private fun ARWalkingAppPreview() {"}]},{"timestamp":1754315910963,"changes":[{"type":"DELETE","lineNumber":73,"oldContent":"            // UI zuerst setzen - ohne ViewModel Initialisierung"},{"type":"INSERT","lineNumber":75,"content":"            // UI zuerst setzen - ohne ViewModel Initialisierung"},{"type":"DELETE","lineNumber":84,"oldContent":"            // ViewModel und andere Initialisierung später und sicher"},{"type":"INSERT","lineNumber":87,"content":"            // ViewModel und andere Initialisierung später und sicher"},{"type":"DELETE","lineNumber":90,"oldContent":"            // App trotzdem weiter laufen lassen"},{"type":"INSERT","lineNumber":93,"content":"            // App trotzdem weiter laufen lassen"},{"type":"DELETE","lineNumber":103,"oldContent":"                // Nur grundlegende Initialisierung"},{"type":"MODIFY","lineNumber":103,"content":"                // ViewModel sicher erstellen","oldContent":"                routeViewModel.initializeStorage(this)"},{"type":"INSERT","lineNumber":104,"content":"                runOnUiThread {"},{"type":"INSERT","lineNumber":105,"content":"                    try {"},{"type":"INSERT","lineNumber":106,"content":"                        routeViewModel = ViewModelProvider(this@MainActivity)[RouteViewModel::class.java]"},{"type":"INSERT","lineNumber":107,"content":"                        Log.i(\"MainActivity\", \"RouteViewModel created successfully\")"},{"type":"INSERT","lineNumber":108,"content":"                    } catch (e: Exception) {"},{"type":"INSERT","lineNumber":109,"content":"                        Log.e(\"MainActivity\", \"Error creating RouteViewModel: ${e.message}\", e)"},{"type":"INSERT","lineNumber":110,"content":"                    }"},{"type":"INSERT","lineNumber":111,"content":"                }"},{"type":"DELETE","lineNumber":106,"oldContent":"                // Route laden ohne komplexe Validierung"},{"type":"DELETE","lineNumber":107,"oldContent":"                    Log.i(\"MainActivity\", \"Navigation route loaded successfully\")"},{"type":"DELETE","lineNumber":108,"oldContent":"                val navigationRoute = routeViewModel.loadNavigationRoute(this)"},{"type":"DELETE","lineNumber":109,"oldContent":"                if (navigationRoute != null) {"},{"type":"DELETE","lineNumber":110,"oldContent":"                } else {"},{"type":"DELETE","lineNumber":111,"oldContent":"                    Log.w(\"MainActivity\", \"Navigation route could not be loaded\")"},{"type":"INSERT","lineNumber":113,"content":"                // Kurz warten, dann weitere Initialisierung"},{"type":"INSERT","lineNumber":114,"content":"                Thread.sleep(500)"},{"type":"INSERT","lineNumber":115,"content":"                "},{"type":"INSERT","lineNumber":116,"content":"                // Nur wenn ViewModel erfolgreich erstellt wurde"},{"type":"INSERT","lineNumber":117,"content":"                if (::routeViewModel.isInitialized) {"},{"type":"INSERT","lineNumber":118,"content":"                    try {"},{"type":"INSERT","lineNumber":119,"content":"                        routeViewModel.initializeStorage(this@MainActivity)"},{"type":"INSERT","lineNumber":120,"content":"                        Log.i(\"MainActivity\", \"Storage initialized\")"},{"type":"INSERT","lineNumber":121,"content":"                    } catch (e: Exception) {"},{"type":"INSERT","lineNumber":122,"content":"                        Log.e(\"MainActivity\", \"Storage initialization failed: ${e.message}\", e)"},{"type":"INSERT","lineNumber":123,"content":"                    }"},{"type":"INSERT","lineNumber":124,"content":"                    "},{"type":"INSERT","lineNumber":125,"content":"                    try {"},{"type":"INSERT","lineNumber":126,"content":"                        val navigationRoute = routeViewModel.loadNavigationRoute(this@MainActivity)"},{"type":"INSERT","lineNumber":127,"content":"                        if (navigationRoute != null) {"},{"type":"INSERT","lineNumber":128,"content":"                            Log.i(\"MainActivity\", \"Navigation route loaded successfully\")"},{"type":"INSERT","lineNumber":129,"content":"                        } else {"},{"type":"INSERT","lineNumber":130,"content":"                            Log.w(\"MainActivity\", \"Navigation route could not be loaded\")"},{"type":"INSERT","lineNumber":131,"content":"                        }"},{"type":"INSERT","lineNumber":132,"content":"                    } catch (e: Exception) {"},{"type":"INSERT","lineNumber":133,"content":"                        Log.e(\"MainActivity\", \"Route loading failed: ${e.message}\", e)"},{"type":"INSERT","lineNumber":134,"content":"                    }"},{"type":"DELETE","lineNumber":116,"oldContent":"                // App sollte trotzdem funktionieren, auch wenn Initialisierung fehlschlägt"},{"type":"DELETE","lineNumber":117,"oldContent":"            }"},{"type":"DELETE","lineNumber":119,"oldContent":"    }"},{"type":"INSERT","lineNumber":141,"content":"                // App sollte trotzdem funktionieren, auch wenn Initialisierung fehlschlägt"},{"type":"INSERT","lineNumber":142,"content":"            }"},{"type":"INSERT","lineNumber":144,"content":"    }"},{"type":"DELETE","lineNumber":123,"oldContent":"fun ARWalkingApp() {"},{"type":"INSERT","lineNumber":148,"content":"fun ARWalkingApp() {"},{"type":"DELETE","lineNumber":134,"oldContent":"            composable(\"camera_navigation/{destination}/{startLocation}\") { backStackEntry ->"},{"type":"DELETE","lineNumber":135,"oldContent":"            composable(\"camera_navigation/{destination}/{startLocation}\") { backStackEntry ->"},{"type":"INSERT","lineNumber":157,"content":"                HomeScreen(navController = navController)"},{"type":"INSERT","lineNumber":159,"content":"            composable(\"camera_navigation/{destination}/{startLocation}\") { backStackEntry ->"},{"type":"DELETE","lineNumber":150,"oldContent":"private fun ARWalkingAppPreview() {"},{"type":"INSERT","lineNumber":175,"content":"private fun ARWalkingAppPreview() {"}]},{"timestamp":1754321611460,"changes":[{"type":"MODIFY","lineNumber":75,"content":"            // UI zuerst setzen - ohne ViewModel Initialisierung","oldContent":"            // UI zuerst setzen - ohne ViewModel Initialisierung"},{"type":"MODIFY","lineNumber":87,"content":"            // ViewModel und andere Initialisierung später und sicher","oldContent":"            // ViewModel und andere Initialisierung später und sicher"},{"type":"MODIFY","lineNumber":93,"content":"            // App trotzdem weiter laufen lassen","oldContent":"            // App trotzdem weiter laufen lassen"},{"type":"MODIFY","lineNumber":104,"content":"                runOnUiThread {","oldContent":"                routeViewModel.initializeStorage(this)"},{"type":"DELETE","lineNumber":106,"oldContent":"                "},{"type":"INSERT","lineNumber":108,"content":"                        "},{"type":"INSERT","lineNumber":109,"content":"                        // Initialisierung direkt nach ViewModel-Erstellung"},{"type":"INSERT","lineNumber":110,"content":"                        try {"},{"type":"INSERT","lineNumber":111,"content":"                            routeViewModel.initializeStorage(this@MainActivity)"},{"type":"INSERT","lineNumber":112,"content":"                            Log.i(\"MainActivity\", \"Storage initialized\")"},{"type":"INSERT","lineNumber":113,"content":"                        } catch (e: Exception) {"},{"type":"INSERT","lineNumber":114,"content":"                            Log.e(\"MainActivity\", \"Storage initialization failed: ${e.message}\", e)"},{"type":"INSERT","lineNumber":115,"content":"                        }"},{"type":"INSERT","lineNumber":116,"content":"                        "},{"type":"INSERT","lineNumber":117,"content":"                        try {"},{"type":"INSERT","lineNumber":118,"content":"                            val navigationRoute = routeViewModel.loadNavigationRoute(this@MainActivity)"},{"type":"INSERT","lineNumber":119,"content":"                            if (navigationRoute != null) {"},{"type":"INSERT","lineNumber":120,"content":"                                Log.i(\"MainActivity\", \"Navigation route loaded successfully\")"},{"type":"INSERT","lineNumber":121,"content":"                            } else {"},{"type":"INSERT","lineNumber":122,"content":"                                Log.w(\"MainActivity\", \"Navigation route could not be loaded\")"},{"type":"INSERT","lineNumber":123,"content":"                            }"},{"type":"INSERT","lineNumber":124,"content":"                        } catch (e: Exception) {"},{"type":"INSERT","lineNumber":125,"content":"                            Log.e(\"MainActivity\", \"Route loading failed: ${e.message}\", e)"},{"type":"INSERT","lineNumber":126,"content":"                        }"},{"type":"INSERT","lineNumber":127,"content":"                        "},{"type":"DELETE","lineNumber":113,"oldContent":"                }"},{"type":"DELETE","lineNumber":114,"oldContent":"                // Kurz warten, dann weitere Initialisierung"},{"type":"DELETE","lineNumber":116,"oldContent":"                Thread.sleep(500)"},{"type":"DELETE","lineNumber":119,"oldContent":"                "},{"type":"DELETE","lineNumber":120,"oldContent":"                // Nur wenn ViewModel erfolgreich erstellt wurde"},{"type":"DELETE","lineNumber":121,"oldContent":"                if (::routeViewModel.isInitialized) {"},{"type":"DELETE","lineNumber":122,"oldContent":"                    try {"},{"type":"DELETE","lineNumber":124,"oldContent":"                        routeViewModel.initializeStorage(this@MainActivity)"},{"type":"DELETE","lineNumber":125,"oldContent":"                        Log.i(\"MainActivity\", \"Storage initialized\")"},{"type":"DELETE","lineNumber":127,"oldContent":"                    } catch (e: Exception) {"},{"type":"INSERT","lineNumber":137,"content":"                // App sollte trotzdem funktionieren, auch wenn Initialisierung fehlschlägt"},{"type":"INSERT","lineNumber":138,"content":"            }"},{"type":"DELETE","lineNumber":129,"oldContent":"                        Log.e(\"MainActivity\", \"Storage initialization failed: ${e.message}\", e)"},{"type":"INSERT","lineNumber":140,"content":"    }"},{"type":"DELETE","lineNumber":131,"oldContent":"                    }"},{"type":"DELETE","lineNumber":132,"oldContent":"                    "},{"type":"DELETE","lineNumber":134,"oldContent":"                    try {"},{"type":"DELETE","lineNumber":136,"oldContent":"                        val navigationRoute = routeViewModel.loadNavigationRoute(this@MainActivity)"},{"type":"DELETE","lineNumber":137,"oldContent":"                    startLocation = startLocation"},{"type":"DELETE","lineNumber":138,"oldContent":"                        if (navigationRoute != null) {"},{"type":"INSERT","lineNumber":144,"content":"fun ARWalkingApp() {"},{"type":"INSERT","lineNumber":145,"content":"    val navController = rememberNavController()"},{"type":"DELETE","lineNumber":140,"oldContent":"                            Log.i(\"MainActivity\", \"Navigation route loaded successfully\")"},{"type":"DELETE","lineNumber":142,"oldContent":"                        } else {"},{"type":"DELETE","lineNumber":144,"oldContent":"                            Log.w(\"MainActivity\", \"Navigation route could not be loaded\")"},{"type":"DELETE","lineNumber":146,"oldContent":"                        }"},{"type":"DELETE","lineNumber":148,"oldContent":"                    } catch (e: Exception) {"},{"type":"DELETE","lineNumber":150,"oldContent":"                        Log.e(\"MainActivity\", \"Route loading failed: ${e.message}\", e)"},{"type":"DELETE","lineNumber":152,"oldContent":"                    }"},{"type":"INSERT","lineNumber":153,"content":"                HomeScreen(navController = navController)"},{"type":"INSERT","lineNumber":155,"content":"            composable(\"camera_navigation/{destination}/{startLocation}\") { backStackEntry ->"},{"type":"DELETE","lineNumber":158,"oldContent":"                // App sollte trotzdem funktionieren, auch wenn Initialisierung fehlschlägt"},{"type":"DELETE","lineNumber":160,"oldContent":"            }"},{"type":"DELETE","lineNumber":163,"oldContent":"    }"},{"type":"DELETE","lineNumber":168,"oldContent":"fun ARWalkingApp() {"},{"type":"INSERT","lineNumber":171,"content":"private fun ARWalkingAppPreview() {"},{"type":"DELETE","lineNumber":177,"oldContent":"                HomeScreen(navController = navController)"},{"type":"DELETE","lineNumber":178,"oldContent":"private fun ARWalkingAppPreview() {"},{"type":"DELETE","lineNumber":179,"oldContent":"            composable(\"camera_navigation/{destination}/{startLocation}\") { backStackEntry ->"}]},{"timestamp":1754325118914,"changes":[{"type":"INSERT","lineNumber":13,"content":"import androidx.activity.viewModels"},{"type":"DELETE","lineNumber":14,"oldContent":"import androidx.compose.foundation.layout.Box"},{"type":"DELETE","lineNumber":16,"oldContent":"import androidx.compose.material3.Text"},{"type":"MODIFY","lineNumber":33,"content":"import androidx.lifecycle.lifecycleScope","oldContent":"import androidx.lifecycle.ViewModelProvider"},{"type":"MODIFY","lineNumber":39,"content":"    private val routeViewModel: RouteViewModel by viewModels()","oldContent":"    private lateinit var routeViewModel: RouteViewModel"},{"type":"INSERT","lineNumber":73,"content":"            "},{"type":"DELETE","lineNumber":75,"oldContent":"            // UI zuerst setzen - ohne ViewModel Initialisierung"},{"type":"INSERT","lineNumber":85,"content":""},{"type":"DELETE","lineNumber":87,"oldContent":"            // ViewModel und andere Initialisierung später und sicher"},{"type":"DELETE","lineNumber":88,"oldContent":"            initializeAppAsync()"},{"type":"INSERT","lineNumber":87,"content":"            lifecycleScope.launch {"},{"type":"INSERT","lineNumber":88,"content":"                try {"},{"type":"INSERT","lineNumber":89,"content":"                    routeViewModel.initializeStorage(this@MainActivity)"},{"type":"INSERT","lineNumber":90,"content":"                    routeViewModel.loadNavigationRoute(this@MainActivity)"},{"type":"INSERT","lineNumber":91,"content":"                    Log.i(\"MainActivity\", \"Initialization completed\")"},{"type":"INSERT","lineNumber":92,"content":"                } catch (e: Exception) {"},{"type":"INSERT","lineNumber":93,"content":"                    Log.e(\"MainActivity\", \"Initialization failed: ${'$'}{e.message}\", e)"},{"type":"INSERT","lineNumber":94,"content":"                    Toast.makeText("},{"type":"INSERT","lineNumber":95,"content":"                        this@MainActivity,"},{"type":"INSERT","lineNumber":96,"content":"                        \"App initialization failed: ${'$'}{e.message}\","},{"type":"INSERT","lineNumber":97,"content":"                        Toast.LENGTH_LONG"},{"type":"INSERT","lineNumber":98,"content":"                    ).show()"},{"type":"INSERT","lineNumber":99,"content":"                }"},{"type":"INSERT","lineNumber":100,"content":"            }"},{"type":"INSERT","lineNumber":104,"content":"            Toast.makeText(this, \"App initialization failed: ${e.message}\", Toast.LENGTH_LONG).show()"},{"type":"DELETE","lineNumber":93,"oldContent":"            // App trotzdem weiter laufen lassen"},{"type":"DELETE","lineNumber":97,"oldContent":"    private fun initializeAppAsync() {"},{"type":"DELETE","lineNumber":98,"oldContent":"        // Führe nur minimale Initialisierung durch, um Crashes zu vermeiden"},{"type":"DELETE","lineNumber":99,"oldContent":"        Thread {"},{"type":"DELETE","lineNumber":100,"oldContent":"            try {"},{"type":"DELETE","lineNumber":101,"oldContent":"                Log.i(\"MainActivity\", \"Starting minimal async initialization...\")"},{"type":"DELETE","lineNumber":102,"oldContent":"                "},{"type":"DELETE","lineNumber":103,"oldContent":"                // ViewModel sicher erstellen"},{"type":"DELETE","lineNumber":104,"oldContent":"                runOnUiThread {"},{"type":"DELETE","lineNumber":105,"oldContent":"                    try {"},{"type":"DELETE","lineNumber":106,"oldContent":"                        routeViewModel = ViewModelProvider(this@MainActivity)[RouteViewModel::class.java]"},{"type":"DELETE","lineNumber":107,"oldContent":"                        "},{"type":"DELETE","lineNumber":108,"oldContent":"                        Log.i(\"MainActivity\", \"RouteViewModel created successfully\")"},{"type":"DELETE","lineNumber":109,"oldContent":"                        // Initialisierung direkt nach ViewModel-Erstellung"},{"type":"DELETE","lineNumber":110,"oldContent":"                    } catch (e: Exception) {"},{"type":"DELETE","lineNumber":111,"oldContent":"                        try {"},{"type":"DELETE","lineNumber":112,"oldContent":"                        Log.e(\"MainActivity\", \"Error creating RouteViewModel: ${e.message}\", e)"},{"type":"DELETE","lineNumber":113,"oldContent":"                            routeViewModel.initializeStorage(this@MainActivity)"},{"type":"DELETE","lineNumber":114,"oldContent":"                    }"},{"type":"DELETE","lineNumber":115,"oldContent":"                            Log.i(\"MainActivity\", \"Storage initialized\")"},{"type":"DELETE","lineNumber":116,"oldContent":"                }"},{"type":"DELETE","lineNumber":117,"oldContent":"                        } catch (e: Exception) {"},{"type":"DELETE","lineNumber":118,"oldContent":"                            Log.e(\"MainActivity\", \"Storage initialization failed: ${e.message}\", e)"},{"type":"DELETE","lineNumber":119,"oldContent":"                        }"},{"type":"DELETE","lineNumber":120,"oldContent":"                "},{"type":"DELETE","lineNumber":121,"oldContent":"                        "},{"type":"DELETE","lineNumber":122,"oldContent":"                        try {"},{"type":"DELETE","lineNumber":123,"oldContent":"                Log.i(\"MainActivity\", \"Minimal initialization completed\")"},{"type":"DELETE","lineNumber":124,"oldContent":"                            val navigationRoute = routeViewModel.loadNavigationRoute(this@MainActivity)"},{"type":"DELETE","lineNumber":125,"oldContent":"                "},{"type":"DELETE","lineNumber":126,"oldContent":"                            if (navigationRoute != null) {"},{"type":"DELETE","lineNumber":127,"oldContent":"                                Log.i(\"MainActivity\", \"Navigation route loaded successfully\")"},{"type":"DELETE","lineNumber":128,"oldContent":"                            } else {"},{"type":"DELETE","lineNumber":129,"oldContent":"                                Log.w(\"MainActivity\", \"Navigation route could not be loaded\")"},{"type":"DELETE","lineNumber":130,"oldContent":"                            }"},{"type":"DELETE","lineNumber":131,"oldContent":"            } catch (e: Exception) {"},{"type":"DELETE","lineNumber":132,"oldContent":"                        } catch (e: Exception) {"},{"type":"DELETE","lineNumber":133,"oldContent":"                            Log.e(\"MainActivity\", \"Route loading failed: ${e.message}\", e)"},{"type":"DELETE","lineNumber":134,"oldContent":"                        }"},{"type":"DELETE","lineNumber":135,"oldContent":"                Log.e(\"MainActivity\", \"Error in async initialization: ${e.message}\", e)"},{"type":"DELETE","lineNumber":136,"oldContent":"                        "},{"type":"DELETE","lineNumber":137,"oldContent":"        }.start()"},{"type":"DELETE","lineNumber":141,"oldContent":"                // App sollte trotzdem funktionieren, auch wenn Initialisierung fehlschlägt"},{"type":"DELETE","lineNumber":142,"oldContent":"            }"},{"type":"INSERT","lineNumber":112,"content":"fun ARWalkingApp() {"},{"type":"INSERT","lineNumber":113,"content":"    val navController = rememberNavController()"},{"type":"DELETE","lineNumber":144,"oldContent":"    }"},{"type":"DELETE","lineNumber":147,"oldContent":"fun ARWalkingApp() {"},{"type":"DELETE","lineNumber":148,"oldContent":"    val navController = rememberNavController()"},{"type":"DELETE","lineNumber":155,"oldContent":"                val encodedDestination = backStackEntry.arguments?.getString(\"destination\") ?: \"Unbekanntes Ziel\""},{"type":"INSERT","lineNumber":124,"content":"                val encodedDestination = backStackEntry.arguments?.getString(\"destination\") ?: \"Unbekanntes Ziel\""},{"type":"DELETE","lineNumber":169,"oldContent":"private fun ARWalkingAppPreview() {"},{"type":"INSERT","lineNumber":139,"content":"private fun ARWalkingAppPreview() {"},{"type":"DELETE","lineNumber":175,"oldContent":"private fun ARWalkingAppPreview() {"},{"type":"INSERT","lineNumber":143,"content":"}"},{"type":"INSERT","lineNumber":144,"content":""}]},{"timestamp":1754325169405,"changes":[{"type":"INSERT","lineNumber":32,"content":"import android.widget.Toast"},{"type":"DELETE","lineNumber":33,"oldContent":"import androidx.lifecycle.ViewModelProvider"},{"type":"INSERT","lineNumber":35,"content":"import kotlinx.coroutines.launch"},{"type":"INSERT","lineNumber":36,"content":""},{"type":"INSERT","lineNumber":40,"content":""},{"type":"DELETE","lineNumber":39,"oldContent":"    private lateinit var routeViewModel: RouteViewModel"},{"type":"DELETE","lineNumber":72,"oldContent":"            "},{"type":"INSERT","lineNumber":75,"content":"            "},{"type":"DELETE","lineNumber":84,"oldContent":""},{"type":"INSERT","lineNumber":87,"content":""},{"type":"DELETE","lineNumber":90,"oldContent":""},{"type":"DELETE","lineNumber":92,"oldContent":"        } catch (e: Exception) {"},{"type":"DELETE","lineNumber":94,"oldContent":"            Log.e(\"MainActivity\", \"Error in onCreate: ${e.message}\", e)"},{"type":"DELETE","lineNumber":96,"oldContent":"            // App trotzdem weiter laufen lassen"},{"type":"DELETE","lineNumber":99,"oldContent":"        }"},{"type":"DELETE","lineNumber":101,"oldContent":"    }"},{"type":"MODIFY","lineNumber":103,"content":"","oldContent":""},{"type":"INSERT","lineNumber":104,"content":"        } catch (e: Exception) {"},{"type":"INSERT","lineNumber":105,"content":"            Log.e(\"MainActivity\", \"Error in onCreate: ${e.message}\", e)"},{"type":"DELETE","lineNumber":109,"oldContent":"fun ARWalkingApp() {"},{"type":"DELETE","lineNumber":110,"oldContent":"    val navController = rememberNavController()"},{"type":"DELETE","lineNumber":111,"oldContent":"                val encodedDestination = backStackEntry.arguments?.getString(\"destination\") ?: \"Unbekanntes Ziel\""},{"type":"INSERT","lineNumber":107,"content":"            // App trotzdem weiter laufen lassen"},{"type":"INSERT","lineNumber":108,"content":"        }"},{"type":"INSERT","lineNumber":109,"content":"    }"},{"type":"INSERT","lineNumber":110,"content":""},{"type":"DELETE","lineNumber":113,"oldContent":"private fun ARWalkingAppPreview() {"},{"type":"DELETE","lineNumber":116,"oldContent":"}"},{"type":"DELETE","lineNumber":117,"oldContent":"                )"},{"type":"INSERT","lineNumber":114,"content":"fun ARWalkingApp() {"},{"type":"INSERT","lineNumber":115,"content":"    val navController = rememberNavController()"},{"type":"INSERT","lineNumber":126,"content":"                val encodedDestination = backStackEntry.arguments?.getString(\"destination\") ?: \"Unbekanntes Ziel\""},{"type":"INSERT","lineNumber":141,"content":"private fun ARWalkingAppPreview() {"},{"type":"INSERT","lineNumber":145,"content":"}"},{"type":"INSERT","lineNumber":146,"content":""}]},{"timestamp":1754325258704,"changes":[{"type":"DELETE","lineNumber":13,"oldContent":"import androidx.activity.viewModels"},{"type":"DELETE","lineNumber":27,"oldContent":""},{"type":"DELETE","lineNumber":31,"oldContent":"import android.util.Log"},{"type":"DELETE","lineNumber":32,"oldContent":"import android.widget.Toast"},{"type":"DELETE","lineNumber":33,"oldContent":"import androidx.lifecycle.lifecycleScope"},{"type":"DELETE","lineNumber":34,"oldContent":"import com.example.arwalking.BuildConfig"},{"type":"DELETE","lineNumber":35,"oldContent":"import kotlinx.coroutines.launch"},{"type":"DELETE","lineNumber":36,"oldContent":"// OpenCV imports entfernt für Stub-Implementation"},{"type":"DELETE","lineNumber":38,"oldContent":""},{"type":"DELETE","lineNumber":40,"oldContent":"    private val routeViewModel: RouteViewModel by viewModels()"},{"type":"DELETE","lineNumber":42,"oldContent":""},{"type":"DELETE","lineNumber":43,"oldContent":""},{"type":"DELETE","lineNumber":70,"oldContent":""},{"type":"DELETE","lineNumber":71,"oldContent":"        try {"},{"type":"DELETE","lineNumber":72,"oldContent":"            Log.i(\"MainActivity\", \"Starting MainActivity...\")"},{"type":"DELETE","lineNumber":73,"oldContent":""},{"type":"DELETE","lineNumber":74,"oldContent":"            enableEdgeToEdge()"},{"type":"DELETE","lineNumber":75,"oldContent":"            // UI zuerst setzen - ohne ViewModel Initialisierung"},{"type":"DELETE","lineNumber":76,"oldContent":"            "},{"type":"DELETE","lineNumber":77,"oldContent":"            setContent {"},{"type":"DELETE","lineNumber":78,"oldContent":"                ARWalkingTheme {"},{"type":"DELETE","lineNumber":79,"oldContent":"                    Surface("},{"type":"DELETE","lineNumber":80,"oldContent":"                        modifier = Modifier.fillMaxSize(),"},{"type":"DELETE","lineNumber":81,"oldContent":"                        color = MaterialTheme.colorScheme.background"},{"type":"DELETE","lineNumber":82,"oldContent":"                    ) {"},{"type":"DELETE","lineNumber":83,"oldContent":"                        ARWalkingApp()"},{"type":"DELETE","lineNumber":84,"oldContent":"                    }"},{"type":"INSERT","lineNumber":58,"content":"        enableEdgeToEdge()"},{"type":"INSERT","lineNumber":59,"content":"        // Entferne checkCameraAndLaunch() - wird über Navigation gehandhabt"},{"type":"INSERT","lineNumber":60,"content":"        setContent {"},{"type":"INSERT","lineNumber":61,"content":"            ARWalkingTheme {"},{"type":"INSERT","lineNumber":62,"content":"                Surface("},{"type":"INSERT","lineNumber":63,"content":"                    modifier = Modifier.fillMaxSize(),"},{"type":"INSERT","lineNumber":64,"content":"                    color = MaterialTheme.colorScheme.background"},{"type":"INSERT","lineNumber":65,"content":"                ) {"},{"type":"INSERT","lineNumber":66,"content":"                    ARWalkingApp()"},{"type":"DELETE","lineNumber":87,"oldContent":"            // ViewModel und andere Initialisierung später und sicher"},{"type":"DELETE","lineNumber":88,"oldContent":""},{"type":"DELETE","lineNumber":89,"oldContent":"            lifecycleScope.launch {"},{"type":"DELETE","lineNumber":90,"oldContent":"                try {"},{"type":"DELETE","lineNumber":91,"oldContent":"                    routeViewModel.initializeStorage(this@MainActivity)"},{"type":"DELETE","lineNumber":92,"oldContent":"                    routeViewModel.loadNavigationRoute(this@MainActivity)"},{"type":"DELETE","lineNumber":93,"oldContent":"                    Log.i(\"MainActivity\", \"Initialization completed\")"},{"type":"DELETE","lineNumber":94,"oldContent":"                } catch (e: Exception) {"},{"type":"DELETE","lineNumber":95,"oldContent":"                    Log.e(\"MainActivity\", \"Initialization failed: ${'$'}{e.message}\", e)"},{"type":"DELETE","lineNumber":96,"oldContent":"                    Toast.makeText("},{"type":"DELETE","lineNumber":97,"oldContent":"                        this@MainActivity,"},{"type":"DELETE","lineNumber":98,"oldContent":"                        \"App initialization failed: ${'$'}{e.message}\","},{"type":"DELETE","lineNumber":99,"oldContent":""},{"type":"DELETE","lineNumber":100,"oldContent":"        } catch (e: Exception) {"},{"type":"DELETE","lineNumber":101,"oldContent":"                        Toast.LENGTH_LONG"},{"type":"DELETE","lineNumber":102,"oldContent":"            Log.e(\"MainActivity\", \"Error in onCreate: ${e.message}\", e)"},{"type":"DELETE","lineNumber":103,"oldContent":"                    ).show()"},{"type":"DELETE","lineNumber":104,"oldContent":"                }"},{"type":"DELETE","lineNumber":105,"oldContent":"            // App trotzdem weiter laufen lassen"},{"type":"DELETE","lineNumber":106,"oldContent":"            }"},{"type":"DELETE","lineNumber":108,"oldContent":"            Toast.makeText(this, \"App initialization failed: ${e.message}\", Toast.LENGTH_LONG).show()"},{"type":"DELETE","lineNumber":110,"oldContent":""},{"type":"DELETE","lineNumber":112,"oldContent":"fun ARWalkingApp() {"},{"type":"DELETE","lineNumber":114,"oldContent":"    val navController = rememberNavController()"},{"type":"INSERT","lineNumber":74,"content":"fun ARWalkingApp() {"},{"type":"INSERT","lineNumber":75,"content":"    val navController = rememberNavController()"},{"type":"DELETE","lineNumber":124,"oldContent":"                val encodedDestination = backStackEntry.arguments?.getString(\"destination\") ?: \"Unbekanntes Ziel\""},{"type":"INSERT","lineNumber":86,"content":"                val encodedDestination = backStackEntry.arguments?.getString(\"destination\") ?: \"Unbekanntes Ziel\""},{"type":"INSERT","lineNumber":95,"content":""},{"type":"INSERT","lineNumber":96,"content":"            // Hier können später weitere Screens hinzugefügt werden:"},{"type":"INSERT","lineNumber":97,"content":"            // composable(\"ar_view\") { ARScreen(navController = navController) }"},{"type":"INSERT","lineNumber":98,"content":"            // composable(\"settings\") { SettingsScreen(navController = navController) }"},{"type":"DELETE","lineNumber":140,"oldContent":"private fun ARWalkingAppPreview() {"},{"type":"INSERT","lineNumber":105,"content":"private fun ARWalkingAppPreview() {"},{"type":"DELETE","lineNumber":146,"oldContent":""}]},{"timestamp":1754325423282,"changes":[{"type":"INSERT","lineNumber":13,"content":"import androidx.activity.viewModels"},{"type":"INSERT","lineNumber":27,"content":""},{"type":"INSERT","lineNumber":31,"content":"import android.util.Log"},{"type":"INSERT","lineNumber":32,"content":"import android.widget.Toast"},{"type":"INSERT","lineNumber":33,"content":"import androidx.lifecycle.lifecycleScope"},{"type":"INSERT","lineNumber":34,"content":"import com.example.arwalking.BuildConfig"},{"type":"INSERT","lineNumber":35,"content":"// OpenCV imports entfernt für Stub-Implementation"},{"type":"INSERT","lineNumber":39,"content":"    private val routeViewModel: RouteViewModel by viewModels()"},{"type":"INSERT","lineNumber":40,"content":""},{"type":"INSERT","lineNumber":41,"content":""},{"type":"DELETE","lineNumber":46,"oldContent":"        enableEdgeToEdge()"},{"type":"DELETE","lineNumber":48,"oldContent":"        // Entferne checkCameraAndLaunch() - wird über Navigation gehandhabt"},{"type":"DELETE","lineNumber":50,"oldContent":"        setContent {"},{"type":"DELETE","lineNumber":52,"oldContent":"            ARWalkingTheme {"},{"type":"DELETE","lineNumber":54,"oldContent":"                Surface("},{"type":"DELETE","lineNumber":56,"oldContent":"                    modifier = Modifier.fillMaxSize(),"},{"type":"DELETE","lineNumber":58,"oldContent":"                    color = MaterialTheme.colorScheme.background"},{"type":"DELETE","lineNumber":60,"oldContent":"                ) {"},{"type":"DELETE","lineNumber":62,"oldContent":"                    ARWalkingApp()"},{"type":"DELETE","lineNumber":67,"oldContent":"fun ARWalkingApp() {"},{"type":"MODIFY","lineNumber":68,"content":"","oldContent":"    val navController = rememberNavController()"},{"type":"INSERT","lineNumber":69,"content":"        try {"},{"type":"INSERT","lineNumber":70,"content":"            Log.i(\"MainActivity\", \"Starting MainActivity...\")"},{"type":"INSERT","lineNumber":71,"content":""},{"type":"INSERT","lineNumber":72,"content":"            enableEdgeToEdge()"},{"type":"INSERT","lineNumber":73,"content":"            "},{"type":"INSERT","lineNumber":74,"content":"            // UI zuerst setzen - ohne ViewModel Initialisierung"},{"type":"INSERT","lineNumber":75,"content":"            setContent {"},{"type":"INSERT","lineNumber":76,"content":"                ARWalkingTheme {"},{"type":"INSERT","lineNumber":77,"content":"                    Surface("},{"type":"INSERT","lineNumber":78,"content":"                        modifier = Modifier.fillMaxSize(),"},{"type":"INSERT","lineNumber":79,"content":"                        color = MaterialTheme.colorScheme.background"},{"type":"INSERT","lineNumber":80,"content":"                    ) {"},{"type":"INSERT","lineNumber":81,"content":"                        ARWalkingApp()"},{"type":"INSERT","lineNumber":82,"content":"                    }"},{"type":"DELETE","lineNumber":70,"oldContent":"                val encodedDestination = backStackEntry.arguments?.getString(\"destination\") ?: \"Unbekanntes Ziel\""},{"type":"DELETE","lineNumber":73,"oldContent":"            // Hier können später weitere Screens hinzugefügt werden:"},{"type":"DELETE","lineNumber":74,"oldContent":"            // composable(\"ar_view\") { ARScreen(navController = navController) }"},{"type":"DELETE","lineNumber":75,"oldContent":"            // composable(\"settings\") { SettingsScreen(navController = navController) }"},{"type":"DELETE","lineNumber":76,"oldContent":"private fun ARWalkingAppPreview() {"},{"type":"INSERT","lineNumber":86,"content":"            // ViewModel und andere Initialisierung später und sicher"},{"type":"INSERT","lineNumber":87,"content":"            lifecycleScope.launch {"},{"type":"INSERT","lineNumber":88,"content":"                try {"},{"type":"INSERT","lineNumber":89,"content":"                    routeViewModel.initializeStorage(this@MainActivity)"},{"type":"INSERT","lineNumber":90,"content":"                    routeViewModel.loadNavigationRoute(this@MainActivity)"},{"type":"INSERT","lineNumber":91,"content":"                    Log.i(\"MainActivity\", \"Initialization completed\")"},{"type":"INSERT","lineNumber":92,"content":"                } catch (e: Exception) {"},{"type":"INSERT","lineNumber":93,"content":"                    Log.e(\"MainActivity\", \"Initialization failed: ${'$'}{e.message}\", e)"},{"type":"INSERT","lineNumber":94,"content":"                    Toast.makeText("},{"type":"INSERT","lineNumber":95,"content":"                        this@MainActivity,"},{"type":"INSERT","lineNumber":96,"content":"                        \"App initialization failed: ${'$'}{e.message}\","},{"type":"INSERT","lineNumber":97,"content":"                        Toast.LENGTH_LONG"},{"type":"INSERT","lineNumber":98,"content":"                    ).show()"},{"type":"INSERT","lineNumber":99,"content":"                }"},{"type":"INSERT","lineNumber":100,"content":"            }"},{"type":"INSERT","lineNumber":101,"content":""},{"type":"INSERT","lineNumber":102,"content":"        } catch (e: Exception) {"},{"type":"INSERT","lineNumber":103,"content":"            Log.e(\"MainActivity\", \"Error in onCreate: ${e.message}\", e)"},{"type":"INSERT","lineNumber":104,"content":"            Toast.makeText(this, \"App initialization failed: ${e.message}\", Toast.LENGTH_LONG).show()"},{"type":"INSERT","lineNumber":105,"content":"            // App trotzdem weiter laufen lassen"},{"type":"INSERT","lineNumber":108,"content":""},{"type":"INSERT","lineNumber":112,"content":"fun ARWalkingApp() {"},{"type":"INSERT","lineNumber":113,"content":"    val navController = rememberNavController()"},{"type":"INSERT","lineNumber":124,"content":"                val encodedDestination = backStackEntry.arguments?.getString(\"destination\") ?: \"Unbekanntes Ziel\""},{"type":"INSERT","lineNumber":139,"content":"private fun ARWalkingAppPreview() {"},{"type":"INSERT","lineNumber":144,"content":""}]},{"timestamp":1754325467157,"changes":[{"type":"MODIFY","lineNumber":28,"content":"import com.example.arwalking.ui.theme.ARWalkingTheme","oldContent":"import com.example.arwalking.ui.theme.ARWalkingTheme"},{"type":"INSERT","lineNumber":31,"content":"import android.util.Log"},{"type":"INSERT","lineNumber":32,"content":"import android.widget.Toast"},{"type":"INSERT","lineNumber":33,"content":"import androidx.lifecycle.lifecycleScope"},{"type":"INSERT","lineNumber":34,"content":"import com.example.arwalking.BuildConfig"},{"type":"INSERT","lineNumber":35,"content":"import kotlinx.coroutines.launch"},{"type":"INSERT","lineNumber":37,"content":"// OpenCV imports entfernt für Stub-Implementation"},{"type":"INSERT","lineNumber":38,"content":""},{"type":"DELETE","lineNumber":33,"oldContent":"import android.util.Log"},{"type":"DELETE","lineNumber":35,"oldContent":"import android.widget.Toast"},{"type":"INSERT","lineNumber":41,"content":"    private val routeViewModel: RouteViewModel by viewModels()"},{"type":"INSERT","lineNumber":42,"content":""},{"type":"INSERT","lineNumber":43,"content":""},{"type":"DELETE","lineNumber":37,"oldContent":"import androidx.lifecycle.lifecycleScope"},{"type":"DELETE","lineNumber":39,"oldContent":"import com.example.arwalking.BuildConfig"},{"type":"DELETE","lineNumber":41,"oldContent":"// OpenCV imports entfernt für Stub-Implementation"},{"type":"DELETE","lineNumber":46,"oldContent":"    private val routeViewModel: RouteViewModel by viewModels()"},{"type":"DELETE","lineNumber":48,"oldContent":""},{"type":"DELETE","lineNumber":50,"oldContent":""},{"type":"DELETE","lineNumber":70,"oldContent":"                }"},{"type":"DELETE","lineNumber":73,"oldContent":"            }"},{"type":"DELETE","lineNumber":75,"oldContent":""},{"type":"DELETE","lineNumber":81,"oldContent":"        }"},{"type":"DELETE","lineNumber":83,"oldContent":"    }"},{"type":"DELETE","lineNumber":85,"oldContent":"}"},{"type":"DELETE","lineNumber":87,"oldContent":""},{"type":"DELETE","lineNumber":89,"oldContent":"@Composable"},{"type":"INSERT","lineNumber":85,"content":"                }"},{"type":"INSERT","lineNumber":86,"content":"            }"},{"type":"INSERT","lineNumber":88,"content":"            // ViewModel und andere Initialisierung später und sicher"},{"type":"INSERT","lineNumber":89,"content":"            lifecycleScope.launch {"},{"type":"INSERT","lineNumber":90,"content":"                try {"},{"type":"INSERT","lineNumber":91,"content":"                    routeViewModel.initializeStorage(this@MainActivity)"},{"type":"INSERT","lineNumber":92,"content":"                    routeViewModel.loadNavigationRoute(this@MainActivity)"},{"type":"INSERT","lineNumber":93,"content":"                    Log.i(\"MainActivity\", \"Initialization completed\")"},{"type":"INSERT","lineNumber":94,"content":"                } catch (e: Exception) {"},{"type":"INSERT","lineNumber":95,"content":"                    Log.e(\"MainActivity\", \"Initialization failed: ${'$'}{e.message}\", e)"},{"type":"INSERT","lineNumber":96,"content":"                    Toast.makeText("},{"type":"INSERT","lineNumber":97,"content":"                        this@MainActivity,"},{"type":"INSERT","lineNumber":98,"content":"                        \"App initialization failed: ${'$'}{e.message}\","},{"type":"INSERT","lineNumber":99,"content":"                        Toast.LENGTH_LONG"},{"type":"INSERT","lineNumber":100,"content":"                    ).show()"},{"type":"INSERT","lineNumber":101,"content":"                }"},{"type":"INSERT","lineNumber":102,"content":"            }"},{"type":"INSERT","lineNumber":103,"content":""},{"type":"INSERT","lineNumber":104,"content":"        } catch (e: Exception) {"},{"type":"INSERT","lineNumber":105,"content":"            Log.e(\"MainActivity\", \"Error in onCreate: ${e.message}\", e)"},{"type":"INSERT","lineNumber":106,"content":"            Toast.makeText(this, \"App initialization failed: ${e.message}\", Toast.LENGTH_LONG).show()"},{"type":"INSERT","lineNumber":107,"content":"            // App trotzdem weiter laufen lassen"},{"type":"INSERT","lineNumber":108,"content":"        }"},{"type":"INSERT","lineNumber":109,"content":"    }"},{"type":"INSERT","lineNumber":110,"content":""},{"type":"INSERT","lineNumber":111,"content":"}"},{"type":"INSERT","lineNumber":112,"content":""},{"type":"INSERT","lineNumber":113,"content":"@Composable"},{"type":"INSERT","lineNumber":114,"content":"fun ARWalkingApp() {"},{"type":"INSERT","lineNumber":115,"content":"    val navController = rememberNavController()"},{"type":"INSERT","lineNumber":116,"content":""},{"type":"DELETE","lineNumber":95,"oldContent":"            // ViewModel und andere Initialisierung später und sicher"},{"type":"DELETE","lineNumber":97,"oldContent":"            lifecycleScope.launch {"},{"type":"DELETE","lineNumber":99,"oldContent":"                try {"},{"type":"DELETE","lineNumber":101,"oldContent":"                    routeViewModel.initializeStorage(this@MainActivity)"},{"type":"DELETE","lineNumber":103,"oldContent":"                    routeViewModel.loadNavigationRoute(this@MainActivity)"},{"type":"DELETE","lineNumber":105,"oldContent":"                    Log.i(\"MainActivity\", \"Initialization completed\")"},{"type":"DELETE","lineNumber":107,"oldContent":"                } catch (e: Exception) {"},{"type":"INSERT","lineNumber":126,"content":"                val encodedDestination = backStackEntry.arguments?.getString(\"destination\") ?: \"Unbekanntes Ziel\""},{"type":"DELETE","lineNumber":109,"oldContent":"                    Log.e(\"MainActivity\", \"Initialization failed: ${'$'}{e.message}\", e)"},{"type":"DELETE","lineNumber":111,"oldContent":"                    Toast.makeText("},{"type":"DELETE","lineNumber":113,"oldContent":"                        this@MainActivity,"},{"type":"DELETE","lineNumber":115,"oldContent":"                        \"App initialization failed: ${'$'}{e.message}\","},{"type":"DELETE","lineNumber":117,"oldContent":"                        Toast.LENGTH_LONG"},{"type":"DELETE","lineNumber":119,"oldContent":"                    ).show()"},{"type":"DELETE","lineNumber":121,"oldContent":"                }"},{"type":"DELETE","lineNumber":123,"oldContent":"            }"},{"type":"DELETE","lineNumber":125,"oldContent":""},{"type":"DELETE","lineNumber":127,"oldContent":"        } catch (e: Exception) {"},{"type":"DELETE","lineNumber":129,"oldContent":"            Log.e(\"MainActivity\", \"Error in onCreate: ${e.message}\", e)"},{"type":"DELETE","lineNumber":131,"oldContent":"            Toast.makeText(this, \"App initialization failed: ${e.message}\", Toast.LENGTH_LONG).show()"},{"type":"DELETE","lineNumber":133,"oldContent":"            // App trotzdem weiter laufen lassen"},{"type":"INSERT","lineNumber":141,"content":"private fun ARWalkingAppPreview() {"},{"type":"DELETE","lineNumber":137,"oldContent":""},{"type":"DELETE","lineNumber":141,"oldContent":"private fun ARWalkingAppPreview() {"},{"type":"DELETE","lineNumber":142,"oldContent":"fun ARWalkingApp() {"},{"type":"DELETE","lineNumber":143,"oldContent":"                val encodedDestination = backStackEntry.arguments?.getString(\"destination\") ?: \"Unbekanntes Ziel\""},{"type":"DELETE","lineNumber":144,"oldContent":"    val navController = rememberNavController()"}]}]},"/Users/florian/Documents/GitHub/ar-walking/app/src/main/res/drawable/logo.xml":{"filePath":"/Users/florian/Documents/GitHub/ar-walking/app/src/main/res/drawable/logo.xml","baseContent":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<vector xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:width=\"280dp\"\n    android:height=\"80dp\"\n    android:viewportWidth=\"280\"\n    android:viewportHeight=\"80\">\n    \n    <!-- Background -->\n    <path\n        android:fillColor=\"#FFFFFF\"\n        android:pathData=\"M10,10 L270,10 A10,10 0 0,1 280,20 L280,60 A10,10 0 0,1 270,70 L10,70 A10,10 0 0,1 0,60 L0,20 A10,10 0 0,1 10,10 Z\" />\n    \n    <!-- AR Text -->\n    <path\n        android:fillColor=\"#1E3A8A\"\n        android:pathData=\"M20,25 L35,25 L40,40 L45,25 L60,25 L50,55 L30,55 Z M30,35 L40,35 L35,45 Z\" />\n    \n    <!-- Walking Text -->\n    <path\n        android:fillColor=\"#3B82F6\"\n        android:pathData=\"M80,25 L95,25 L100,40 L105,25 L120,25 L125,55 L110,55 L108,45 L102,45 L100,55 L85,55 Z\n                         M140,25 L155,25 L160,40 L165,25 L180,25 L175,55 L160,55 L158,45 L152,45 L150,55 L135,55 Z\n                         M200,25 L215,25 L220,40 L225,25 L240,25 L235,55 L220,55 L218,45 L212,45 L210,55 L195,55 Z\" />\n</vector>","baseTimestamp":1754311537394,"deltas":[{"timestamp":1754314507563,"changes":[{"type":"DELETE","lineNumber":0,"oldContent":"<?xml version=\"1.0\" encoding=\"utf-8\"?>"},{"type":"DELETE","lineNumber":2,"oldContent":"    android:width=\"280dp\""},{"type":"DELETE","lineNumber":3,"oldContent":"    android:height=\"80dp\""},{"type":"DELETE","lineNumber":4,"oldContent":"    android:viewportWidth=\"280\""},{"type":"DELETE","lineNumber":5,"oldContent":"    android:viewportHeight=\"80\">"},{"type":"DELETE","lineNumber":6,"oldContent":"    "},{"type":"DELETE","lineNumber":7,"oldContent":"    <!-- Background -->"},{"type":"DELETE","lineNumber":8,"oldContent":"    <path"},{"type":"DELETE","lineNumber":9,"oldContent":"        android:fillColor=\"#FFFFFF\""},{"type":"DELETE","lineNumber":10,"oldContent":"        android:pathData=\"M10,10 L270,10 A10,10 0 0,1 280,20 L280,60 A10,10 0 0,1 270,70 L10,70 A10,10 0 0,1 0,60 L0,20 A10,10 0 0,1 10,10 Z\" />"},{"type":"DELETE","lineNumber":11,"oldContent":"    "},{"type":"DELETE","lineNumber":12,"oldContent":"    <!-- AR Text -->"},{"type":"DELETE","lineNumber":13,"oldContent":"    <path"},{"type":"DELETE","lineNumber":14,"oldContent":"        android:fillColor=\"#1E3A8A\""},{"type":"DELETE","lineNumber":15,"oldContent":"        android:pathData=\"M20,25 L35,25 L40,40 L45,25 L60,25 L50,55 L30,55 Z M30,35 L40,35 L35,45 Z\" />"},{"type":"DELETE","lineNumber":16,"oldContent":"    "},{"type":"DELETE","lineNumber":17,"oldContent":"    <!-- Walking Text -->"},{"type":"DELETE","lineNumber":18,"oldContent":"    <path"},{"type":"DELETE","lineNumber":19,"oldContent":"        android:fillColor=\"#3B82F6\""},{"type":"DELETE","lineNumber":20,"oldContent":"        android:pathData=\"M80,25 L95,25 L100,40 L105,25 L120,25 L125,55 L110,55 L108,45 L102,45 L100,55 L85,55 Z"},{"type":"DELETE","lineNumber":21,"oldContent":"                         M140,25 L155,25 L160,40 L165,25 L180,25 L175,55 L160,55 L158,45 L152,45 L150,55 L135,55 Z"},{"type":"DELETE","lineNumber":22,"oldContent":"                         M200,25 L215,25 L220,40 L225,25 L240,25 L235,55 L220,55 L218,45 L212,45 L210,55 L195,55 Z\" />"},{"type":"INSERT","lineNumber":1,"content":"    android:width=\"201dp\""},{"type":"INSERT","lineNumber":2,"content":"    android:height=\"75dp\""},{"type":"INSERT","lineNumber":3,"content":"    android:viewportWidth=\"201\""},{"type":"INSERT","lineNumber":4,"content":"    android:viewportHeight=\"75\">"},{"type":"INSERT","lineNumber":5,"content":"  <path"},{"type":"INSERT","lineNumber":6,"content":"      android:pathData=\"M0,0h201v75h-201z\""},{"type":"INSERT","lineNumber":7,"content":"      android:fillColor=\"url(#pattern0_8_8)\"/>"},{"type":"INSERT","lineNumber":8,"content":"  <path"},{"type":"INSERT","lineNumber":9,"content":"      android:pathData=\"M60.19,37L68.67,14.6H74.06L82.67,37H77.34L75.6,32.2H67.07L65.38,37H60.19ZM68.19,28.2H74.45L71.28,19.78L68.19,28.2ZM85.61,37V14.6H94.49C96.11,14.6 97.53,14.87 98.73,15.42C99.95,15.95 100.88,16.72 101.53,17.74C102.19,18.75 102.52,19.96 102.52,21.37C102.52,22.48 102.3,23.45 101.87,24.3C101.43,25.13 100.83,25.82 100.06,26.38C99.3,26.93 98.43,27.33 97.43,27.58L103.71,37H98.06L92.67,28.49H90.35V37H85.61ZM90.35,24.66H93.87C95.08,24.66 96.03,24.42 96.71,23.93C97.41,23.43 97.75,22.67 97.75,21.66C97.75,20.61 97.43,19.83 96.79,19.3C96.17,18.78 95.24,18.52 94.03,18.52H90.35V24.66Z\""},{"type":"INSERT","lineNumber":10,"content":"      android:fillColor=\"#94AD0B\"/>"},{"type":"INSERT","lineNumber":12,"content":""}]},{"timestamp":1754314633077,"changes":[{"type":"MODIFY","lineNumber":1,"content":"    android:width=\"201dp\"","oldContent":"    android:width=\"201dp\""},{"type":"MODIFY","lineNumber":7,"content":"      android:fillColor=\"#FFFFFF\"/>","oldContent":"      android:fillColor=\"url(#pattern0_8_8)\"/>"},{"type":"MODIFY","lineNumber":12,"content":"","oldContent":""}]},{"timestamp":1754326070400,"changes":[{"type":"INSERT","lineNumber":0,"content":"<vector xmlns:android=\"http://schemas.android.com/apk/res/android\""},{"type":"DELETE","lineNumber":1,"oldContent":"    android:width=\"201dp\""},{"type":"MODIFY","lineNumber":7,"content":"      android:fillColor=\"url(#pattern0_8_8)\"/>","oldContent":"      android:fillColor=\"#FFFFFF\"/>"},{"type":"INSERT","lineNumber":11,"content":"</vector>"},{"type":"DELETE","lineNumber":12,"oldContent":""}]},{"timestamp":1754326121659,"changes":[{"type":"MODIFY","lineNumber":7,"content":"","oldContent":"      android:fillColor=\"url(#pattern0_8_8)\"/>"},{"type":"INSERT","lineNumber":8,"content":"    "}]}]},"/Users/florian/Documents/GitHub/ar-walking/app/src/main/java/com/example/arwalking/components/ARInfoIsland.kt":{"filePath":"/Users/florian/Documents/GitHub/ar-walking/app/src/main/java/com/example/arwalking/components/ARInfoIsland.kt","baseContent":"package com.example.arwalking.components\n\nimport androidx.compose.animation.core.*\nimport androidx.compose.foundation.background\nimport androidx.compose.foundation.layout.*\nimport androidx.compose.foundation.shape.RoundedCornerShape\nimport androidx.compose.material.icons.Icons\nimport androidx.compose.material.icons.filled.CameraAlt\nimport androidx.compose.material.icons.filled.Search\nimport androidx.compose.material.icons.filled.CheckCircle\nimport androidx.compose.material.icons.filled.Warning\nimport androidx.compose.material3.*\nimport androidx.compose.runtime.*\nimport androidx.compose.ui.Alignment\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.draw.blur\nimport androidx.compose.ui.draw.clip\nimport androidx.compose.ui.graphics.Color\nimport androidx.compose.ui.graphics.vector.ImageVector\nimport androidx.compose.ui.text.font.FontWeight\nimport androidx.compose.ui.text.style.TextAlign\nimport androidx.compose.ui.unit.dp\nimport androidx.compose.ui.unit.sp\nimport kotlinx.coroutines.delay\n\n/**\n * AR Info Island - Semitransparente UI-Komponente im Apple Dynamic Island Style\n * Zeigt Scan-Status und subtile Benutzerführung während der AR-Navigation\n */\n@Composable\nfun ARInfoIsland(\n    scanStatus: ARScanStatus,\n    modifier: Modifier = Modifier,\n    isVisible: Boolean = true\n) {\n    if (!isVisible) return\n    \n    // Animation für das Ein-/Ausblenden\n    val alpha by animateFloatAsState(\n        targetValue = if (isVisible) 0.85f else 0f,\n        animationSpec = tween(durationMillis = 300),\n        label = \"island_alpha\"\n    )\n    \n    // Pulsierender Effekt für bestimmte Status\n    val pulseAnimation = rememberInfiniteTransition(label = \"pulse\")\n    val pulseAlpha by pulseAnimation.animateFloat(\n        initialValue = 0.7f,\n        targetValue = 1f,\n        animationSpec = infiniteRepeatable(\n            animation = tween(1000, easing = EaseInOut),\n            repeatMode = RepeatMode.Reverse\n        ),\n        label = \"pulse_alpha\"\n    )\n    \n    Box(\n        modifier = modifier\n            .fillMaxWidth()\n            .padding(horizontal = 24.dp, vertical = 12.dp),\n        contentAlignment = Alignment.Center\n    ) {\n        Card(\n            modifier = Modifier\n                .clip(RoundedCornerShape(25.dp))\n                .blur(radius = 0.5.dp), // Subtiler Blur-Effekt\n            colors = CardDefaults.cardColors(\n                containerColor = Color.Black.copy(alpha = alpha)\n            ),\n            elevation = CardDefaults.cardElevation(defaultElevation = 8.dp)\n        ) {\n            Row(\n                modifier = Modifier\n                    .padding(horizontal = 16.dp, vertical = 12.dp),\n                verticalAlignment = Alignment.CenterVertically,\n                horizontalArrangement = Arrangement.spacedBy(12.dp)\n            ) {\n                // Status Icon mit Animation\n                val iconAlpha = if (scanStatus.shouldPulse) pulseAlpha else 1f\n                Icon(\n                    imageVector = scanStatus.icon,\n                    contentDescription = null,\n                    tint = scanStatus.color.copy(alpha = iconAlpha),\n                    modifier = Modifier.size(20.dp)\n                )\n                \n                // Status Text\n                Text(\n                    text = scanStatus.message,\n                    color = Color.White.copy(alpha = 0.9f),\n                    fontSize = 14.sp,\n                    fontWeight = FontWeight.Medium,\n                    textAlign = TextAlign.Center,\n                    maxLines = 1\n                )\n                \n                // Optionaler Fortschrittsindikator\n                if (scanStatus.showProgress) {\n                    CircularProgressIndicator(\n                        modifier = Modifier.size(16.dp),\n                        color = scanStatus.color,\n                        strokeWidth = 2.dp\n                    )\n                }\n            }\n        }\n    }\n}\n\n/**\n * Erweiterte AR Info Island mit mehr Informationen\n */\n@Composable\nfun ExpandedARInfoIsland(\n    scanStatus: ARScanStatus,\n    landmarkCount: Int = 0,\n    confidence: Float = 0f,\n    modifier: Modifier = Modifier,\n    isVisible: Boolean = true\n) {\n    if (!isVisible) return\n    \n    val alpha by animateFloatAsState(\n        targetValue = if (isVisible) 0.85f else 0f,\n        animationSpec = tween(durationMillis = 300),\n        label = \"expanded_island_alpha\"\n    )\n    \n    Box(\n        modifier = modifier\n            .fillMaxWidth()\n            .padding(horizontal = 20.dp, vertical = 8.dp),\n        contentAlignment = Alignment.Center\n    ) {\n        Card(\n            modifier = Modifier\n                .clip(RoundedCornerShape(20.dp))\n                .blur(radius = 0.5.dp),\n            colors = CardDefaults.cardColors(\n                containerColor = Color.Black.copy(alpha = alpha)\n            ),\n            elevation = CardDefaults.cardElevation(defaultElevation = 8.dp)\n        ) {\n            Column(\n                modifier = Modifier.padding(16.dp),\n                horizontalAlignment = Alignment.CenterHorizontally,\n                verticalArrangement = Arrangement.spacedBy(8.dp)\n            ) {\n                // Hauptstatus\n                Row(\n                    verticalAlignment = Alignment.CenterVertically,\n                    horizontalArrangement = Arrangement.spacedBy(8.dp)\n                ) {\n                    Icon(\n                        imageVector = scanStatus.icon,\n                        contentDescription = null,\n                        tint = scanStatus.color,\n                        modifier = Modifier.size(18.dp)\n                    )\n                    \n                    Text(\n                        text = scanStatus.message,\n                        color = Color.White.copy(alpha = 0.9f),\n                        fontSize = 14.sp,\n                        fontWeight = FontWeight.Medium\n                    )\n                }\n                \n                // Zusätzliche Informationen\n                if (landmarkCount > 0 || confidence > 0f) {\n                    Row(\n                        modifier = Modifier.fillMaxWidth(),\n                        horizontalArrangement = Arrangement.SpaceEvenly\n                    ) {\n                        if (landmarkCount > 0) {\n                            InfoChip(\n                                label = \"Landmarks\",\n                                value = landmarkCount.toString(),\n                                color = Color.Blue\n                            )\n                        }\n                        \n                        if (confidence > 0f) {\n                            InfoChip(\n                                label = \"Genauigkeit\",\n                                value = \"${(confidence * 100).toInt()}%\",\n                                color = getConfidenceColor(confidence)\n                            )\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\n@Composable\nprivate fun InfoChip(\n    label: String,\n    value: String,\n    color: Color,\n    modifier: Modifier = Modifier\n) {\n    Row(\n        modifier = modifier\n            .background(\n                color = color.copy(alpha = 0.2f),\n                shape = RoundedCornerShape(12.dp)\n            )\n            .padding(horizontal = 8.dp, vertical = 4.dp),\n        verticalAlignment = Alignment.CenterVertically,\n        horizontalArrangement = Arrangement.spacedBy(4.dp)\n    ) {\n        Text(\n            text = label,\n            color = Color.White.copy(alpha = 0.7f),\n            fontSize = 10.sp\n        )\n        Text(\n            text = value,\n            color = color,\n            fontSize = 12.sp,\n            fontWeight = FontWeight.Bold\n        )\n    }\n}\n\n/**\n * AR Scan Status Datenklasse\n */\ndata class ARScanStatus(\n    val message: String,\n    val icon: ImageVector,\n    val color: Color,\n    val shouldPulse: Boolean = false,\n    val showProgress: Boolean = false\n) {\n    companion object {\n        val INITIALIZING = ARScanStatus(\n            message = \"AR wird initialisiert...\",\n            icon = Icons.Default.CameraAlt,\n            color = Color.Blue,\n            showProgress = true\n        )\n        \n        val SCANNING = ARScanStatus(\n            message = \"Suche nach Landmarks...\",\n            icon = Icons.Default.Search,\n            color = Color.Yellow,\n            shouldPulse = true\n        )\n        \n        val LANDMARK_FOUND = ARScanStatus(\n            message = \"Landmark erkannt\",\n            icon = Icons.Default.CheckCircle,\n            color = Color.Green\n        )\n        \n        val MOVE_CAMERA = ARScanStatus(\n            message = \"Bewege Kamera langsam\",\n            icon = Icons.Default.CameraAlt,\n            color = Color(0xFFFF9800),\n            shouldPulse = true\n        )\n        \n        val LOW_CONFIDENCE = ARScanStatus(\n            message = \"Bessere Beleuchtung benötigt\",\n            icon = Icons.Default.Warning,\n            color = Color.Red,\n            shouldPulse = true\n        )\n        \n        val TRACKING_LOST = ARScanStatus(\n            message = \"Tracking verloren\",\n            icon = Icons.Default.Warning,\n            color = Color.Red\n        )\n        \n        fun custom(message: String, color: Color = Color.White) = ARScanStatus(\n            message = message,\n            icon = Icons.Default.CameraAlt,\n            color = color\n        )\n    }\n}\n\n/**\n * Bestimmt die Farbe basierend auf der Confidence\n */\nprivate fun getConfidenceColor(confidence: Float): Color {\n    return when {\n        confidence >= 0.8f -> Color.Green\n        confidence >= 0.6f -> Color.Yellow\n        confidence >= 0.4f -> Color(0xFFFF9800)\n        else -> Color.Red\n    }\n}\n\n/**\n * Hook für automatische Status-Updates basierend auf AR-Zustand\n */\n@Composable\nfun rememberARScanStatus(\n    isInitialized: Boolean,\n    landmarkCount: Int,\n    bestConfidence: Float,\n    isTracking: Boolean\n): ARScanStatus {\n    var currentStatus by remember { mutableStateOf(ARScanStatus.INITIALIZING) }\n    \n    LaunchedEffect(isInitialized, landmarkCount, bestConfidence, isTracking) {\n        currentStatus = when {\n            !isInitialized -> ARScanStatus.INITIALIZING\n            !isTracking -> ARScanStatus.TRACKING_LOST\n            landmarkCount == 0 -> ARScanStatus.SCANNING\n            bestConfidence < 0.4f -> ARScanStatus.LOW_CONFIDENCE\n            bestConfidence < 0.7f -> ARScanStatus.MOVE_CAMERA\n            else -> ARScanStatus.LANDMARK_FOUND\n        }\n    }\n    \n    return currentStatus\n}","baseTimestamp":1754250915530,"deltas":[{"timestamp":1754306762077,"changes":[{"type":"INSERT","lineNumber":26,"content":" * Status-Enum für AR-Scanning"},{"type":"INSERT","lineNumber":27,"content":" */"},{"type":"INSERT","lineNumber":28,"content":"enum class ARScanStatus {"},{"type":"INSERT","lineNumber":29,"content":"    INITIALIZING,   // System wird initialisiert"},{"type":"INSERT","lineNumber":30,"content":"    SCANNING,       // Sucht nach Landmarks"},{"type":"INSERT","lineNumber":31,"content":"    TRACKING,       // Landmark wird getrackt"},{"type":"INSERT","lineNumber":32,"content":"    LOST,          // Tracking verloren"},{"type":"INSERT","lineNumber":33,"content":"    NAVIGATING     // Navigation aktiv"},{"type":"INSERT","lineNumber":34,"content":"}"},{"type":"INSERT","lineNumber":35,"content":""},{"type":"INSERT","lineNumber":36,"content":"/**"},{"type":"INSERT","lineNumber":37,"content":" * Helper functions für ARScanStatus enum"},{"type":"INSERT","lineNumber":38,"content":" */"},{"type":"INSERT","lineNumber":39,"content":"private fun ARScanStatus.shouldPulse(): Boolean = when (this) {"},{"type":"INSERT","lineNumber":40,"content":"    ARScanStatus.SCANNING, ARScanStatus.INITIALIZING -> true"},{"type":"INSERT","lineNumber":41,"content":"    else -> false"},{"type":"INSERT","lineNumber":42,"content":"}"},{"type":"INSERT","lineNumber":43,"content":""},{"type":"INSERT","lineNumber":44,"content":"private fun ARScanStatus.getIcon(): ImageVector = when (this) {"},{"type":"INSERT","lineNumber":45,"content":"    ARScanStatus.INITIALIZING -> Icons.Default.CameraAlt"},{"type":"INSERT","lineNumber":46,"content":"    ARScanStatus.SCANNING -> Icons.Default.Search"},{"type":"INSERT","lineNumber":47,"content":"    ARScanStatus.TRACKING -> Icons.Default.CheckCircle"},{"type":"INSERT","lineNumber":48,"content":"    ARScanStatus.LOST -> Icons.Default.Warning"},{"type":"INSERT","lineNumber":49,"content":"    ARScanStatus.NAVIGATING -> Icons.Default.CheckCircle"},{"type":"INSERT","lineNumber":50,"content":"}"},{"type":"INSERT","lineNumber":51,"content":""},{"type":"INSERT","lineNumber":52,"content":"private fun ARScanStatus.getColor(): Color = when (this) {"},{"type":"INSERT","lineNumber":53,"content":"    ARScanStatus.INITIALIZING -> Color.Blue"},{"type":"INSERT","lineNumber":54,"content":"    ARScanStatus.SCANNING -> Color.Yellow"},{"type":"INSERT","lineNumber":55,"content":"    ARScanStatus.TRACKING -> Color.Green"},{"type":"INSERT","lineNumber":56,"content":"    ARScanStatus.LOST -> Color.Red"},{"type":"INSERT","lineNumber":57,"content":"    ARScanStatus.NAVIGATING -> Color.Green"},{"type":"INSERT","lineNumber":58,"content":"}"},{"type":"INSERT","lineNumber":59,"content":""},{"type":"INSERT","lineNumber":60,"content":"private fun ARScanStatus.getMessage(): String = when (this) {"},{"type":"INSERT","lineNumber":61,"content":"    ARScanStatus.INITIALIZING -> \"AR wird initialisiert...\""},{"type":"INSERT","lineNumber":62,"content":"    ARScanStatus.SCANNING -> \"Suche nach Landmarks...\""},{"type":"INSERT","lineNumber":63,"content":"    ARScanStatus.TRACKING -> \"Landmark erkannt\""},{"type":"INSERT","lineNumber":64,"content":"    ARScanStatus.LOST -> \"Landmark verloren\""},{"type":"INSERT","lineNumber":65,"content":"    ARScanStatus.NAVIGATING -> \"Navigation aktiv\""},{"type":"INSERT","lineNumber":66,"content":"}"},{"type":"INSERT","lineNumber":67,"content":""},{"type":"INSERT","lineNumber":68,"content":"private fun ARScanStatus.showProgress(): Boolean = when (this) {"},{"type":"INSERT","lineNumber":69,"content":"    ARScanStatus.INITIALIZING -> true"},{"type":"INSERT","lineNumber":70,"content":"    else -> false"},{"type":"INSERT","lineNumber":71,"content":"}"},{"type":"INSERT","lineNumber":72,"content":""},{"type":"INSERT","lineNumber":73,"content":"/**"},{"type":"DELETE","lineNumber":78,"oldContent":"                val iconAlpha = if (scanStatus.shouldPulse) pulseAlpha else 1f"},{"type":"INSERT","lineNumber":126,"content":"                val iconAlpha = if (scanStatus.shouldPulse()) pulseAlpha else 1f"},{"type":"DELETE","lineNumber":80,"oldContent":"                    imageVector = scanStatus.icon,"},{"type":"INSERT","lineNumber":128,"content":"                    imageVector = scanStatus.getIcon(),"},{"type":"DELETE","lineNumber":82,"oldContent":"                    tint = scanStatus.color.copy(alpha = iconAlpha),"},{"type":"INSERT","lineNumber":130,"content":"                    tint = scanStatus.getColor().copy(alpha = iconAlpha),"},{"type":"DELETE","lineNumber":88,"oldContent":"                    text = scanStatus.message,"},{"type":"INSERT","lineNumber":136,"content":"                    text = scanStatus.getMessage(),"},{"type":"DELETE","lineNumber":97,"oldContent":"                if (scanStatus.showProgress) {"},{"type":"INSERT","lineNumber":145,"content":"                if (scanStatus.showProgress()) {"},{"type":"DELETE","lineNumber":100,"oldContent":"                        color = scanStatus.color,"},{"type":"INSERT","lineNumber":148,"content":"                        color = scanStatus.getColor(),"},{"type":"DELETE","lineNumber":109,"oldContent":"/**"},{"type":"DELETE","lineNumber":110,"oldContent":" * Erweiterte AR Info Island mit mehr Informationen"},{"type":"DELETE","lineNumber":111,"oldContent":" */"},{"type":"DELETE","lineNumber":112,"oldContent":"@Composable"},{"type":"DELETE","lineNumber":113,"oldContent":"fun ExpandedARInfoIsland("},{"type":"DELETE","lineNumber":114,"oldContent":"    scanStatus: ARScanStatus,"},{"type":"DELETE","lineNumber":115,"oldContent":"    landmarkCount: Int = 0,"},{"type":"DELETE","lineNumber":116,"oldContent":"    confidence: Float = 0f,"},{"type":"DELETE","lineNumber":117,"oldContent":"    modifier: Modifier = Modifier,"},{"type":"DELETE","lineNumber":118,"oldContent":"    isVisible: Boolean = true"},{"type":"DELETE","lineNumber":119,"oldContent":") {"},{"type":"DELETE","lineNumber":120,"oldContent":"    if (!isVisible) return"},{"type":"DELETE","lineNumber":121,"oldContent":"    "},{"type":"DELETE","lineNumber":122,"oldContent":"    val alpha by animateFloatAsState("},{"type":"DELETE","lineNumber":123,"oldContent":"        targetValue = if (isVisible) 0.85f else 0f,"},{"type":"DELETE","lineNumber":124,"oldContent":"        animationSpec = tween(durationMillis = 300),"},{"type":"DELETE","lineNumber":125,"oldContent":"        label = \"expanded_island_alpha\""},{"type":"DELETE","lineNumber":126,"oldContent":"    )"},{"type":"DELETE","lineNumber":127,"oldContent":"    "},{"type":"DELETE","lineNumber":128,"oldContent":"    Box("},{"type":"DELETE","lineNumber":129,"oldContent":"        modifier = modifier"},{"type":"DELETE","lineNumber":130,"oldContent":"            .fillMaxWidth()"},{"type":"DELETE","lineNumber":131,"oldContent":"            .padding(horizontal = 20.dp, vertical = 8.dp),"},{"type":"DELETE","lineNumber":132,"oldContent":"        contentAlignment = Alignment.Center"},{"type":"DELETE","lineNumber":133,"oldContent":"    ) {"},{"type":"DELETE","lineNumber":134,"oldContent":"        Card("},{"type":"DELETE","lineNumber":135,"oldContent":"            modifier = Modifier"},{"type":"DELETE","lineNumber":136,"oldContent":"                .clip(RoundedCornerShape(20.dp))"},{"type":"DELETE","lineNumber":137,"oldContent":"                .blur(radius = 0.5.dp),"},{"type":"DELETE","lineNumber":138,"oldContent":"            colors = CardDefaults.cardColors("},{"type":"DELETE","lineNumber":139,"oldContent":"                containerColor = Color.Black.copy(alpha = alpha)"},{"type":"DELETE","lineNumber":140,"oldContent":"            ),"},{"type":"DELETE","lineNumber":141,"oldContent":"            elevation = CardDefaults.cardElevation(defaultElevation = 8.dp)"},{"type":"DELETE","lineNumber":142,"oldContent":"        ) {"},{"type":"DELETE","lineNumber":143,"oldContent":"            Column("},{"type":"DELETE","lineNumber":144,"oldContent":"                modifier = Modifier.padding(16.dp),"},{"type":"DELETE","lineNumber":145,"oldContent":"                horizontalAlignment = Alignment.CenterHorizontally,"},{"type":"DELETE","lineNumber":146,"oldContent":"                verticalArrangement = Arrangement.spacedBy(8.dp)"},{"type":"DELETE","lineNumber":147,"oldContent":"            ) {"},{"type":"DELETE","lineNumber":148,"oldContent":"                // Hauptstatus"},{"type":"DELETE","lineNumber":149,"oldContent":"                Row("},{"type":"DELETE","lineNumber":150,"oldContent":"                    verticalAlignment = Alignment.CenterVertically,"},{"type":"DELETE","lineNumber":151,"oldContent":"                    horizontalArrangement = Arrangement.spacedBy(8.dp)"},{"type":"DELETE","lineNumber":152,"oldContent":"                ) {"},{"type":"DELETE","lineNumber":153,"oldContent":"                    Icon("},{"type":"DELETE","lineNumber":154,"oldContent":"                        imageVector = scanStatus.icon,"},{"type":"DELETE","lineNumber":155,"oldContent":"                        contentDescription = null,"},{"type":"DELETE","lineNumber":156,"oldContent":"                        tint = scanStatus.color,"},{"type":"DELETE","lineNumber":157,"oldContent":"                        modifier = Modifier.size(18.dp)"},{"type":"DELETE","lineNumber":158,"oldContent":"                    )"},{"type":"DELETE","lineNumber":159,"oldContent":"                    "},{"type":"DELETE","lineNumber":160,"oldContent":"                    Text("},{"type":"DELETE","lineNumber":161,"oldContent":"                        text = scanStatus.message,"},{"type":"DELETE","lineNumber":162,"oldContent":"                        color = Color.White.copy(alpha = 0.9f),"},{"type":"DELETE","lineNumber":163,"oldContent":"                        fontSize = 14.sp,"},{"type":"DELETE","lineNumber":164,"oldContent":"                        fontWeight = FontWeight.Medium"},{"type":"DELETE","lineNumber":165,"oldContent":"                    )"},{"type":"DELETE","lineNumber":166,"oldContent":"                }"},{"type":"DELETE","lineNumber":167,"oldContent":"                "},{"type":"DELETE","lineNumber":168,"oldContent":"                // Zusätzliche Informationen"},{"type":"DELETE","lineNumber":169,"oldContent":"                if (landmarkCount > 0 || confidence > 0f) {"},{"type":"DELETE","lineNumber":170,"oldContent":"                    Row("},{"type":"DELETE","lineNumber":171,"oldContent":"                        modifier = Modifier.fillMaxWidth(),"},{"type":"DELETE","lineNumber":172,"oldContent":"                        horizontalArrangement = Arrangement.SpaceEvenly"},{"type":"DELETE","lineNumber":173,"oldContent":"                    ) {"},{"type":"DELETE","lineNumber":174,"oldContent":"                        if (landmarkCount > 0) {"},{"type":"DELETE","lineNumber":175,"oldContent":"                            InfoChip("},{"type":"DELETE","lineNumber":176,"oldContent":"                                label = \"Landmarks\","},{"type":"DELETE","lineNumber":177,"oldContent":"                                value = landmarkCount.toString(),"},{"type":"DELETE","lineNumber":178,"oldContent":"                                color = Color.Blue"},{"type":"DELETE","lineNumber":179,"oldContent":"                            )"},{"type":"DELETE","lineNumber":180,"oldContent":"                        }"},{"type":"DELETE","lineNumber":181,"oldContent":"                        "},{"type":"DELETE","lineNumber":182,"oldContent":"                        if (confidence > 0f) {"},{"type":"DELETE","lineNumber":183,"oldContent":"                            InfoChip("},{"type":"DELETE","lineNumber":184,"oldContent":"                                label = \"Genauigkeit\","},{"type":"DELETE","lineNumber":185,"oldContent":"                                value = \"${(confidence * 100).toInt()}%\","},{"type":"DELETE","lineNumber":186,"oldContent":"                                color = getConfidenceColor(confidence)"},{"type":"DELETE","lineNumber":187,"oldContent":"                            )"},{"type":"DELETE","lineNumber":188,"oldContent":"                        }"},{"type":"DELETE","lineNumber":189,"oldContent":"                    }"},{"type":"DELETE","lineNumber":190,"oldContent":"                }"},{"type":"DELETE","lineNumber":191,"oldContent":"            }"},{"type":"DELETE","lineNumber":192,"oldContent":"        }"},{"type":"DELETE","lineNumber":193,"oldContent":"    }"},{"type":"DELETE","lineNumber":194,"oldContent":"}"},{"type":"DELETE","lineNumber":196,"oldContent":"@Composable"},{"type":"DELETE","lineNumber":197,"oldContent":"private fun InfoChip("},{"type":"DELETE","lineNumber":198,"oldContent":"    label: String,"},{"type":"DELETE","lineNumber":199,"oldContent":"    value: String,"},{"type":"DELETE","lineNumber":200,"oldContent":"    color: Color,"},{"type":"DELETE","lineNumber":201,"oldContent":"    modifier: Modifier = Modifier"},{"type":"DELETE","lineNumber":202,"oldContent":") {"},{"type":"DELETE","lineNumber":203,"oldContent":"    Row("},{"type":"DELETE","lineNumber":204,"oldContent":"        modifier = modifier"},{"type":"DELETE","lineNumber":205,"oldContent":"            .background("},{"type":"DELETE","lineNumber":206,"oldContent":"                color = color.copy(alpha = 0.2f),"},{"type":"DELETE","lineNumber":207,"oldContent":"                shape = RoundedCornerShape(12.dp)"},{"type":"DELETE","lineNumber":208,"oldContent":"            )"},{"type":"DELETE","lineNumber":209,"oldContent":"            .padding(horizontal = 8.dp, vertical = 4.dp),"},{"type":"DELETE","lineNumber":210,"oldContent":"        verticalAlignment = Alignment.CenterVertically,"},{"type":"DELETE","lineNumber":211,"oldContent":"        horizontalArrangement = Arrangement.spacedBy(4.dp)"},{"type":"DELETE","lineNumber":212,"oldContent":"    ) {"},{"type":"DELETE","lineNumber":213,"oldContent":"        Text("},{"type":"DELETE","lineNumber":214,"oldContent":"            text = label,"},{"type":"DELETE","lineNumber":215,"oldContent":"            color = Color.White.copy(alpha = 0.7f),"},{"type":"DELETE","lineNumber":216,"oldContent":"            fontSize = 10.sp"},{"type":"DELETE","lineNumber":217,"oldContent":"        )"},{"type":"DELETE","lineNumber":218,"oldContent":"        Text("},{"type":"DELETE","lineNumber":219,"oldContent":"            text = value,"},{"type":"DELETE","lineNumber":220,"oldContent":"            color = color,"},{"type":"DELETE","lineNumber":221,"oldContent":"            fontSize = 12.sp,"},{"type":"DELETE","lineNumber":222,"oldContent":"            fontWeight = FontWeight.Bold"},{"type":"DELETE","lineNumber":223,"oldContent":"        )"},{"type":"DELETE","lineNumber":224,"oldContent":"    }"},{"type":"DELETE","lineNumber":225,"oldContent":"}"},{"type":"DELETE","lineNumber":228,"oldContent":" * AR Scan Status Datenklasse"},{"type":"DELETE","lineNumber":229,"oldContent":" */"},{"type":"DELETE","lineNumber":230,"oldContent":"data class ARScanStatus("},{"type":"DELETE","lineNumber":231,"oldContent":"    val message: String,"},{"type":"DELETE","lineNumber":232,"oldContent":"    val icon: ImageVector,"},{"type":"DELETE","lineNumber":233,"oldContent":"    val color: Color,"},{"type":"DELETE","lineNumber":234,"oldContent":"    val shouldPulse: Boolean = false,"},{"type":"DELETE","lineNumber":235,"oldContent":"    val showProgress: Boolean = false"},{"type":"DELETE","lineNumber":236,"oldContent":") {"},{"type":"DELETE","lineNumber":237,"oldContent":"    companion object {"},{"type":"DELETE","lineNumber":238,"oldContent":"        val INITIALIZING = ARScanStatus("},{"type":"DELETE","lineNumber":239,"oldContent":"            message = \"AR wird initialisiert...\","},{"type":"DELETE","lineNumber":240,"oldContent":"            icon = Icons.Default.CameraAlt,"},{"type":"DELETE","lineNumber":241,"oldContent":"            color = Color.Blue,"},{"type":"DELETE","lineNumber":242,"oldContent":"            showProgress = true"},{"type":"DELETE","lineNumber":243,"oldContent":"        )"},{"type":"DELETE","lineNumber":244,"oldContent":"        "},{"type":"DELETE","lineNumber":245,"oldContent":"        val SCANNING = ARScanStatus("},{"type":"DELETE","lineNumber":246,"oldContent":"            message = \"Suche nach Landmarks...\","},{"type":"DELETE","lineNumber":247,"oldContent":"            icon = Icons.Default.Search,"},{"type":"DELETE","lineNumber":248,"oldContent":"            color = Color.Yellow,"},{"type":"DELETE","lineNumber":249,"oldContent":"            shouldPulse = true"},{"type":"DELETE","lineNumber":250,"oldContent":"        )"},{"type":"DELETE","lineNumber":251,"oldContent":"        "},{"type":"DELETE","lineNumber":252,"oldContent":"        val LANDMARK_FOUND = ARScanStatus("},{"type":"DELETE","lineNumber":253,"oldContent":"            message = \"Landmark erkannt\","},{"type":"DELETE","lineNumber":254,"oldContent":"            icon = Icons.Default.CheckCircle,"},{"type":"DELETE","lineNumber":255,"oldContent":"            color = Color.Green"},{"type":"DELETE","lineNumber":256,"oldContent":"        )"},{"type":"DELETE","lineNumber":257,"oldContent":"        "},{"type":"DELETE","lineNumber":258,"oldContent":"        val MOVE_CAMERA = ARScanStatus("},{"type":"DELETE","lineNumber":259,"oldContent":"            message = \"Bewege Kamera langsam\","},{"type":"DELETE","lineNumber":260,"oldContent":"            icon = Icons.Default.CameraAlt,"},{"type":"DELETE","lineNumber":261,"oldContent":"            color = Color(0xFFFF9800),"},{"type":"DELETE","lineNumber":262,"oldContent":"            shouldPulse = true"},{"type":"DELETE","lineNumber":263,"oldContent":"        )"},{"type":"DELETE","lineNumber":264,"oldContent":"        "},{"type":"DELETE","lineNumber":265,"oldContent":"        val LOW_CONFIDENCE = ARScanStatus("},{"type":"DELETE","lineNumber":266,"oldContent":"            message = \"Bessere Beleuchtung benötigt\","},{"type":"DELETE","lineNumber":267,"oldContent":"            icon = Icons.Default.Warning,"},{"type":"DELETE","lineNumber":268,"oldContent":"            color = Color.Red,"},{"type":"DELETE","lineNumber":269,"oldContent":"            shouldPulse = true"},{"type":"DELETE","lineNumber":270,"oldContent":"        )"},{"type":"DELETE","lineNumber":271,"oldContent":"        "},{"type":"DELETE","lineNumber":272,"oldContent":"        val TRACKING_LOST = ARScanStatus("},{"type":"DELETE","lineNumber":273,"oldContent":"            message = \"Tracking verloren\","},{"type":"DELETE","lineNumber":274,"oldContent":"            icon = Icons.Default.Warning,"},{"type":"DELETE","lineNumber":275,"oldContent":"            color = Color.Red"},{"type":"DELETE","lineNumber":276,"oldContent":"        )"},{"type":"DELETE","lineNumber":277,"oldContent":"        "},{"type":"DELETE","lineNumber":278,"oldContent":"        fun custom(message: String, color: Color = Color.White) = ARScanStatus("},{"type":"DELETE","lineNumber":279,"oldContent":"            message = message,"},{"type":"DELETE","lineNumber":280,"oldContent":"            icon = Icons.Default.CameraAlt,"},{"type":"DELETE","lineNumber":281,"oldContent":"            color = color"},{"type":"DELETE","lineNumber":282,"oldContent":"        )"},{"type":"DELETE","lineNumber":283,"oldContent":"    }"},{"type":"DELETE","lineNumber":284,"oldContent":"}"},{"type":"DELETE","lineNumber":285,"oldContent":""},{"type":"DELETE","lineNumber":286,"oldContent":"/**"},{"type":"INSERT","lineNumber":182,"content":"    var stableTrackingState by remember { mutableStateOf(true) }"},{"type":"INSERT","lineNumber":183,"content":"    var lastTrackingTime by remember { mutableStateOf(System.currentTimeMillis()) }"},{"type":"DELETE","lineNumber":310,"oldContent":"    LaunchedEffect(isInitialized, landmarkCount, bestConfidence, isTracking) {"},{"type":"INSERT","lineNumber":185,"content":"    // Stabilisiere den Tracking-Status um falsches \"Tracking verloren\" zu vermeiden"},{"type":"INSERT","lineNumber":186,"content":"    LaunchedEffect(isTracking) {"},{"type":"INSERT","lineNumber":187,"content":"        if (isTracking) {"},{"type":"INSERT","lineNumber":188,"content":"            stableTrackingState = true"},{"type":"INSERT","lineNumber":189,"content":"            lastTrackingTime = System.currentTimeMillis()"},{"type":"INSERT","lineNumber":190,"content":"        } else {"},{"type":"INSERT","lineNumber":191,"content":"            // Warte 5 Sekunden ohne Tracking bevor \"Tracking verloren\" angezeigt wird"},{"type":"INSERT","lineNumber":192,"content":"            delay(5000)"},{"type":"INSERT","lineNumber":193,"content":"            if (System.currentTimeMillis() - lastTrackingTime >= 5000) {"},{"type":"INSERT","lineNumber":194,"content":"                stableTrackingState = false"},{"type":"INSERT","lineNumber":195,"content":"            }"},{"type":"INSERT","lineNumber":196,"content":"        }"},{"type":"INSERT","lineNumber":197,"content":"    }"},{"type":"INSERT","lineNumber":198,"content":"    "},{"type":"INSERT","lineNumber":199,"content":"    LaunchedEffect(isInitialized, landmarkCount, bestConfidence, stableTrackingState) {"},{"type":"DELETE","lineNumber":313,"oldContent":"            !isTracking -> ARScanStatus.TRACKING_LOST"},{"type":"INSERT","lineNumber":202,"content":"            !stableTrackingState -> ARScanStatus.LOST"},{"type":"DELETE","lineNumber":315,"oldContent":"            bestConfidence < 0.4f -> ARScanStatus.LOW_CONFIDENCE"},{"type":"DELETE","lineNumber":316,"oldContent":"            bestConfidence < 0.7f -> ARScanStatus.MOVE_CAMERA"},{"type":"DELETE","lineNumber":317,"oldContent":"            else -> ARScanStatus.LANDMARK_FOUND"},{"type":"INSERT","lineNumber":204,"content":"            bestConfidence >= 0.7f && isTracking -> ARScanStatus.NAVIGATING"},{"type":"INSERT","lineNumber":205,"content":"            bestConfidence >= 0.5f && isTracking -> ARScanStatus.TRACKING"},{"type":"INSERT","lineNumber":206,"content":"            else -> ARScanStatus.SCANNING"}]},{"timestamp":1754314675801,"changes":[{"type":"DELETE","lineNumber":27,"oldContent":" * AR Info Island - Semitransparente UI-Komponente im Apple Dynamic Island Style"},{"type":"DELETE","lineNumber":29,"oldContent":" * Zeigt Scan-Status und subtile Benutzerführung während der AR-Navigation"},{"type":"DELETE","lineNumber":31,"oldContent":" */"},{"type":"DELETE","lineNumber":33,"oldContent":"@Composable"},{"type":"DELETE","lineNumber":35,"oldContent":"fun ARInfoIsland("},{"type":"DELETE","lineNumber":37,"oldContent":"    scanStatus: ARScanStatus,"},{"type":"DELETE","lineNumber":39,"oldContent":"    modifier: Modifier = Modifier,"},{"type":"DELETE","lineNumber":41,"oldContent":"    isVisible: Boolean = true"},{"type":"DELETE","lineNumber":43,"oldContent":") {"},{"type":"DELETE","lineNumber":45,"oldContent":"    if (!isVisible) return"},{"type":"DELETE","lineNumber":47,"oldContent":"    "},{"type":"DELETE","lineNumber":49,"oldContent":"    // Animation für das Ein-/Ausblenden"},{"type":"DELETE","lineNumber":51,"oldContent":"    val alpha by animateFloatAsState("},{"type":"DELETE","lineNumber":53,"oldContent":"        targetValue = if (isVisible) 0.85f else 0f,"},{"type":"DELETE","lineNumber":55,"oldContent":"        animationSpec = tween(durationMillis = 300),"},{"type":"DELETE","lineNumber":57,"oldContent":"        label = \"island_alpha\""},{"type":"DELETE","lineNumber":59,"oldContent":"    )"},{"type":"DELETE","lineNumber":61,"oldContent":"    "},{"type":"DELETE","lineNumber":63,"oldContent":"    // Pulsierender Effekt für bestimmte Status"},{"type":"DELETE","lineNumber":65,"oldContent":"    val pulseAnimation = rememberInfiniteTransition(label = \"pulse\")"},{"type":"DELETE","lineNumber":67,"oldContent":"    val pulseAlpha by pulseAnimation.animateFloat("},{"type":"DELETE","lineNumber":69,"oldContent":"        initialValue = 0.7f,"},{"type":"DELETE","lineNumber":71,"oldContent":"        targetValue = 1f,"},{"type":"DELETE","lineNumber":73,"oldContent":"        animationSpec = infiniteRepeatable("},{"type":"DELETE","lineNumber":75,"oldContent":"            animation = tween(1000, easing = EaseInOut),"},{"type":"DELETE","lineNumber":77,"oldContent":"            repeatMode = RepeatMode.Reverse"},{"type":"DELETE","lineNumber":79,"oldContent":"        ),"},{"type":"DELETE","lineNumber":81,"oldContent":"        label = \"pulse_alpha\""},{"type":"DELETE","lineNumber":83,"oldContent":"    )"},{"type":"DELETE","lineNumber":85,"oldContent":"    "},{"type":"DELETE","lineNumber":87,"oldContent":"    Box("},{"type":"DELETE","lineNumber":89,"oldContent":"        modifier = modifier"},{"type":"DELETE","lineNumber":91,"oldContent":"            .fillMaxWidth()"},{"type":"DELETE","lineNumber":93,"oldContent":"            .padding(horizontal = 24.dp, vertical = 12.dp),"},{"type":"DELETE","lineNumber":95,"oldContent":"        contentAlignment = Alignment.Center"},{"type":"DELETE","lineNumber":97,"oldContent":"    ) {"},{"type":"DELETE","lineNumber":99,"oldContent":"        Card("},{"type":"DELETE","lineNumber":101,"oldContent":"            modifier = Modifier"},{"type":"DELETE","lineNumber":103,"oldContent":"                .clip(RoundedCornerShape(25.dp))"},{"type":"DELETE","lineNumber":105,"oldContent":"                .blur(radius = 0.5.dp), // Subtiler Blur-Effekt"},{"type":"DELETE","lineNumber":107,"oldContent":"            colors = CardDefaults.cardColors("},{"type":"DELETE","lineNumber":109,"oldContent":"                containerColor = Color.Black.copy(alpha = alpha)"},{"type":"DELETE","lineNumber":111,"oldContent":"            ),"},{"type":"DELETE","lineNumber":113,"oldContent":"            elevation = CardDefaults.cardElevation(defaultElevation = 8.dp)"},{"type":"DELETE","lineNumber":115,"oldContent":"        ) {"},{"type":"DELETE","lineNumber":117,"oldContent":"            Row("},{"type":"DELETE","lineNumber":119,"oldContent":"                modifier = Modifier"},{"type":"INSERT","lineNumber":74,"content":" * AR Info Island - Semitransparente UI-Komponente im Dynamic Island Style"},{"type":"INSERT","lineNumber":75,"content":" * Zeigt Scan-Status und subtile Benutzerführung während der AR-Navigation"},{"type":"INSERT","lineNumber":76,"content":" */"},{"type":"INSERT","lineNumber":77,"content":"@Composable"},{"type":"INSERT","lineNumber":78,"content":"fun ARInfoIsland("},{"type":"INSERT","lineNumber":79,"content":"    scanStatus: ARScanStatus,"},{"type":"INSERT","lineNumber":80,"content":"    modifier: Modifier = Modifier,"},{"type":"INSERT","lineNumber":81,"content":"    isVisible: Boolean = true"},{"type":"INSERT","lineNumber":82,"content":") {"},{"type":"INSERT","lineNumber":83,"content":"    if (!isVisible) return"},{"type":"INSERT","lineNumber":84,"content":"    "},{"type":"INSERT","lineNumber":85,"content":"    // Animation für das Ein-/Ausblenden"},{"type":"INSERT","lineNumber":86,"content":"    val alpha by animateFloatAsState("},{"type":"INSERT","lineNumber":87,"content":"        targetValue = if (isVisible) 0.85f else 0f,"},{"type":"INSERT","lineNumber":88,"content":"        animationSpec = tween(durationMillis = 300),"},{"type":"INSERT","lineNumber":89,"content":"        label = \"island_alpha\""},{"type":"INSERT","lineNumber":90,"content":"    )"},{"type":"INSERT","lineNumber":91,"content":"    "},{"type":"INSERT","lineNumber":92,"content":"    // Pulsierender Effekt für bestimmte Status"},{"type":"INSERT","lineNumber":93,"content":"    val pulseAnimation = rememberInfiniteTransition(label = \"pulse\")"},{"type":"INSERT","lineNumber":94,"content":"    val pulseAlpha by pulseAnimation.animateFloat("},{"type":"INSERT","lineNumber":95,"content":"        initialValue = 0.7f,"},{"type":"INSERT","lineNumber":96,"content":"        targetValue = 1f,"},{"type":"INSERT","lineNumber":97,"content":"        animationSpec = infiniteRepeatable("},{"type":"INSERT","lineNumber":98,"content":"            animation = tween(1000, easing = EaseInOut),"},{"type":"INSERT","lineNumber":99,"content":"            repeatMode = RepeatMode.Reverse"},{"type":"INSERT","lineNumber":100,"content":"        ),"},{"type":"INSERT","lineNumber":101,"content":"        label = \"pulse_alpha\""},{"type":"INSERT","lineNumber":102,"content":"    )"},{"type":"INSERT","lineNumber":103,"content":"    "},{"type":"INSERT","lineNumber":104,"content":"    Box("},{"type":"INSERT","lineNumber":105,"content":"        modifier = modifier"},{"type":"INSERT","lineNumber":106,"content":"            .fillMaxWidth()"},{"type":"INSERT","lineNumber":107,"content":"            .padding(horizontal = 24.dp, vertical = 12.dp),"},{"type":"INSERT","lineNumber":108,"content":"        contentAlignment = Alignment.Center"},{"type":"INSERT","lineNumber":109,"content":"    ) {"},{"type":"INSERT","lineNumber":110,"content":"        Card("},{"type":"INSERT","lineNumber":111,"content":"            modifier = Modifier"},{"type":"INSERT","lineNumber":112,"content":"                .clip(RoundedCornerShape(25.dp))"},{"type":"INSERT","lineNumber":113,"content":"                .blur(radius = 0.5.dp), // Subtiler Blur-Effekt"},{"type":"INSERT","lineNumber":114,"content":"            colors = CardDefaults.cardColors("},{"type":"INSERT","lineNumber":115,"content":"                containerColor = Color.Black.copy(alpha = alpha)"},{"type":"INSERT","lineNumber":116,"content":"            ),"},{"type":"INSERT","lineNumber":117,"content":"            elevation = CardDefaults.cardElevation(defaultElevation = 8.dp)"},{"type":"INSERT","lineNumber":118,"content":"        ) {"},{"type":"INSERT","lineNumber":119,"content":"            Row("},{"type":"INSERT","lineNumber":120,"content":"                modifier = Modifier"},{"type":"INSERT","lineNumber":126,"content":"                val iconAlpha = if (scanStatus.shouldPulse()) pulseAlpha else 1f"},{"type":"INSERT","lineNumber":128,"content":"                    imageVector = scanStatus.getIcon(),"},{"type":"INSERT","lineNumber":130,"content":"                    tint = scanStatus.getColor().copy(alpha = iconAlpha),"},{"type":"INSERT","lineNumber":136,"content":"                    text = scanStatus.getMessage(),"},{"type":"INSERT","lineNumber":145,"content":"                if (scanStatus.showProgress()) {"},{"type":"INSERT","lineNumber":148,"content":"                        color = scanStatus.getColor(),"},{"type":"DELETE","lineNumber":151,"oldContent":"                val iconAlpha = if (scanStatus.shouldPulse()) pulseAlpha else 1f"},{"type":"DELETE","lineNumber":152,"oldContent":"                    imageVector = scanStatus.getIcon(),"},{"type":"DELETE","lineNumber":153,"oldContent":"                    tint = scanStatus.getColor().copy(alpha = iconAlpha),"},{"type":"DELETE","lineNumber":154,"oldContent":"                    text = scanStatus.getMessage(),"},{"type":"DELETE","lineNumber":155,"oldContent":"                if (scanStatus.showProgress()) {"},{"type":"DELETE","lineNumber":156,"oldContent":"                        color = scanStatus.getColor(),"},{"type":"DELETE","lineNumber":157,"oldContent":"    var stableTrackingState by remember { mutableStateOf(true) }"},{"type":"DELETE","lineNumber":158,"oldContent":"    var lastTrackingTime by remember { mutableStateOf(System.currentTimeMillis()) }"},{"type":"DELETE","lineNumber":159,"oldContent":"    // Stabilisiere den Tracking-Status um falsches \"Tracking verloren\" zu vermeiden"},{"type":"DELETE","lineNumber":160,"oldContent":"    LaunchedEffect(isTracking) {"},{"type":"DELETE","lineNumber":161,"oldContent":"        if (isTracking) {"},{"type":"DELETE","lineNumber":162,"oldContent":"            stableTrackingState = true"},{"type":"DELETE","lineNumber":163,"oldContent":"            lastTrackingTime = System.currentTimeMillis()"},{"type":"DELETE","lineNumber":164,"oldContent":"        } else {"},{"type":"DELETE","lineNumber":165,"oldContent":"            // Warte 5 Sekunden ohne Tracking bevor \"Tracking verloren\" angezeigt wird"},{"type":"DELETE","lineNumber":166,"oldContent":"            delay(5000)"},{"type":"DELETE","lineNumber":167,"oldContent":"            if (System.currentTimeMillis() - lastTrackingTime >= 5000) {"},{"type":"DELETE","lineNumber":168,"oldContent":"                stableTrackingState = false"},{"type":"DELETE","lineNumber":169,"oldContent":"            }"},{"type":"DELETE","lineNumber":171,"oldContent":"        }"},{"type":"DELETE","lineNumber":172,"oldContent":"    }"},{"type":"DELETE","lineNumber":173,"oldContent":"    "},{"type":"DELETE","lineNumber":174,"oldContent":"    LaunchedEffect(isInitialized, landmarkCount, bestConfidence, stableTrackingState) {"},{"type":"DELETE","lineNumber":175,"oldContent":"            !stableTrackingState -> ARScanStatus.LOST"},{"type":"DELETE","lineNumber":176,"oldContent":"            bestConfidence >= 0.7f && isTracking -> ARScanStatus.NAVIGATING"},{"type":"DELETE","lineNumber":177,"oldContent":"            bestConfidence >= 0.5f && isTracking -> ARScanStatus.TRACKING"},{"type":"DELETE","lineNumber":178,"oldContent":"            else -> ARScanStatus.SCANNING"},{"type":"INSERT","lineNumber":182,"content":"    var stableTrackingState by remember { mutableStateOf(true) }"},{"type":"INSERT","lineNumber":183,"content":"    var lastTrackingTime by remember { mutableStateOf(System.currentTimeMillis()) }"},{"type":"INSERT","lineNumber":185,"content":"    // Stabilisiere den Tracking-Status um falsches \"Tracking verloren\" zu vermeiden"},{"type":"INSERT","lineNumber":186,"content":"    LaunchedEffect(isTracking) {"},{"type":"INSERT","lineNumber":187,"content":"        if (isTracking) {"},{"type":"INSERT","lineNumber":188,"content":"            stableTrackingState = true"},{"type":"INSERT","lineNumber":189,"content":"            lastTrackingTime = System.currentTimeMillis()"},{"type":"INSERT","lineNumber":190,"content":"        } else {"},{"type":"INSERT","lineNumber":191,"content":"            // Warte 5 Sekunden ohne Tracking bevor \"Tracking verloren\" angezeigt wird"},{"type":"INSERT","lineNumber":192,"content":"            delay(5000)"},{"type":"INSERT","lineNumber":193,"content":"            if (System.currentTimeMillis() - lastTrackingTime >= 5000) {"},{"type":"INSERT","lineNumber":194,"content":"                stableTrackingState = false"},{"type":"INSERT","lineNumber":195,"content":"            }"},{"type":"INSERT","lineNumber":196,"content":"        }"},{"type":"INSERT","lineNumber":197,"content":"    }"},{"type":"INSERT","lineNumber":198,"content":"    "},{"type":"INSERT","lineNumber":199,"content":"    LaunchedEffect(isInitialized, landmarkCount, bestConfidence, stableTrackingState) {"},{"type":"INSERT","lineNumber":202,"content":"            !stableTrackingState -> ARScanStatus.LOST"},{"type":"INSERT","lineNumber":204,"content":"            bestConfidence >= 0.7f && isTracking -> ARScanStatus.NAVIGATING"},{"type":"INSERT","lineNumber":205,"content":"            bestConfidence >= 0.5f && isTracking -> ARScanStatus.TRACKING"},{"type":"INSERT","lineNumber":206,"content":"            else -> ARScanStatus.SCANNING"}]},{"timestamp":1754326761386,"changes":[{"type":"DELETE","lineNumber":6,"oldContent":"import androidx.compose.material.icons.Icons"},{"type":"DELETE","lineNumber":7,"oldContent":"import androidx.compose.material.icons.filled.CameraAlt"},{"type":"DELETE","lineNumber":8,"oldContent":"import androidx.compose.material.icons.filled.Search"},{"type":"DELETE","lineNumber":9,"oldContent":"import androidx.compose.material.icons.filled.CheckCircle"},{"type":"DELETE","lineNumber":10,"oldContent":"import androidx.compose.material.icons.filled.Warning"},{"type":"INSERT","lineNumber":6,"content":"import androidx.compose.ui.res.painterResource"},{"type":"INSERT","lineNumber":7,"content":"import com.example.arwalking.R"},{"type":"DELETE","lineNumber":44,"oldContent":"private fun ARScanStatus.getIcon(): ImageVector = when (this) {"},{"type":"DELETE","lineNumber":45,"oldContent":"    ARScanStatus.INITIALIZING -> Icons.Default.CameraAlt"},{"type":"DELETE","lineNumber":46,"oldContent":"    ARScanStatus.SCANNING -> Icons.Default.Search"},{"type":"DELETE","lineNumber":47,"oldContent":"    ARScanStatus.TRACKING -> Icons.Default.CheckCircle"},{"type":"DELETE","lineNumber":48,"oldContent":"    ARScanStatus.LOST -> Icons.Default.Warning"},{"type":"DELETE","lineNumber":49,"oldContent":"    ARScanStatus.NAVIGATING -> Icons.Default.CheckCircle"},{"type":"DELETE","lineNumber":50,"oldContent":" * AR Info Island - Semitransparente UI-Komponente im Dynamic Island Style"},{"type":"INSERT","lineNumber":41,"content":"private fun ARScanStatus.getIconResource(): Int = when (this) {"},{"type":"INSERT","lineNumber":42,"content":"    ARScanStatus.INITIALIZING -> R.drawable.location_searching"},{"type":"INSERT","lineNumber":43,"content":"    ARScanStatus.SCANNING -> R.drawable.location_searching"},{"type":"INSERT","lineNumber":44,"content":"    ARScanStatus.TRACKING -> R.drawable.navigation21"},{"type":"INSERT","lineNumber":45,"content":"    ARScanStatus.LOST -> R.drawable.alert_circle"},{"type":"INSERT","lineNumber":46,"content":"    ARScanStatus.NAVIGATING -> R.drawable.navigation21"},{"type":"INSERT","lineNumber":48,"content":""},{"type":"INSERT","lineNumber":49,"content":"private fun ARScanStatus.getColor(): Color = when (this) {"},{"type":"INSERT","lineNumber":50,"content":"    ARScanStatus.INITIALIZING -> Color.Blue"},{"type":"INSERT","lineNumber":51,"content":"    ARScanStatus.SCANNING -> Color.Yellow"},{"type":"INSERT","lineNumber":52,"content":"    ARScanStatus.TRACKING -> Color.Green"},{"type":"INSERT","lineNumber":53,"content":"    ARScanStatus.LOST -> Color.Red"},{"type":"INSERT","lineNumber":54,"content":"    ARScanStatus.NAVIGATING -> Color.Green"},{"type":"INSERT","lineNumber":55,"content":"}"},{"type":"INSERT","lineNumber":56,"content":""},{"type":"INSERT","lineNumber":57,"content":"private fun ARScanStatus.getMessage(): String = when (this) {"},{"type":"INSERT","lineNumber":58,"content":"    ARScanStatus.INITIALIZING -> \"AR wird initialisiert...\""},{"type":"INSERT","lineNumber":59,"content":"    ARScanStatus.SCANNING -> \"Suche nach Landmarks...\""},{"type":"INSERT","lineNumber":60,"content":"    ARScanStatus.TRACKING -> \"Landmark erkannt\""},{"type":"INSERT","lineNumber":61,"content":"    ARScanStatus.LOST -> \"Landmark verloren\""},{"type":"INSERT","lineNumber":62,"content":"    ARScanStatus.NAVIGATING -> \"Navigation aktiv\""},{"type":"INSERT","lineNumber":63,"content":"}"},{"type":"INSERT","lineNumber":64,"content":""},{"type":"INSERT","lineNumber":65,"content":"private fun ARScanStatus.showProgress(): Boolean = when (this) {"},{"type":"INSERT","lineNumber":66,"content":"    ARScanStatus.INITIALIZING -> true"},{"type":"INSERT","lineNumber":67,"content":"    else -> false"},{"type":"INSERT","lineNumber":68,"content":"}"},{"type":"INSERT","lineNumber":69,"content":""},{"type":"INSERT","lineNumber":70,"content":"/**"},{"type":"INSERT","lineNumber":71,"content":" * AR Info Island - Semitransparente UI-Komponente im Dynamic Island Style"},{"type":"DELETE","lineNumber":54,"oldContent":""},{"type":"DELETE","lineNumber":57,"oldContent":"private fun ARScanStatus.getColor(): Color = when (this) {"},{"type":"DELETE","lineNumber":60,"oldContent":"    ARScanStatus.INITIALIZING -> Color.Blue"},{"type":"DELETE","lineNumber":63,"oldContent":"    ARScanStatus.SCANNING -> Color.Yellow"},{"type":"DELETE","lineNumber":66,"oldContent":"    ARScanStatus.TRACKING -> Color.Green"},{"type":"DELETE","lineNumber":69,"oldContent":"    ARScanStatus.LOST -> Color.Red"},{"type":"DELETE","lineNumber":72,"oldContent":"    ARScanStatus.NAVIGATING -> Color.Green"},{"type":"DELETE","lineNumber":75,"oldContent":"}"},{"type":"DELETE","lineNumber":78,"oldContent":""},{"type":"DELETE","lineNumber":81,"oldContent":"private fun ARScanStatus.getMessage(): String = when (this) {"},{"type":"DELETE","lineNumber":84,"oldContent":"    ARScanStatus.INITIALIZING -> \"AR wird initialisiert...\""},{"type":"DELETE","lineNumber":87,"oldContent":"    ARScanStatus.SCANNING -> \"Suche nach Landmarks...\""},{"type":"DELETE","lineNumber":90,"oldContent":"    ARScanStatus.TRACKING -> \"Landmark erkannt\""},{"type":"DELETE","lineNumber":93,"oldContent":"    ARScanStatus.LOST -> \"Landmark verloren\""},{"type":"DELETE","lineNumber":96,"oldContent":"    ARScanStatus.NAVIGATING -> \"Navigation aktiv\""},{"type":"DELETE","lineNumber":99,"oldContent":"}"},{"type":"DELETE","lineNumber":102,"oldContent":""},{"type":"DELETE","lineNumber":105,"oldContent":"private fun ARScanStatus.showProgress(): Boolean = when (this) {"},{"type":"DELETE","lineNumber":108,"oldContent":"    ARScanStatus.INITIALIZING -> true"},{"type":"DELETE","lineNumber":111,"oldContent":"    else -> false"},{"type":"DELETE","lineNumber":114,"oldContent":"}"},{"type":"DELETE","lineNumber":117,"oldContent":""},{"type":"DELETE","lineNumber":120,"oldContent":"/**"},{"type":"DELETE","lineNumber":128,"oldContent":"                    contentDescription = null,"},{"type":"INSERT","lineNumber":126,"content":"                    contentDescription = null,"},{"type":"INSERT","lineNumber":127,"content":"                    tint = scanStatus.getColor().copy(alpha = iconAlpha),"},{"type":"MODIFY","lineNumber":133,"content":"                    text = scanStatus.getMessage(),","oldContent":"                    tint = scanStatus.getColor().copy(alpha = iconAlpha),"},{"type":"DELETE","lineNumber":139,"oldContent":"                    text = scanStatus.getMessage(),"},{"type":"INSERT","lineNumber":142,"content":"                if (scanStatus.showProgress()) {"},{"type":"INSERT","lineNumber":145,"content":"                        color = scanStatus.getColor(),"},{"type":"DELETE","lineNumber":149,"oldContent":"                if (scanStatus.showProgress()) {"},{"type":"DELETE","lineNumber":153,"oldContent":"                        color = scanStatus.getColor(),"},{"type":"DELETE","lineNumber":161,"oldContent":"    var stableTrackingState by remember { mutableStateOf(true) }"},{"type":"DELETE","lineNumber":163,"oldContent":"    var lastTrackingTime by remember { mutableStateOf(System.currentTimeMillis()) }"},{"type":"DELETE","lineNumber":166,"oldContent":"    // Stabilisiere den Tracking-Status um falsches \"Tracking verloren\" zu vermeiden"},{"type":"DELETE","lineNumber":168,"oldContent":"    LaunchedEffect(isTracking) {"},{"type":"DELETE","lineNumber":170,"oldContent":"        if (isTracking) {"},{"type":"DELETE","lineNumber":172,"oldContent":"            stableTrackingState = true"},{"type":"DELETE","lineNumber":174,"oldContent":"            lastTrackingTime = System.currentTimeMillis()"},{"type":"DELETE","lineNumber":176,"oldContent":"        } else {"},{"type":"DELETE","lineNumber":178,"oldContent":"            // Warte 5 Sekunden ohne Tracking bevor \"Tracking verloren\" angezeigt wird"},{"type":"DELETE","lineNumber":180,"oldContent":"            delay(5000)"},{"type":"DELETE","lineNumber":182,"oldContent":"            if (System.currentTimeMillis() - lastTrackingTime >= 5000) {"},{"type":"DELETE","lineNumber":184,"oldContent":"                stableTrackingState = false"},{"type":"DELETE","lineNumber":186,"oldContent":"            }"},{"type":"DELETE","lineNumber":188,"oldContent":"        }"},{"type":"DELETE","lineNumber":190,"oldContent":"    }"},{"type":"DELETE","lineNumber":192,"oldContent":"    "},{"type":"DELETE","lineNumber":194,"oldContent":"    LaunchedEffect(isInitialized, landmarkCount, bestConfidence, stableTrackingState) {"},{"type":"DELETE","lineNumber":198,"oldContent":"            !stableTrackingState -> ARScanStatus.LOST"},{"type":"INSERT","lineNumber":179,"content":"    var stableTrackingState by remember { mutableStateOf(true) }"},{"type":"INSERT","lineNumber":180,"content":"    var lastTrackingTime by remember { mutableStateOf(System.currentTimeMillis()) }"},{"type":"DELETE","lineNumber":201,"oldContent":"            bestConfidence >= 0.7f && isTracking -> ARScanStatus.NAVIGATING"},{"type":"INSERT","lineNumber":182,"content":"    // Stabilisiere den Tracking-Status um falsches \"Tracking verloren\" zu vermeiden"},{"type":"INSERT","lineNumber":183,"content":"    LaunchedEffect(isTracking) {"},{"type":"INSERT","lineNumber":184,"content":"        if (isTracking) {"},{"type":"INSERT","lineNumber":185,"content":"            stableTrackingState = true"},{"type":"INSERT","lineNumber":186,"content":"            lastTrackingTime = System.currentTimeMillis()"},{"type":"INSERT","lineNumber":187,"content":"        } else {"},{"type":"INSERT","lineNumber":188,"content":"            // Warte 5 Sekunden ohne Tracking bevor \"Tracking verloren\" angezeigt wird"},{"type":"INSERT","lineNumber":189,"content":"            delay(5000)"},{"type":"INSERT","lineNumber":190,"content":"            if (System.currentTimeMillis() - lastTrackingTime >= 5000) {"},{"type":"INSERT","lineNumber":191,"content":"                stableTrackingState = false"},{"type":"INSERT","lineNumber":192,"content":"            }"},{"type":"INSERT","lineNumber":193,"content":"        }"},{"type":"INSERT","lineNumber":194,"content":"    }"},{"type":"INSERT","lineNumber":195,"content":"    "},{"type":"INSERT","lineNumber":196,"content":"    LaunchedEffect(isInitialized, landmarkCount, bestConfidence, stableTrackingState) {"},{"type":"DELETE","lineNumber":203,"oldContent":"            bestConfidence >= 0.5f && isTracking -> ARScanStatus.TRACKING"},{"type":"DELETE","lineNumber":205,"oldContent":"            else -> ARScanStatus.SCANNING"},{"type":"INSERT","lineNumber":199,"content":"            !stableTrackingState -> ARScanStatus.LOST"},{"type":"INSERT","lineNumber":201,"content":"            bestConfidence >= 0.7f && isTracking -> ARScanStatus.NAVIGATING"},{"type":"INSERT","lineNumber":202,"content":"            bestConfidence >= 0.5f && isTracking -> ARScanStatus.TRACKING"},{"type":"INSERT","lineNumber":203,"content":"            else -> ARScanStatus.SCANNING"}]},{"timestamp":1754329203308,"changes":[{"type":"DELETE","lineNumber":38,"oldContent":"private fun ARScanStatus.getIconResource(): Int = when (this) {"},{"type":"DELETE","lineNumber":40,"oldContent":"    ARScanStatus.INITIALIZING -> R.drawable.location_searching"},{"type":"DELETE","lineNumber":42,"oldContent":"    ARScanStatus.SCANNING -> R.drawable.location_searching"},{"type":"INSERT","lineNumber":41,"content":"private fun ARScanStatus.getIconResource(): Int = when (this) {"},{"type":"INSERT","lineNumber":42,"content":"    ARScanStatus.INITIALIZING -> R.drawable.location_searching"},{"type":"INSERT","lineNumber":43,"content":"    ARScanStatus.SCANNING -> R.drawable.location_searching"},{"type":"INSERT","lineNumber":47,"content":"}"},{"type":"DELETE","lineNumber":51,"oldContent":"}"},{"type":"DELETE","lineNumber":53,"oldContent":" * Zeigt Scan-Status und subtile Benutzerführung während der AR-Navigation"},{"type":"DELETE","lineNumber":55,"oldContent":" */"},{"type":"DELETE","lineNumber":58,"oldContent":"@Composable"},{"type":"DELETE","lineNumber":60,"oldContent":"fun ARInfoIsland("},{"type":"DELETE","lineNumber":63,"oldContent":"    scanStatus: ARScanStatus,"},{"type":"DELETE","lineNumber":65,"oldContent":"    modifier: Modifier = Modifier,"},{"type":"DELETE","lineNumber":68,"oldContent":"    isVisible: Boolean = true"},{"type":"DELETE","lineNumber":70,"oldContent":") {"},{"type":"DELETE","lineNumber":73,"oldContent":"    if (!isVisible) return"},{"type":"DELETE","lineNumber":75,"oldContent":"    "},{"type":"DELETE","lineNumber":78,"oldContent":"    // Animation für das Ein-/Ausblenden"},{"type":"DELETE","lineNumber":80,"oldContent":"    val alpha by animateFloatAsState("},{"type":"DELETE","lineNumber":83,"oldContent":"        targetValue = if (isVisible) 0.85f else 0f,"},{"type":"INSERT","lineNumber":72,"content":" * Zeigt Scan-Status und subtile Benutzerführung während der AR-Navigation"},{"type":"INSERT","lineNumber":73,"content":" */"},{"type":"INSERT","lineNumber":74,"content":"@Composable"},{"type":"INSERT","lineNumber":75,"content":"fun ARInfoIsland("},{"type":"INSERT","lineNumber":76,"content":"    scanStatus: ARScanStatus,"},{"type":"INSERT","lineNumber":77,"content":"    modifier: Modifier = Modifier,"},{"type":"INSERT","lineNumber":78,"content":"    isVisible: Boolean = true"},{"type":"INSERT","lineNumber":79,"content":") {"},{"type":"INSERT","lineNumber":80,"content":"    if (!isVisible) return"},{"type":"INSERT","lineNumber":81,"content":"    "},{"type":"INSERT","lineNumber":82,"content":"    // Animation für das Ein-/Ausblenden"},{"type":"INSERT","lineNumber":83,"content":"    val alpha by animateFloatAsState("},{"type":"INSERT","lineNumber":84,"content":"        targetValue = if (isVisible) 0.85f else 0f,"},{"type":"DELETE","lineNumber":123,"oldContent":"                    contentDescription = null,"},{"type":"DELETE","lineNumber":125,"oldContent":"                    tint = scanStatus.getColor().copy(alpha = iconAlpha),"},{"type":"DELETE","lineNumber":127,"oldContent":"                    imageVector = scanStatus.getIcon(),"},{"type":"INSERT","lineNumber":125,"content":"                    painter = painterResource(id = scanStatus.getIconResource()),"},{"type":"INSERT","lineNumber":126,"content":"                    contentDescription = null,"},{"type":"INSERT","lineNumber":127,"content":"                    tint = scanStatus.getColor().copy(alpha = iconAlpha),"},{"type":"DELETE","lineNumber":130,"oldContent":"                    tint = scanStatus.getColor().copy(alpha = iconAlpha),"},{"type":"DELETE","lineNumber":131,"oldContent":"                    text = scanStatus.getMessage(),"},{"type":"INSERT","lineNumber":130,"content":"                "},{"type":"INSERT","lineNumber":133,"content":"                    text = scanStatus.getMessage(),"},{"type":"DELETE","lineNumber":139,"oldContent":"                if (scanStatus.showProgress()) {"},{"type":"MODIFY","lineNumber":142,"content":"                if (scanStatus.showProgress()) {","oldContent":"                        color = scanStatus.getColor(),"},{"type":"INSERT","lineNumber":145,"content":"                        color = scanStatus.getColor(),"},{"type":"DELETE","lineNumber":167,"oldContent":"    var stableTrackingState by remember { mutableStateOf(true) }"},{"type":"MODIFY","lineNumber":169,"content":" * Hook für automatische Status-Updates basierend auf AR-Zustand","oldContent":"    var lastTrackingTime by remember { mutableStateOf(System.currentTimeMillis()) }"},{"type":"INSERT","lineNumber":170,"content":" */"},{"type":"INSERT","lineNumber":171,"content":"@Composable"},{"type":"INSERT","lineNumber":172,"content":"fun rememberARScanStatus("},{"type":"INSERT","lineNumber":173,"content":"    isInitialized: Boolean,"},{"type":"INSERT","lineNumber":174,"content":"    landmarkCount: Int,"},{"type":"INSERT","lineNumber":175,"content":"    bestConfidence: Float,"},{"type":"INSERT","lineNumber":176,"content":"    isTracking: Boolean"},{"type":"INSERT","lineNumber":177,"content":"): ARScanStatus {"},{"type":"INSERT","lineNumber":178,"content":"    var currentStatus by remember { mutableStateOf(ARScanStatus.INITIALIZING) }"},{"type":"INSERT","lineNumber":179,"content":"    var stableTrackingState by remember { mutableStateOf(true) }"},{"type":"INSERT","lineNumber":180,"content":"    var lastTrackingTime by remember { mutableStateOf(System.currentTimeMillis()) }"},{"type":"INSERT","lineNumber":181,"content":"    "},{"type":"DELETE","lineNumber":173,"oldContent":" * Hook für automatische Status-Updates basierend auf AR-Zustand"},{"type":"DELETE","lineNumber":176,"oldContent":" */"},{"type":"DELETE","lineNumber":179,"oldContent":"@Composable"},{"type":"DELETE","lineNumber":182,"oldContent":"fun rememberARScanStatus("},{"type":"DELETE","lineNumber":185,"oldContent":"    isInitialized: Boolean,"},{"type":"DELETE","lineNumber":188,"oldContent":"    landmarkCount: Int,"},{"type":"DELETE","lineNumber":191,"oldContent":"    bestConfidence: Float,"},{"type":"DELETE","lineNumber":193,"oldContent":"    isTracking: Boolean"},{"type":"DELETE","lineNumber":194,"oldContent":"): ARScanStatus {"},{"type":"INSERT","lineNumber":197,"content":"        currentStatus = when {"},{"type":"INSERT","lineNumber":198,"content":"            !isInitialized -> ARScanStatus.INITIALIZING"},{"type":"DELETE","lineNumber":196,"oldContent":"    var currentStatus by remember { mutableStateOf(ARScanStatus.INITIALIZING) }"},{"type":"DELETE","lineNumber":197,"oldContent":"    "},{"type":"INSERT","lineNumber":200,"content":"            landmarkCount == 0 -> ARScanStatus.SCANNING"},{"type":"DELETE","lineNumber":200,"oldContent":"        currentStatus = when {"},{"type":"DELETE","lineNumber":202,"oldContent":"            !isInitialized -> ARScanStatus.INITIALIZING"},{"type":"DELETE","lineNumber":203,"oldContent":"            landmarkCount == 0 -> ARScanStatus.SCANNING"}]},{"timestamp":1754330139631,"changes":[{"type":"INSERT","lineNumber":34,"content":" * Enum für verschiedene Navigationsaktionen"},{"type":"INSERT","lineNumber":35,"content":" */"},{"type":"INSERT","lineNumber":36,"content":"enum class NavigationAction {"},{"type":"INSERT","lineNumber":37,"content":"    STRAIGHT,       // Geradeaus gehen"},{"type":"INSERT","lineNumber":38,"content":"    TURN_LEFT,      // Links abbiegen"},{"type":"INSERT","lineNumber":39,"content":"    TURN_RIGHT,     // Rechts abbiegen"},{"type":"INSERT","lineNumber":40,"content":"    THROUGH_DOOR,   // Durch Tür gehen"},{"type":"INSERT","lineNumber":41,"content":"    UNKNOWN         // Unbekannte Aktion"},{"type":"INSERT","lineNumber":42,"content":"}"},{"type":"INSERT","lineNumber":43,"content":""},{"type":"INSERT","lineNumber":44,"content":"/**"},{"type":"DELETE","lineNumber":39,"oldContent":"private fun ARScanStatus.getIconResource(): Int = when (this) {"},{"type":"INSERT","lineNumber":51,"content":""},{"type":"INSERT","lineNumber":52,"content":"private fun ARScanStatus.getIconResource(): Int = when (this) {"},{"type":"DELETE","lineNumber":43,"oldContent":""},{"type":"DELETE","lineNumber":64,"oldContent":" * Zeigt Scan-Status und subtile Benutzerführung während der AR-Navigation"},{"type":"INSERT","lineNumber":76,"content":"private fun ARScanStatus.showProgress(): Boolean = when (this) {"},{"type":"INSERT","lineNumber":77,"content":"    ARScanStatus.INITIALIZING -> true"},{"type":"INSERT","lineNumber":78,"content":"    else -> false"},{"type":"INSERT","lineNumber":79,"content":"}"},{"type":"INSERT","lineNumber":80,"content":""},{"type":"INSERT","lineNumber":81,"content":"/**"},{"type":"INSERT","lineNumber":82,"content":" * AR Info Island - Semitransparente UI-Komponente im Dynamic Island Style"},{"type":"INSERT","lineNumber":83,"content":" * Zeigt Scan-Status und subtile Benutzerführung während der AR-Navigation"},{"type":"DELETE","lineNumber":68,"oldContent":"private fun ARScanStatus.showProgress(): Boolean = when (this) {"},{"type":"DELETE","lineNumber":71,"oldContent":"    ARScanStatus.INITIALIZING -> true"},{"type":"DELETE","lineNumber":73,"oldContent":"    else -> false"},{"type":"DELETE","lineNumber":76,"oldContent":"}"},{"type":"DELETE","lineNumber":79,"oldContent":""},{"type":"DELETE","lineNumber":81,"oldContent":"/**"},{"type":"DELETE","lineNumber":84,"oldContent":" * AR Info Island - Semitransparente UI-Komponente im Dynamic Island Style"},{"type":"INSERT","lineNumber":135,"content":"                Icon("},{"type":"DELETE","lineNumber":126,"oldContent":"                Icon("},{"type":"DELETE","lineNumber":132,"oldContent":"                    text = scanStatus.getMessage(),"},{"type":"INSERT","lineNumber":144,"content":"                    text = scanStatus.getMessage(),"},{"type":"INSERT","lineNumber":152,"content":"                // Optionaler Fortschrittsindikator"},{"type":"DELETE","lineNumber":142,"oldContent":"                        color = scanStatus.getColor(),"},{"type":"DELETE","lineNumber":144,"oldContent":"                        color = scanStatus.getColor(),"},{"type":"INSERT","lineNumber":156,"content":"                        color = scanStatus.getColor(),"},{"type":"INSERT","lineNumber":179,"content":"/**"},{"type":"DELETE","lineNumber":170,"oldContent":"/**"},{"type":"DELETE","lineNumber":172,"oldContent":"    // Stabilisiere den Tracking-Status um falsches \"Tracking verloren\" zu vermeiden"},{"type":"DELETE","lineNumber":174,"oldContent":"    LaunchedEffect(isTracking) {"},{"type":"DELETE","lineNumber":177,"oldContent":"        if (isTracking) {"},{"type":"DELETE","lineNumber":179,"oldContent":"            stableTrackingState = true"},{"type":"DELETE","lineNumber":182,"oldContent":"            lastTrackingTime = System.currentTimeMillis()"},{"type":"DELETE","lineNumber":184,"oldContent":"        } else {"},{"type":"DELETE","lineNumber":187,"oldContent":"            // Warte 5 Sekunden ohne Tracking bevor \"Tracking verloren\" angezeigt wird"},{"type":"INSERT","lineNumber":193,"content":"    // Stabilisiere den Tracking-Status um falsches \"Tracking verloren\" zu vermeiden"},{"type":"INSERT","lineNumber":194,"content":"    LaunchedEffect(isTracking) {"},{"type":"INSERT","lineNumber":195,"content":"        if (isTracking) {"},{"type":"INSERT","lineNumber":196,"content":"            stableTrackingState = true"},{"type":"INSERT","lineNumber":197,"content":"            lastTrackingTime = System.currentTimeMillis()"},{"type":"INSERT","lineNumber":198,"content":"        } else {"},{"type":"INSERT","lineNumber":199,"content":"            // Warte 5 Sekunden ohne Tracking bevor \"Tracking verloren\" angezeigt wird"},{"type":"DELETE","lineNumber":197,"oldContent":"            !stableTrackingState -> ARScanStatus.LOST"},{"type":"INSERT","lineNumber":210,"content":"            !stableTrackingState -> ARScanStatus.LOST"},{"type":"INSERT","lineNumber":211,"content":"            landmarkCount == 0 -> ARScanStatus.SCANNING"},{"type":"DELETE","lineNumber":202,"oldContent":"            landmarkCount == 0 -> ARScanStatus.SCANNING"}]},{"timestamp":1754330148124,"changes":[{"type":"DELETE","lineNumber":35,"oldContent":" * Helper functions für ARScanStatus enum"},{"type":"DELETE","lineNumber":37,"oldContent":" */"},{"type":"DELETE","lineNumber":39,"oldContent":"private fun ARScanStatus.shouldPulse(): Boolean = when (this) {"},{"type":"DELETE","lineNumber":41,"oldContent":"    ARScanStatus.SCANNING, ARScanStatus.INITIALIZING -> true"},{"type":"DELETE","lineNumber":43,"oldContent":"    else -> false"},{"type":"DELETE","lineNumber":46,"oldContent":"}"},{"type":"DELETE","lineNumber":48,"oldContent":"    ARScanStatus.INITIALIZING -> R.drawable.location_searching"},{"type":"DELETE","lineNumber":50,"oldContent":"    ARScanStatus.SCANNING -> R.drawable.location_searching"},{"type":"INSERT","lineNumber":45,"content":" * Helper functions für ARScanStatus enum"},{"type":"INSERT","lineNumber":46,"content":" */"},{"type":"INSERT","lineNumber":47,"content":"private fun ARScanStatus.shouldPulse(): Boolean = when (this) {"},{"type":"INSERT","lineNumber":48,"content":"    ARScanStatus.SCANNING, ARScanStatus.INITIALIZING -> true"},{"type":"INSERT","lineNumber":49,"content":"    else -> false"},{"type":"INSERT","lineNumber":50,"content":"}"},{"type":"INSERT","lineNumber":51,"content":""},{"type":"INSERT","lineNumber":52,"content":"private fun ARScanStatus.getIconResource(): Int = when (this) {"},{"type":"INSERT","lineNumber":53,"content":"    ARScanStatus.INITIALIZING -> R.drawable.location_searching"},{"type":"INSERT","lineNumber":54,"content":"    ARScanStatus.SCANNING -> R.drawable.location_searching"},{"type":"DELETE","lineNumber":60,"oldContent":""},{"type":"DELETE","lineNumber":62,"oldContent":"private fun ARScanStatus.getIconResource(): Int = when (this) {"},{"type":"INSERT","lineNumber":76,"content":"private fun ARScanStatus.showProgress(): Boolean = when (this) {"},{"type":"INSERT","lineNumber":77,"content":"    ARScanStatus.INITIALIZING -> true"},{"type":"INSERT","lineNumber":78,"content":"    else -> false"},{"type":"INSERT","lineNumber":79,"content":"}"},{"type":"INSERT","lineNumber":80,"content":""},{"type":"INSERT","lineNumber":81,"content":"/**"},{"type":"INSERT","lineNumber":82,"content":" * Bestimmt die Navigationsaktion basierend auf der Anweisung"},{"type":"INSERT","lineNumber":84,"content":"private fun getNavigationAction(instruction: String): NavigationAction {"},{"type":"INSERT","lineNumber":85,"content":"    val lowerInstruction = instruction.lowercase()"},{"type":"INSERT","lineNumber":86,"content":"    return when {"},{"type":"INSERT","lineNumber":87,"content":"        lowerInstruction.contains(\"rechts\") || lowerInstruction.contains(\"right\") -> NavigationAction.TURN_RIGHT"},{"type":"INSERT","lineNumber":88,"content":"        lowerInstruction.contains(\"links\") || lowerInstruction.contains(\"left\") -> NavigationAction.TURN_LEFT"},{"type":"INSERT","lineNumber":89,"content":"        lowerInstruction.contains(\"tür\") || lowerInstruction.contains(\"door\") || "},{"type":"INSERT","lineNumber":90,"content":"        lowerInstruction.contains(\"eingang\") || lowerInstruction.contains(\"entrance\") ||"},{"type":"INSERT","lineNumber":91,"content":"        lowerInstruction.contains(\"durch\") || lowerInstruction.contains(\"through\") -> NavigationAction.THROUGH_DOOR"},{"type":"INSERT","lineNumber":92,"content":"        else -> NavigationAction.STRAIGHT"},{"type":"INSERT","lineNumber":93,"content":"    }"},{"type":"INSERT","lineNumber":94,"content":"}"},{"type":"INSERT","lineNumber":95,"content":""},{"type":"INSERT","lineNumber":96,"content":"/**"},{"type":"INSERT","lineNumber":97,"content":" * Gibt das passende Icon für die Navigationsaktion zurück"},{"type":"INSERT","lineNumber":98,"content":" */"},{"type":"INSERT","lineNumber":99,"content":"private fun NavigationAction.getIconResource(): Int = when (this) {"},{"type":"INSERT","lineNumber":100,"content":"    NavigationAction.TURN_RIGHT -> R.drawable.corner_up_right_1"},{"type":"INSERT","lineNumber":101,"content":"    NavigationAction.TURN_LEFT -> R.drawable.left"},{"type":"INSERT","lineNumber":102,"content":"    NavigationAction.THROUGH_DOOR -> R.drawable.door"},{"type":"INSERT","lineNumber":103,"content":"    NavigationAction.STRAIGHT -> R.drawable.arrow_up_1"},{"type":"INSERT","lineNumber":104,"content":"    NavigationAction.UNKNOWN -> R.drawable.navigation21"},{"type":"INSERT","lineNumber":105,"content":"}"},{"type":"INSERT","lineNumber":106,"content":""},{"type":"INSERT","lineNumber":107,"content":"/**"},{"type":"INSERT","lineNumber":108,"content":" * AR Info Island - Semitransparente UI-Komponente im Dynamic Island Style"},{"type":"INSERT","lineNumber":109,"content":" * Zeigt Scan-Status und subtile Benutzerführung während der AR-Navigation"},{"type":"INSERT","lineNumber":110,"content":" */"},{"type":"DELETE","lineNumber":83,"oldContent":"private fun ARScanStatus.showProgress(): Boolean = when (this) {"},{"type":"DELETE","lineNumber":84,"oldContent":"    ARScanStatus.INITIALIZING -> true"},{"type":"DELETE","lineNumber":86,"oldContent":"    else -> false"},{"type":"DELETE","lineNumber":88,"oldContent":"}"},{"type":"DELETE","lineNumber":89,"oldContent":""},{"type":"DELETE","lineNumber":91,"oldContent":"/**"},{"type":"DELETE","lineNumber":92,"oldContent":" * AR Info Island - Semitransparente UI-Komponente im Dynamic Island Style"},{"type":"DELETE","lineNumber":94,"oldContent":" * Zeigt Scan-Status und subtile Benutzerführung während der AR-Navigation"},{"type":"INSERT","lineNumber":161,"content":"                Icon("},{"type":"INSERT","lineNumber":170,"content":"                    text = scanStatus.getMessage(),"},{"type":"DELETE","lineNumber":144,"oldContent":"                Icon("},{"type":"INSERT","lineNumber":178,"content":"                // Optionaler Fortschrittsindikator"},{"type":"DELETE","lineNumber":153,"oldContent":"                    text = scanStatus.getMessage(),"},{"type":"INSERT","lineNumber":182,"content":"                        color = scanStatus.getColor(),"},{"type":"DELETE","lineNumber":161,"oldContent":"                // Optionaler Fortschrittsindikator"},{"type":"DELETE","lineNumber":166,"oldContent":"                        color = scanStatus.getColor(),"},{"type":"INSERT","lineNumber":205,"content":"/**"},{"type":"DELETE","lineNumber":186,"oldContent":"/**"},{"type":"INSERT","lineNumber":219,"content":"    // Stabilisiere den Tracking-Status um falsches \"Tracking verloren\" zu vermeiden"},{"type":"INSERT","lineNumber":220,"content":"    LaunchedEffect(isTracking) {"},{"type":"INSERT","lineNumber":221,"content":"        if (isTracking) {"},{"type":"INSERT","lineNumber":222,"content":"            stableTrackingState = true"},{"type":"INSERT","lineNumber":223,"content":"            lastTrackingTime = System.currentTimeMillis()"},{"type":"INSERT","lineNumber":224,"content":"        } else {"},{"type":"INSERT","lineNumber":225,"content":"            // Warte 5 Sekunden ohne Tracking bevor \"Tracking verloren\" angezeigt wird"},{"type":"DELETE","lineNumber":197,"oldContent":"    // Stabilisiere den Tracking-Status um falsches \"Tracking verloren\" zu vermeiden"},{"type":"DELETE","lineNumber":199,"oldContent":"    LaunchedEffect(isTracking) {"},{"type":"DELETE","lineNumber":201,"oldContent":"        if (isTracking) {"},{"type":"DELETE","lineNumber":203,"oldContent":"            stableTrackingState = true"},{"type":"DELETE","lineNumber":205,"oldContent":"            lastTrackingTime = System.currentTimeMillis()"},{"type":"DELETE","lineNumber":206,"oldContent":"        } else {"},{"type":"DELETE","lineNumber":208,"oldContent":"            // Warte 5 Sekunden ohne Tracking bevor \"Tracking verloren\" angezeigt wird"},{"type":"INSERT","lineNumber":236,"content":"            !stableTrackingState -> ARScanStatus.LOST"},{"type":"INSERT","lineNumber":237,"content":"            landmarkCount == 0 -> ARScanStatus.SCANNING"},{"type":"DELETE","lineNumber":218,"oldContent":"            landmarkCount == 0 -> ARScanStatus.SCANNING"},{"type":"DELETE","lineNumber":219,"oldContent":"            !stableTrackingState -> ARScanStatus.LOST"}]},{"timestamp":1754330153813,"changes":[{"type":"DELETE","lineNumber":40,"oldContent":" * Helper functions für ARScanStatus enum"},{"type":"INSERT","lineNumber":41,"content":"    UNKNOWN         // Unbekannte Aktion"},{"type":"INSERT","lineNumber":42,"content":"}"},{"type":"INSERT","lineNumber":43,"content":""},{"type":"INSERT","lineNumber":44,"content":"/**"},{"type":"INSERT","lineNumber":45,"content":" * Helper functions für ARScanStatus enum"},{"type":"DELETE","lineNumber":44,"oldContent":"    UNKNOWN         // Unbekannte Aktion"},{"type":"DELETE","lineNumber":48,"oldContent":"}"},{"type":"DELETE","lineNumber":50,"oldContent":""},{"type":"DELETE","lineNumber":52,"oldContent":"/**"},{"type":"MODIFY","lineNumber":55,"content":"    ARScanStatus.TRACKING -> R.drawable.navigation21","oldContent":"    ARScanStatus.TRACKING -> R.drawable.navigation21"},{"type":"DELETE","lineNumber":77,"oldContent":" */"},{"type":"DELETE","lineNumber":79,"oldContent":"@Composable"},{"type":"DELETE","lineNumber":81,"oldContent":"fun ARInfoIsland("},{"type":"DELETE","lineNumber":83,"oldContent":"    scanStatus: ARScanStatus,"},{"type":"DELETE","lineNumber":85,"oldContent":"    modifier: Modifier = Modifier,"},{"type":"DELETE","lineNumber":87,"oldContent":"    isVisible: Boolean = true"},{"type":"DELETE","lineNumber":89,"oldContent":") {"},{"type":"INSERT","lineNumber":83,"content":" */"},{"type":"DELETE","lineNumber":92,"oldContent":"    if (!isVisible) return"},{"type":"DELETE","lineNumber":95,"oldContent":"    "},{"type":"DELETE","lineNumber":99,"oldContent":"    // Animation für das Ein-/Ausblenden"},{"type":"DELETE","lineNumber":103,"oldContent":"    val alpha by animateFloatAsState("},{"type":"DELETE","lineNumber":106,"oldContent":"        targetValue = if (isVisible) 0.85f else 0f,"},{"type":"DELETE","lineNumber":108,"oldContent":"        animationSpec = tween(durationMillis = 300),"},{"type":"DELETE","lineNumber":110,"oldContent":"        label = \"island_alpha\""},{"type":"DELETE","lineNumber":112,"oldContent":"    )"},{"type":"DELETE","lineNumber":114,"oldContent":"    "},{"type":"DELETE","lineNumber":116,"oldContent":"    // Pulsierender Effekt für bestimmte Status"},{"type":"DELETE","lineNumber":118,"oldContent":"    val pulseAnimation = rememberInfiniteTransition(label = \"pulse\")"},{"type":"DELETE","lineNumber":120,"oldContent":"    val pulseAlpha by pulseAnimation.animateFloat("},{"type":"DELETE","lineNumber":122,"oldContent":"        initialValue = 0.7f,"},{"type":"DELETE","lineNumber":124,"oldContent":"        targetValue = 1f,"},{"type":"DELETE","lineNumber":126,"oldContent":"        animationSpec = infiniteRepeatable("},{"type":"DELETE","lineNumber":128,"oldContent":"            animation = tween(1000, easing = EaseInOut),"},{"type":"DELETE","lineNumber":130,"oldContent":"            repeatMode = RepeatMode.Reverse"},{"type":"DELETE","lineNumber":132,"oldContent":"        ),"},{"type":"DELETE","lineNumber":134,"oldContent":"        label = \"pulse_alpha\""},{"type":"INSERT","lineNumber":111,"content":"@Composable"},{"type":"INSERT","lineNumber":112,"content":"fun ARInfoIsland("},{"type":"INSERT","lineNumber":113,"content":"    scanStatus: ARScanStatus,"},{"type":"INSERT","lineNumber":114,"content":"    modifier: Modifier = Modifier,"},{"type":"INSERT","lineNumber":115,"content":"    isVisible: Boolean = true,"},{"type":"INSERT","lineNumber":116,"content":"    currentInstruction: String? = null"},{"type":"INSERT","lineNumber":117,"content":") {"},{"type":"INSERT","lineNumber":118,"content":"    if (!isVisible) return"},{"type":"INSERT","lineNumber":119,"content":"    "},{"type":"INSERT","lineNumber":120,"content":"    // Animation für das Ein-/Ausblenden"},{"type":"INSERT","lineNumber":121,"content":"    val alpha by animateFloatAsState("},{"type":"INSERT","lineNumber":122,"content":"        targetValue = if (isVisible) 0.85f else 0f,"},{"type":"INSERT","lineNumber":123,"content":"        animationSpec = tween(durationMillis = 300),"},{"type":"INSERT","lineNumber":124,"content":"        label = \"island_alpha\""},{"type":"INSERT","lineNumber":127,"content":"    // Pulsierender Effekt für bestimmte Status"},{"type":"INSERT","lineNumber":128,"content":"    val pulseAnimation = rememberInfiniteTransition(label = \"pulse\")"},{"type":"INSERT","lineNumber":129,"content":"    val pulseAlpha by pulseAnimation.animateFloat("},{"type":"INSERT","lineNumber":130,"content":"        initialValue = 0.7f,"},{"type":"INSERT","lineNumber":131,"content":"        targetValue = 1f,"},{"type":"INSERT","lineNumber":132,"content":"        animationSpec = infiniteRepeatable("},{"type":"INSERT","lineNumber":133,"content":"            animation = tween(1000, easing = EaseInOut),"},{"type":"INSERT","lineNumber":134,"content":"            repeatMode = RepeatMode.Reverse"},{"type":"INSERT","lineNumber":135,"content":"        ),"},{"type":"INSERT","lineNumber":136,"content":"        label = \"pulse_alpha\""},{"type":"INSERT","lineNumber":137,"content":"    )"},{"type":"INSERT","lineNumber":138,"content":"    "},{"type":"INSERT","lineNumber":162,"content":"                Icon("},{"type":"INSERT","lineNumber":171,"content":"                    text = scanStatus.getMessage(),"},{"type":"INSERT","lineNumber":179,"content":"                // Optionaler Fortschrittsindikator"},{"type":"INSERT","lineNumber":183,"content":"                        color = scanStatus.getColor(),"},{"type":"DELETE","lineNumber":185,"oldContent":"                Icon("},{"type":"DELETE","lineNumber":193,"oldContent":"                    text = scanStatus.getMessage(),"},{"type":"DELETE","lineNumber":202,"oldContent":"                // Optionaler Fortschrittsindikator"},{"type":"INSERT","lineNumber":206,"content":"/**"},{"type":"DELETE","lineNumber":207,"oldContent":"                        color = scanStatus.getColor(),"},{"type":"INSERT","lineNumber":220,"content":"    // Stabilisiere den Tracking-Status um falsches \"Tracking verloren\" zu vermeiden"},{"type":"INSERT","lineNumber":221,"content":"    LaunchedEffect(isTracking) {"},{"type":"INSERT","lineNumber":222,"content":"        if (isTracking) {"},{"type":"INSERT","lineNumber":223,"content":"            stableTrackingState = true"},{"type":"INSERT","lineNumber":224,"content":"            lastTrackingTime = System.currentTimeMillis()"},{"type":"INSERT","lineNumber":225,"content":"        } else {"},{"type":"INSERT","lineNumber":226,"content":"            // Warte 5 Sekunden ohne Tracking bevor \"Tracking verloren\" angezeigt wird"},{"type":"DELETE","lineNumber":226,"oldContent":"/**"},{"type":"INSERT","lineNumber":237,"content":"            !stableTrackingState -> ARScanStatus.LOST"},{"type":"INSERT","lineNumber":238,"content":"            landmarkCount == 0 -> ARScanStatus.SCANNING"},{"type":"DELETE","lineNumber":237,"oldContent":"    // Stabilisiere den Tracking-Status um falsches \"Tracking verloren\" zu vermeiden"},{"type":"DELETE","lineNumber":238,"oldContent":"    LaunchedEffect(isTracking) {"},{"type":"DELETE","lineNumber":239,"oldContent":"            landmarkCount == 0 -> ARScanStatus.SCANNING"},{"type":"DELETE","lineNumber":240,"oldContent":"        if (isTracking) {"},{"type":"DELETE","lineNumber":241,"oldContent":"            !stableTrackingState -> ARScanStatus.LOST"},{"type":"DELETE","lineNumber":242,"oldContent":"            stableTrackingState = true"},{"type":"DELETE","lineNumber":243,"oldContent":"            // Warte 5 Sekunden ohne Tracking bevor \"Tracking verloren\" angezeigt wird"},{"type":"DELETE","lineNumber":244,"oldContent":"            lastTrackingTime = System.currentTimeMillis()"},{"type":"DELETE","lineNumber":245,"oldContent":"        } else {"}]},{"timestamp":1754330161040,"changes":[{"type":"MODIFY","lineNumber":41,"content":"    UNKNOWN         // Unbekannte Aktion","oldContent":"    UNKNOWN         // Unbekannte Aktion"},{"type":"DELETE","lineNumber":43,"oldContent":" */"},{"type":"DELETE","lineNumber":45,"oldContent":"private fun ARScanStatus.shouldPulse(): Boolean = when (this) {"},{"type":"INSERT","lineNumber":46,"content":" */"},{"type":"INSERT","lineNumber":47,"content":"private fun ARScanStatus.shouldPulse(): Boolean = when (this) {"},{"type":"INSERT","lineNumber":54,"content":"    ARScanStatus.SCANNING -> R.drawable.location_searching"},{"type":"DELETE","lineNumber":55,"oldContent":"    ARScanStatus.TRACKING -> R.drawable.navigation21"},{"type":"DELETE","lineNumber":80,"oldContent":" */"},{"type":"INSERT","lineNumber":83,"content":" */"},{"type":"DELETE","lineNumber":98,"oldContent":"@Composable"},{"type":"INSERT","lineNumber":99,"content":"private fun NavigationAction.getIconResource(): Int = when (this) {"},{"type":"INSERT","lineNumber":100,"content":"    NavigationAction.TURN_RIGHT -> R.drawable.corner_up_right_1"},{"type":"INSERT","lineNumber":101,"content":"    NavigationAction.TURN_LEFT -> R.drawable.left"},{"type":"INSERT","lineNumber":102,"content":"    NavigationAction.THROUGH_DOOR -> R.drawable.door"},{"type":"INSERT","lineNumber":103,"content":"    NavigationAction.STRAIGHT -> R.drawable.arrow_up_1"},{"type":"INSERT","lineNumber":104,"content":"    NavigationAction.UNKNOWN -> R.drawable.navigation21"},{"type":"INSERT","lineNumber":105,"content":"}"},{"type":"INSERT","lineNumber":106,"content":""},{"type":"INSERT","lineNumber":107,"content":"/**"},{"type":"INSERT","lineNumber":108,"content":" * AR Info Island - Semitransparente UI-Komponente im Dynamic Island Style"},{"type":"INSERT","lineNumber":109,"content":" * Zeigt Scan-Status und subtile Benutzerführung während der AR-Navigation"},{"type":"INSERT","lineNumber":110,"content":" */"},{"type":"INSERT","lineNumber":111,"content":"@Composable"},{"type":"DELETE","lineNumber":102,"oldContent":"private fun NavigationAction.getIconResource(): Int = when (this) {"},{"type":"DELETE","lineNumber":105,"oldContent":"    NavigationAction.TURN_RIGHT -> R.drawable.corner_up_right_1"},{"type":"DELETE","lineNumber":108,"oldContent":"    NavigationAction.TURN_LEFT -> R.drawable.left"},{"type":"DELETE","lineNumber":111,"oldContent":"    NavigationAction.THROUGH_DOOR -> R.drawable.door"},{"type":"DELETE","lineNumber":114,"oldContent":"    NavigationAction.STRAIGHT -> R.drawable.arrow_up_1"},{"type":"DELETE","lineNumber":117,"oldContent":"    NavigationAction.UNKNOWN -> R.drawable.navigation21"},{"type":"DELETE","lineNumber":119,"oldContent":"}"},{"type":"INSERT","lineNumber":125,"content":"    )"},{"type":"INSERT","lineNumber":126,"content":"    "},{"type":"DELETE","lineNumber":121,"oldContent":""},{"type":"DELETE","lineNumber":124,"oldContent":"/**"},{"type":"DELETE","lineNumber":127,"oldContent":" * AR Info Island - Semitransparente UI-Komponente im Dynamic Island Style"},{"type":"DELETE","lineNumber":130,"oldContent":" * Zeigt Scan-Status und subtile Benutzerführung während der AR-Navigation"},{"type":"DELETE","lineNumber":133,"oldContent":" */"},{"type":"DELETE","lineNumber":136,"oldContent":"    )"},{"type":"DELETE","lineNumber":138,"oldContent":"    "},{"type":"MODIFY","lineNumber":160,"content":"                // Status Icon mit Animation - verwende Navigationsicon wenn verfügbar","oldContent":"                // Status Icon mit Animation"},{"type":"MODIFY","lineNumber":162,"content":"                val iconResource = if (scanStatus == ARScanStatus.NAVIGATING && currentInstruction != null) {","oldContent":"                    painter = painterResource(id = scanStatus.getIconResource()),"},{"type":"INSERT","lineNumber":163,"content":"                    getNavigationAction(currentInstruction).getIconResource()"},{"type":"INSERT","lineNumber":164,"content":"                } else {"},{"type":"INSERT","lineNumber":165,"content":"                    scanStatus.getIconResource()"},{"type":"INSERT","lineNumber":166,"content":"                }"},{"type":"INSERT","lineNumber":167,"content":"                "},{"type":"INSERT","lineNumber":169,"content":"                    painter = painterResource(id = iconResource),"},{"type":"INSERT","lineNumber":177,"content":"                    text = scanStatus.getMessage(),"},{"type":"DELETE","lineNumber":173,"oldContent":"                    text = scanStatus.getMessage(),"},{"type":"INSERT","lineNumber":185,"content":"                // Optionaler Fortschrittsindikator"},{"type":"DELETE","lineNumber":182,"oldContent":"                // Optionaler Fortschrittsindikator"},{"type":"INSERT","lineNumber":189,"content":"                        color = scanStatus.getColor(),"},{"type":"DELETE","lineNumber":187,"oldContent":"                        color = scanStatus.getColor(),"},{"type":"INSERT","lineNumber":212,"content":"/**"},{"type":"DELETE","lineNumber":208,"oldContent":"/**"},{"type":"INSERT","lineNumber":226,"content":"    // Stabilisiere den Tracking-Status um falsches \"Tracking verloren\" zu vermeiden"},{"type":"INSERT","lineNumber":227,"content":"    LaunchedEffect(isTracking) {"},{"type":"INSERT","lineNumber":228,"content":"        if (isTracking) {"},{"type":"INSERT","lineNumber":229,"content":"            stableTrackingState = true"},{"type":"INSERT","lineNumber":230,"content":"            lastTrackingTime = System.currentTimeMillis()"},{"type":"INSERT","lineNumber":231,"content":"        } else {"},{"type":"INSERT","lineNumber":232,"content":"            // Warte 5 Sekunden ohne Tracking bevor \"Tracking verloren\" angezeigt wird"},{"type":"DELETE","lineNumber":222,"oldContent":"    // Stabilisiere den Tracking-Status um falsches \"Tracking verloren\" zu vermeiden"},{"type":"DELETE","lineNumber":224,"oldContent":"    LaunchedEffect(isTracking) {"},{"type":"DELETE","lineNumber":226,"oldContent":"        if (isTracking) {"},{"type":"DELETE","lineNumber":228,"oldContent":"            stableTrackingState = true"},{"type":"DELETE","lineNumber":230,"oldContent":"            lastTrackingTime = System.currentTimeMillis()"},{"type":"DELETE","lineNumber":232,"oldContent":"        } else {"},{"type":"DELETE","lineNumber":234,"oldContent":"            // Warte 5 Sekunden ohne Tracking bevor \"Tracking verloren\" angezeigt wird"},{"type":"INSERT","lineNumber":243,"content":"            !stableTrackingState -> ARScanStatus.LOST"},{"type":"INSERT","lineNumber":244,"content":"            landmarkCount == 0 -> ARScanStatus.SCANNING"},{"type":"DELETE","lineNumber":245,"oldContent":"            !stableTrackingState -> ARScanStatus.LOST"},{"type":"DELETE","lineNumber":246,"oldContent":"            landmarkCount == 0 -> ARScanStatus.SCANNING"}]},{"timestamp":1754330170264,"changes":[{"type":"INSERT","lineNumber":40,"content":"    THROUGH_DOOR,   // Durch Tür gehen"},{"type":"DELETE","lineNumber":41,"oldContent":"    UNKNOWN         // Unbekannte Aktion"},{"type":"DELETE","lineNumber":44,"oldContent":" */"},{"type":"MODIFY","lineNumber":46,"content":" */","oldContent":"private fun ARScanStatus.shouldPulse(): Boolean = when (this) {"},{"type":"INSERT","lineNumber":47,"content":"private fun ARScanStatus.shouldPulse(): Boolean = when (this) {"},{"type":"MODIFY","lineNumber":83,"content":" */","oldContent":" */"},{"type":"MODIFY","lineNumber":99,"content":"private fun NavigationAction.getIconResource(): Int = when (this) {","oldContent":"private fun NavigationAction.getIconResource(): Int = when (this) {"},{"type":"DELETE","lineNumber":101,"oldContent":"fun ARInfoIsland("},{"type":"DELETE","lineNumber":103,"oldContent":"    scanStatus: ARScanStatus,"},{"type":"DELETE","lineNumber":106,"oldContent":"    modifier: Modifier = Modifier,"},{"type":"DELETE","lineNumber":108,"oldContent":"    isVisible: Boolean = true,"},{"type":"DELETE","lineNumber":111,"oldContent":"    currentInstruction: String? = null"},{"type":"DELETE","lineNumber":113,"oldContent":") {"},{"type":"DELETE","lineNumber":116,"oldContent":"    if (!isVisible) return"},{"type":"DELETE","lineNumber":118,"oldContent":"    "},{"type":"INSERT","lineNumber":112,"content":"fun ARInfoIsland("},{"type":"INSERT","lineNumber":113,"content":"    scanStatus: ARScanStatus,"},{"type":"INSERT","lineNumber":114,"content":"    modifier: Modifier = Modifier,"},{"type":"INSERT","lineNumber":115,"content":"    isVisible: Boolean = true,"},{"type":"INSERT","lineNumber":116,"content":"    currentInstruction: String? = null"},{"type":"INSERT","lineNumber":117,"content":") {"},{"type":"INSERT","lineNumber":118,"content":"    if (!isVisible) return"},{"type":"INSERT","lineNumber":119,"content":"    "},{"type":"INSERT","lineNumber":125,"content":"    )"},{"type":"INSERT","lineNumber":126,"content":"    "},{"type":"DELETE","lineNumber":128,"oldContent":"    )"},{"type":"DELETE","lineNumber":130,"oldContent":"    "},{"type":"DELETE","lineNumber":164,"oldContent":"                Icon("},{"type":"DELETE","lineNumber":166,"oldContent":"                    contentDescription = null,"},{"type":"DELETE","lineNumber":168,"oldContent":"                    tint = scanStatus.getColor().copy(alpha = iconAlpha),"},{"type":"DELETE","lineNumber":170,"oldContent":"                    modifier = Modifier.size(20.dp)"},{"type":"INSERT","lineNumber":168,"content":"                Icon("},{"type":"INSERT","lineNumber":169,"content":"                    painter = painterResource(id = iconResource),"},{"type":"INSERT","lineNumber":170,"content":"                    contentDescription = null,"},{"type":"INSERT","lineNumber":171,"content":"                    tint = scanStatus.getColor().copy(alpha = iconAlpha),"},{"type":"INSERT","lineNumber":172,"content":"                    modifier = Modifier.size(20.dp)"},{"type":"DELETE","lineNumber":174,"oldContent":"                    painter = painterResource(id = iconResource),"},{"type":"MODIFY","lineNumber":175,"content":"                // Status Text - zeige Navigationsanweisung ohne Distanz wenn verfügbar","oldContent":"                // Status Text"},{"type":"INSERT","lineNumber":176,"content":"                val displayText = if (scanStatus == ARScanStatus.NAVIGATING && currentInstruction != null) {"},{"type":"INSERT","lineNumber":177,"content":"                    // Entferne Distanzangaben aus der Anweisung"},{"type":"INSERT","lineNumber":178,"content":"                    currentInstruction"},{"type":"INSERT","lineNumber":179,"content":"                        .replace(Regex(\"\\\\d+\\\\s*m\"), \"\") // Entferne \"123m\" oder \"123 m\""},{"type":"INSERT","lineNumber":180,"content":"                        .replace(Regex(\"\\\\d+\\\\s*meter\"), \"\") // Entferne \"123 meter\""},{"type":"INSERT","lineNumber":181,"content":"                        .replace(Regex(\"\\\\d+\\\\s*Meter\"), \"\") // Entferne \"123 Meter\""},{"type":"INSERT","lineNumber":182,"content":"                        .replace(Regex(\"\\\\s+\"), \" \") // Mehrfache Leerzeichen durch einfache ersetzen"},{"type":"INSERT","lineNumber":183,"content":"                        .trim()"},{"type":"INSERT","lineNumber":184,"content":"                } else {"},{"type":"INSERT","lineNumber":185,"content":"                    scanStatus.getMessage()"},{"type":"INSERT","lineNumber":186,"content":"                }"},{"type":"INSERT","lineNumber":187,"content":"                "},{"type":"INSERT","lineNumber":189,"content":"                    text = displayText,"},{"type":"DELETE","lineNumber":182,"oldContent":"                    text = scanStatus.getMessage(),"},{"type":"INSERT","lineNumber":197,"content":"                // Optionaler Fortschrittsindikator"},{"type":"INSERT","lineNumber":201,"content":"                        color = scanStatus.getColor(),"},{"type":"DELETE","lineNumber":190,"oldContent":"                // Optionaler Fortschrittsindikator"},{"type":"DELETE","lineNumber":194,"oldContent":"                        color = scanStatus.getColor(),"},{"type":"INSERT","lineNumber":224,"content":"/**"},{"type":"DELETE","lineNumber":217,"oldContent":"/**"},{"type":"DELETE","lineNumber":226,"oldContent":"            delay(5000)"},{"type":"DELETE","lineNumber":227,"oldContent":"            if (System.currentTimeMillis() - lastTrackingTime >= 5000) {"},{"type":"DELETE","lineNumber":228,"oldContent":"                stableTrackingState = false"},{"type":"DELETE","lineNumber":229,"oldContent":"            }"},{"type":"DELETE","lineNumber":232,"oldContent":"        }"},{"type":"DELETE","lineNumber":235,"oldContent":"    }"},{"type":"DELETE","lineNumber":238,"oldContent":"    "},{"type":"INSERT","lineNumber":245,"content":"            delay(5000)"},{"type":"INSERT","lineNumber":246,"content":"            if (System.currentTimeMillis() - lastTrackingTime >= 5000) {"},{"type":"INSERT","lineNumber":247,"content":"                stableTrackingState = false"},{"type":"INSERT","lineNumber":248,"content":"            }"},{"type":"INSERT","lineNumber":249,"content":"        }"},{"type":"INSERT","lineNumber":250,"content":"    }"},{"type":"INSERT","lineNumber":251,"content":"    "},{"type":"INSERT","lineNumber":255,"content":"            !stableTrackingState -> ARScanStatus.LOST"},{"type":"INSERT","lineNumber":256,"content":"            landmarkCount == 0 -> ARScanStatus.SCANNING"},{"type":"DELETE","lineNumber":249,"oldContent":"            !stableTrackingState -> ARScanStatus.LOST"},{"type":"DELETE","lineNumber":251,"oldContent":"            landmarkCount == 0 -> ARScanStatus.SCANNING"}]}]},"/Users/florian/Documents/GitHub/ar-walking/app/src/main/java/com/example/arwalking/ARTrackingSystem.kt":{"filePath":"/Users/florian/Documents/GitHub/ar-walking/app/src/main/java/com/example/arwalking/ARTrackingSystem.kt","baseContent":"package com.example.arwalking\n\n// Diese Datei wurde entfernt - ARTrackingSystem ist jetzt in FeatureMatchingEngine.kt definiert","baseTimestamp":1754321349663,"deltas":[{"timestamp":1754329790154,"changes":[{"type":"DELETE","lineNumber":0,"oldContent":"package com.example.arwalking"}]}]},"/Users/florian/Documents/GitHub/ar-walking/app/src/main/java/com/example/arwalking/components/DrawerList.kt":{"filePath":"/Users/florian/Documents/GitHub/ar-walking/app/src/main/java/com/example/arwalking/components/DrawerList.kt","baseContent":"package components\n\nimport androidx.compose.animation.core.animateDpAsState\nimport androidx.compose.animation.core.animateFloatAsState\nimport androidx.compose.animation.core.spring\nimport androidx.compose.animation.core.tween\nimport androidx.compose.foundation.Image\nimport androidx.compose.foundation.background\nimport androidx.compose.foundation.border\nimport androidx.compose.foundation.clickable\nimport androidx.compose.foundation.gestures.detectDragGestures\nimport androidx.compose.foundation.layout.Arrangement\nimport androidx.compose.foundation.layout.Box\nimport androidx.compose.foundation.layout.Column\nimport androidx.compose.foundation.layout.Row\nimport androidx.compose.foundation.layout.fillMaxSize\nimport androidx.compose.foundation.layout.fillMaxWidth\nimport androidx.compose.foundation.layout.height\nimport androidx.compose.foundation.layout.offset\nimport androidx.compose.foundation.layout.padding\nimport androidx.compose.foundation.layout.size\nimport androidx.compose.foundation.layout.width\nimport androidx.compose.foundation.rememberScrollState\nimport androidx.compose.foundation.shape.CircleShape\nimport androidx.compose.foundation.shape.RoundedCornerShape\nimport androidx.compose.foundation.verticalScroll\nimport androidx.compose.material3.Icon\nimport androidx.compose.material3.Text\nimport androidx.compose.runtime.Composable\nimport androidx.compose.runtime.getValue\nimport androidx.compose.runtime.mutableStateOf\nimport androidx.compose.runtime.remember\nimport androidx.compose.runtime.setValue\nimport androidx.compose.ui.Alignment\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.draw.blur\nimport androidx.compose.ui.draw.clip\nimport androidx.compose.ui.draw.shadow\nimport androidx.compose.ui.graphics.Brush\nimport androidx.compose.ui.graphics.Color\nimport androidx.compose.ui.graphics.ColorFilter\nimport androidx.compose.ui.graphics.graphicsLayer\nimport androidx.compose.ui.input.pointer.pointerInput\nimport androidx.compose.ui.res.painterResource\nimport androidx.compose.ui.text.TextStyle\nimport androidx.compose.ui.text.font.FontWeight\nimport androidx.compose.ui.unit.dp\nimport androidx.compose.ui.unit.sp\nimport com.example.arwalking.R\n\n// Data class for Navigation Steps\ndata class NavigationStepData(val text: String, val icon: Int)\n\n@Composable\nfun NavigationDrawer(\n    navigationSteps: List<NavigationStepData>,\n    destinationLabel: String,\n    onClose: () -> Unit,\n    modifier: Modifier = Modifier,\n    availableZoomRatios: List<Float> = listOf(0.7f, 1.0f, 2.0f),\n    currentZoomRatio: Float = 1.0f,\n    onZoomChange: (Float) -> Unit = {},\n    onShowUploadDialog: () -> Unit = {}\n) {\n    var isMaximized by remember { mutableStateOf(false) }\n    var offsetY by remember { mutableStateOf(0f) }\n    var isDragging by remember { mutableStateOf(false) }\n\n    // Smooth animation for height changes (Google Maps-like behavior)\n    val containerHeight by animateDpAsState(\n        targetValue = if (isMaximized) 750.dp else 280.dp, // More space: 750dp maximized, 280dp minimized\n        animationSpec = spring(\n            dampingRatio = 0.8f,\n            stiffness = 500f\n        ),\n        label = \"ContainerHeight\"\n    )\n\n    // Subtle zoom effect during drag\n    val scale by animateFloatAsState(\n        targetValue = if (isDragging) 1.01f else 1f,\n        animationSpec = tween(durationMillis = 100),\n        label = \"Scale\"\n    )\n\n\n    // Main container with drag gestures\n    Box(\n        modifier = modifier\n            .fillMaxWidth()\n            .height(containerHeight)\n            .graphicsLayer {\n                scaleX = scale\n                scaleY = scale\n            }\n            .clip(RoundedCornerShape(topStart = 24.dp, topEnd = 24.dp))\n            .pointerInput(Unit) {\n                detectDragGestures(\n                    onDragStart = {\n                        isDragging = true\n                    },\n                    onDragEnd = {\n                        isDragging = false\n                        // Snap logic based on drag distance\n                        when {\n                            offsetY < -50 -> isMaximized = true\n                            offsetY > 50 -> isMaximized = false\n                        }\n                        offsetY = 0f\n                    },\n                    onDrag = { _, dragAmount ->\n                        offsetY += dragAmount.y\n\n                        // Immediate response for smooth UX\n                        when {\n                            offsetY < -100 -> {\n                                isMaximized = true\n                                offsetY = 0f\n                            }\n                            offsetY > 100 -> {\n                                isMaximized = false\n                                offsetY = 0f\n                            }\n                        }\n                    }\n                )\n            }\n    ) {\n        // Background\n        Box(\n            modifier = Modifier\n                .fillMaxSize()\n                .background(\n                    brush = Brush.verticalGradient(\n                        colors = listOf(\n                            Color.Black.copy(alpha = 0.8f),\n                            Color.Black.copy(alpha = 0.5f),\n                            Color.White.copy(alpha = 0.55f),\n                        )\n                    )\n                )\n                .border(\n                    width = 1.dp,\n                    color = Color.White.copy(alpha = 0.15f),\n                    shape = RoundedCornerShape(topStart = 24.dp, topEnd = 24.dp)\n                )\n        )\n\n        // Drag handle bar\n        Box(\n            modifier = Modifier\n                .align(Alignment.TopCenter)\n                .offset(y = 12.dp)\n                .width(40.dp)\n                .height(4.dp)\n                .clip(RoundedCornerShape(2.dp))\n                .background(Color.White.copy(alpha = 0.8f))\n        )\n\n        // Header area with optimized UX layout\n        // Logo positioned on the left (with hidden upload function)\n        var longPressStartTime by remember { mutableStateOf(0L) }\n        var isLongPressing by remember { mutableStateOf(false) }\n        \n        Box(\n            modifier = Modifier\n                .align(Alignment.TopStart)\n                .offset(x = 20.dp, y = 7.dp)\n                .size(85.dp)\n                .pointerInput(Unit) {\n                    detectTapGestures(\n                        onPress = {\n                            longPressStartTime = System.currentTimeMillis()\n                            isLongPressing = true\n                            \n                            // Warte 5 Sekunden\n                            val pressJob = launch {\n                                delay(5000)\n                                if (isLongPressing) {\n                                    // 5 Sekunden erreicht - Upload-Dialog anzeigen\n                                    onShowUploadDialog()\n                                }\n                            }\n                            \n                            // Warte auf Release\n                            tryAwaitRelease()\n                            isLongPressing = false\n                            pressJob.cancel()\n                        }\n                    )\n                },\n            contentAlignment = Alignment.Center\n        ) {\n            // Logo mit visueller Rückmeldung bei Long Press\n            Image(\n                painter = painterResource(id = R.drawable.logo),\n                contentDescription = \"Logo\",\n                modifier = Modifier\n                    .size(90.dp)\n                    .graphicsLayer {\n                        alpha = if (isLongPressing) 0.7f else 1.0f\n                        scaleX = if (isLongPressing) 0.95f else 1.0f\n                        scaleY = if (isLongPressing) 0.95f else 1.0f\n                    }\n            )\n            \n            // Progress-Indikator für Long Press (nur sichtbar während Press)\n            if (isLongPressing) {\n                var progress by remember { mutableStateOf(0f) }\n                \n                LaunchedEffect(isLongPressing) {\n                    val startTime = System.currentTimeMillis()\n                    while (isLongPressing && progress < 1f) {\n                        val elapsed = System.currentTimeMillis() - startTime\n                        progress = (elapsed / 5000f).coerceAtMost(1f)\n                        delay(16) // ~60fps\n                    }\n                }\n                \n                CircularProgressIndicator(\n                    progress = progress,\n                    modifier = Modifier.size(95.dp),\n                    color = Color.White.copy(alpha = 0.8f),\n                    strokeWidth = 2.dp\n                )\n            }\n        }\n\n        // Zoom Level Switcher (Snapchat-style) with round elements - centered\n        val currentZoomIndex = availableZoomRatios.indexOfFirst { it == currentZoomRatio }.takeIf { it >= 0 } ?: 1\n        val zoomLabels = availableZoomRatios.map { ratio ->\n            when {\n                ratio < 1.0f -> {\n                    val formatted = if (ratio == 0.5f) \"0.5x\" else String.format(\"%.1fx\", ratio)\n                    formatted\n                }\n                ratio == 1.0f -> \"1x\"\n                else -> \"${ratio.toInt()}x\" // e.g., \"2x\"\n            }\n        }\n        \n        Box(\n            modifier = Modifier\n                .align(Alignment.TopCenter)\n                .offset(y = 25.dp)\n                .clip(RoundedCornerShape(20.dp))\n                .background(Color.Black.copy(alpha = 0.6f))\n                .border(\n                    width = 1.dp,\n                    color = Color.White.copy(alpha = 0.2f),\n                    shape = RoundedCornerShape(20.dp)\n                )\n                .padding(horizontal = 6.dp, vertical = 4.dp)\n        ) {\n            Row(horizontalArrangement = Arrangement.spacedBy(6.dp)) {\n                availableZoomRatios.forEachIndexed { index, zoomRatio ->\n                    Box(\n                        modifier = Modifier\n                            .size(38.dp) // Make elements perfectly round\n                            .clip(CircleShape) // Round zoom switcher elements  \n                            .background(\n                                if (currentZoomIndex == index) \n                                    Color.White.copy(alpha = 0.9f) \n                                else \n                                    Color.Transparent\n                            )\n                            .clickable { \n                                onZoomChange(zoomRatio)\n                            },\n                        contentAlignment = Alignment.Center\n                    ) {\n                        Text(\n                            text = zoomLabels[index],\n                            color = if (currentZoomIndex == index) \n                                Color.Black \n                            else \n                                Color.White.copy(alpha = 0.8f),\n                            style = TextStyle(\n                                fontSize = 11.sp,\n                                fontWeight = if (currentZoomIndex == index) \n                                    FontWeight.SemiBold \n                                else \n                                    FontWeight.Normal\n                            )\n                        )\n                    }\n                }\n            }\n        }\n\n        // Maximize/Minimize button positioned on the right\n        Box(\n            modifier = Modifier\n                .align(Alignment.TopEnd)\n                .offset(x = (-20).dp, y = 25.dp)\n                .size(38.dp)\n                .clip(CircleShape)\n                .background(Color.Black.copy(alpha = 0.4f))\n                .border(\n                    width = 1.dp,\n                    color = Color.White.copy(alpha = 0.2f),\n                    shape = CircleShape\n                )\n                .clickable { isMaximized = !isMaximized },\n            contentAlignment = Alignment.Center\n        ) {\n            Icon(\n                painter = painterResource(\n                    id = if (isMaximized) R.drawable.minimize_2 else R.drawable.maximize_2_1\n                ),\n                contentDescription = if (isMaximized) \"Minimize\" else \"Maximize\",\n                tint = Color.White,\n                modifier = Modifier.size(16.dp)\n            )\n        }\n\n        // Content area\n        if (isMaximized) {\n            // Expanded view - show all steps\n            Column(\n                verticalArrangement = Arrangement.spacedBy(12.dp),\n                modifier = Modifier\n                    .align(Alignment.TopCenter)\n                    .offset(y = 95.dp) // Adjusted for new header layout\n                    .fillMaxWidth()\n                    .padding(horizontal = 20.dp)\n                    .verticalScroll(rememberScrollState())\n                    .padding(bottom = 120.dp) // Increased bottom padding for larger drawer\n            ) {\n                // Current step (highlighted)\n                if (navigationSteps.isNotEmpty()) {\n                    StepCard(\n                        step = navigationSteps.first(),\n                        isActive = true,\n                        modifier = Modifier.fillMaxWidth()\n                    )\n                }\n\n                // Remaining steps\n                navigationSteps.drop(1).forEach { step ->\n                    StepCard(\n                        step = step,\n                        isActive = false,\n                        modifier = Modifier.fillMaxWidth()\n                    )\n                }\n\n                // Destination card\n                DestinationCard(\n                    destinationLabel = destinationLabel,\n                    modifier = Modifier.fillMaxWidth()\n                )\n            }\n        } else {\n            // Collapsed view - show current step and next steps\n            Column(\n                verticalArrangement = Arrangement.spacedBy(8.dp),\n                modifier = Modifier\n                    .align(Alignment.TopCenter)\n                    .offset(y = 95.dp) // Adjusted for new header layout consistency\n                    .fillMaxWidth()\n                    .padding(horizontal = 20.dp)\n            ) {\n                // Current step (full width)\n                if (navigationSteps.isNotEmpty()) {\n                    StepCard(\n                        step = navigationSteps.first(),\n                        isActive = true,\n                        isCompact = true,\n                        modifier = Modifier.fillMaxWidth()\n                    )\n                }\n\n                // Next steps (narrower width)\n                navigationSteps.drop(1).take(2).forEach { step -> // Show max 2 next steps\n                    Box(\n                        modifier = Modifier.fillMaxWidth(),\n                        contentAlignment = Alignment.Center\n                    ) {\n                        StepCard(\n                            step = step,\n                            isActive = false,\n                            isCompact = true,\n                            modifier = Modifier.fillMaxWidth(0.96f)\n                        )\n                    }\n                }\n            }\n        }\n    }\n}\n\n@Composable\nfun StepCard(\n    step: NavigationStepData,\n    isActive: Boolean,\n    isCompact: Boolean = false,\n    modifier: Modifier = Modifier\n) {\n    Box(\n        modifier = modifier\n            .height(if (isCompact) 64.dp else 72.dp)\n            .clip(RoundedCornerShape(16.dp))\n            .background(\n                if (isActive) {\n                    Color(0xFF94AC0B)\n                } else {\n                    Color.Black.copy(alpha = 0.3f)\n                }\n            )\n            .border(\n                width = 1.dp,\n                color = if (isActive) Color.Transparent else Color.White.copy(alpha = 0.15f),\n                shape = RoundedCornerShape(16.dp)\n            )\n            .padding(horizontal = 16.dp, vertical = 12.dp)\n    ) {\n        Row(\n            verticalAlignment = Alignment.CenterVertically,\n            horizontalArrangement = Arrangement.spacedBy(12.dp)\n        ) {\n            // Icon container\n            Box(\n                modifier = Modifier\n                    .size(if (isCompact) 36.dp else 44.dp)\n                    .clip(CircleShape)\n                    .background(\n                        if (isActive)\n                            Color.White.copy(alpha = 0.2f)\n                        else\n                            Color.White.copy(alpha = 0.1f)\n                    ),\n                contentAlignment = Alignment.Center\n            ) {\n                Image(\n                    painter = painterResource(id = step.icon),\n                    contentDescription = step.text,\n                    modifier = Modifier.size(if (isCompact) 20.dp else 24.dp),\n                    colorFilter = ColorFilter.tint(Color.White)\n                )\n            }\n\n            // Step text\n            Text(\n                text = step.text,\n                color = Color.White,\n                style = TextStyle(\n                    fontSize = if (isCompact) 15.sp else 17.sp,\n                    fontWeight = if (isActive) FontWeight.Medium else FontWeight.Normal\n                ),\n                modifier = Modifier.weight(1f)\n            )\n        }\n    }\n}\n\n@Composable\nfun DestinationCard(\n    destinationLabel: String,\n    modifier: Modifier = Modifier\n) {\n    Box(\n        modifier = modifier\n            .height(72.dp)\n            .clip(RoundedCornerShape(16.dp))\n            .background(Color.White.copy(alpha = 0.95f))\n            .border(\n                width = 1.dp,\n                color = Color.Black.copy(alpha = 0.1f),\n                shape = RoundedCornerShape(16.dp)\n            )\n            .padding(horizontal = 16.dp, vertical = 12.dp)\n    ) {\n        Row(\n            verticalAlignment = Alignment.CenterVertically,\n            horizontalArrangement = Arrangement.spacedBy(12.dp)\n        ) {\n            // Destination icon\n            Box(\n                modifier = Modifier\n                    .size(44.dp)\n                    .clip(CircleShape)\n                    .background(Color(0xFF94AC0B).copy(alpha = 0.15f)),\n                contentAlignment = Alignment.Center\n            ) {\n                Image(\n                    painter = painterResource(id = R.drawable.mappin1),\n                    contentDescription = \"Destination\",\n                    modifier = Modifier.size(24.dp),\n                    colorFilter = ColorFilter.tint(Color(0xFF94AC0B))\n                )\n            }\n\n            // Destination text\n            Text(\n                text = destinationLabel,\n                color = Color.Black,\n                style = TextStyle(\n                    fontSize = 17.sp,\n                    fontWeight = FontWeight.Medium\n                ),\n                modifier = Modifier.weight(1f)\n            )\n        }\n    }\n}\n\n","baseTimestamp":1754054279724,"deltas":[{"timestamp":1754054307220,"changes":[{"type":"INSERT","lineNumber":11,"content":"import androidx.compose.foundation.gestures.detectTapGestures"},{"type":"INSERT","lineNumber":12,"content":"import androidx.compose.material3.CircularProgressIndicator"},{"type":"INSERT","lineNumber":13,"content":"import androidx.compose.runtime.LaunchedEffect"},{"type":"INSERT","lineNumber":14,"content":"import androidx.compose.ui.graphics.graphicsLayer"},{"type":"INSERT","lineNumber":15,"content":"import kotlinx.coroutines.delay"},{"type":"INSERT","lineNumber":16,"content":"import kotlinx.coroutines.launch"}]},{"timestamp":1754232068035,"changes":[{"type":"DELETE","lineNumber":12,"oldContent":"import androidx.compose.foundation.layout.Arrangement"},{"type":"DELETE","lineNumber":14,"oldContent":"import androidx.compose.foundation.layout.Box"},{"type":"DELETE","lineNumber":16,"oldContent":"import androidx.compose.foundation.layout.Column"},{"type":"DELETE","lineNumber":18,"oldContent":"import androidx.compose.foundation.layout.Row"},{"type":"DELETE","lineNumber":20,"oldContent":"import androidx.compose.foundation.layout.fillMaxSize"},{"type":"INSERT","lineNumber":17,"content":"import androidx.compose.foundation.layout.Arrangement"},{"type":"INSERT","lineNumber":18,"content":"import androidx.compose.foundation.layout.Box"},{"type":"INSERT","lineNumber":19,"content":"import androidx.compose.foundation.layout.Column"},{"type":"INSERT","lineNumber":20,"content":"import androidx.compose.foundation.layout.Row"},{"type":"INSERT","lineNumber":21,"content":"import androidx.compose.foundation.layout.fillMaxSize"},{"type":"INSERT","lineNumber":38,"content":"import androidx.compose.runtime.rememberCoroutineScope"},{"type":"INSERT","lineNumber":46,"content":"import com.example.arwalking.ui.theme.GradientUtils"},{"type":"DELETE","lineNumber":67,"oldContent":"    onZoomChange: (Float) -> Unit = {},"},{"type":"MODIFY","lineNumber":69,"content":"    onZoomChange: (Float) -> Unit = {}","oldContent":"    onShowUploadDialog: () -> Unit = {}"},{"type":"INSERT","lineNumber":74,"content":"    val coroutineScope = rememberCoroutineScope()"},{"type":"DELETE","lineNumber":139,"oldContent":"                    brush = Brush.verticalGradient("},{"type":"INSERT","lineNumber":141,"content":"                    brush = GradientUtils.safeVerticalGradient("},{"type":"DELETE","lineNumber":166,"oldContent":"        // Logo positioned on the left (with hidden upload function)"},{"type":"DELETE","lineNumber":167,"oldContent":"        var longPressStartTime by remember { mutableStateOf(0L) }"},{"type":"DELETE","lineNumber":168,"oldContent":"        var isLongPressing by remember { mutableStateOf(false) }"},{"type":"DELETE","lineNumber":169,"oldContent":"        "},{"type":"INSERT","lineNumber":168,"content":"        // Logo positioned on the left"},{"type":"DELETE","lineNumber":174,"oldContent":"                .size(85.dp)"},{"type":"DELETE","lineNumber":175,"oldContent":"                .pointerInput(Unit) {"},{"type":"DELETE","lineNumber":176,"oldContent":"                    detectTapGestures("},{"type":"DELETE","lineNumber":177,"oldContent":"                        onPress = {"},{"type":"DELETE","lineNumber":178,"oldContent":"                            longPressStartTime = System.currentTimeMillis()"},{"type":"DELETE","lineNumber":179,"oldContent":"                            isLongPressing = true"},{"type":"DELETE","lineNumber":180,"oldContent":"                            "},{"type":"DELETE","lineNumber":181,"oldContent":"                            // Warte 5 Sekunden"},{"type":"DELETE","lineNumber":182,"oldContent":"                            val pressJob = launch {"},{"type":"DELETE","lineNumber":183,"oldContent":"                                delay(5000)"},{"type":"DELETE","lineNumber":184,"oldContent":"                                if (isLongPressing) {"},{"type":"DELETE","lineNumber":185,"oldContent":"                                    // 5 Sekunden erreicht - Upload-Dialog anzeigen"},{"type":"DELETE","lineNumber":186,"oldContent":"                                    onShowUploadDialog()"},{"type":"DELETE","lineNumber":187,"oldContent":"                                }"},{"type":"DELETE","lineNumber":188,"oldContent":"                            }"},{"type":"DELETE","lineNumber":189,"oldContent":"                            "},{"type":"DELETE","lineNumber":190,"oldContent":"                            // Warte auf Release"},{"type":"DELETE","lineNumber":191,"oldContent":"                            tryAwaitRelease()"},{"type":"DELETE","lineNumber":192,"oldContent":"                            isLongPressing = false"},{"type":"DELETE","lineNumber":193,"oldContent":"                            pressJob.cancel()"},{"type":"DELETE","lineNumber":194,"oldContent":"                        }"},{"type":"DELETE","lineNumber":195,"oldContent":"                    )"},{"type":"DELETE","lineNumber":196,"oldContent":"                },"},{"type":"INSERT","lineNumber":173,"content":"                .size(85.dp),"},{"type":"DELETE","lineNumber":199,"oldContent":"            // Logo mit visueller Rückmeldung bei Long Press"},{"type":"DELETE","lineNumber":203,"oldContent":"                modifier = Modifier"},{"type":"DELETE","lineNumber":204,"oldContent":"                    .size(90.dp)"},{"type":"DELETE","lineNumber":205,"oldContent":"                    .graphicsLayer {"},{"type":"DELETE","lineNumber":206,"oldContent":"                        alpha = if (isLongPressing) 0.7f else 1.0f"},{"type":"DELETE","lineNumber":207,"oldContent":"                        scaleX = if (isLongPressing) 0.95f else 1.0f"},{"type":"DELETE","lineNumber":208,"oldContent":"                        scaleY = if (isLongPressing) 0.95f else 1.0f"},{"type":"DELETE","lineNumber":209,"oldContent":"                    }"},{"type":"INSERT","lineNumber":179,"content":"                modifier = Modifier.size(90.dp)"}]},{"timestamp":1754232100064,"changes":[{"type":"MODIFY","lineNumber":15,"content":"import kotlinx.coroutines.delay","oldContent":"import androidx.compose.foundation.layout.Arrangement"},{"type":"INSERT","lineNumber":16,"content":"import kotlinx.coroutines.launch"},{"type":"INSERT","lineNumber":17,"content":"import androidx.compose.foundation.layout.Arrangement"},{"type":"DELETE","lineNumber":18,"oldContent":"import kotlinx.coroutines.delay"},{"type":"DELETE","lineNumber":21,"oldContent":"import kotlinx.coroutines.launch"},{"type":"MODIFY","lineNumber":47,"content":"import androidx.compose.ui.graphics.Color","oldContent":"import androidx.compose.ui.graphics.Color"},{"type":"DELETE","lineNumber":69,"oldContent":"    onShowUploadDialog: () -> Unit = {}"},{"type":"INSERT","lineNumber":70,"content":") {"},{"type":"MODIFY","lineNumber":75,"content":"","oldContent":""},{"type":"MODIFY","lineNumber":142,"content":"                        colors = listOf(","oldContent":"                        colors = listOf("},{"type":"DELETE","lineNumber":172,"oldContent":"                .size(85.dp),"},{"type":"DELETE","lineNumber":174,"oldContent":"                modifier = Modifier.size(90.dp)"},{"type":"INSERT","lineNumber":173,"content":"                .size(85.dp),"},{"type":"INSERT","lineNumber":179,"content":"                modifier = Modifier.size(90.dp)"},{"type":"DELETE","lineNumber":181,"oldContent":"            "},{"type":"DELETE","lineNumber":182,"oldContent":"            // Progress-Indikator für Long Press (nur sichtbar während Press)"},{"type":"DELETE","lineNumber":183,"oldContent":"            if (isLongPressing) {"},{"type":"DELETE","lineNumber":184,"oldContent":"                var progress by remember { mutableStateOf(0f) }"},{"type":"DELETE","lineNumber":185,"oldContent":"                "},{"type":"DELETE","lineNumber":186,"oldContent":"                LaunchedEffect(isLongPressing) {"},{"type":"DELETE","lineNumber":187,"oldContent":"                    val startTime = System.currentTimeMillis()"},{"type":"DELETE","lineNumber":188,"oldContent":"                    while (isLongPressing && progress < 1f) {"},{"type":"DELETE","lineNumber":189,"oldContent":"                        val elapsed = System.currentTimeMillis() - startTime"},{"type":"DELETE","lineNumber":190,"oldContent":"                        progress = (elapsed / 5000f).coerceAtMost(1f)"},{"type":"DELETE","lineNumber":191,"oldContent":"                        delay(16) // ~60fps"},{"type":"DELETE","lineNumber":192,"oldContent":"                    }"},{"type":"DELETE","lineNumber":193,"oldContent":"                }"},{"type":"DELETE","lineNumber":194,"oldContent":"                "},{"type":"DELETE","lineNumber":195,"oldContent":"                CircularProgressIndicator("},{"type":"DELETE","lineNumber":196,"oldContent":"                    progress = progress,"},{"type":"DELETE","lineNumber":197,"oldContent":"                    modifier = Modifier.size(95.dp),"},{"type":"DELETE","lineNumber":198,"oldContent":"                    color = Color.White.copy(alpha = 0.8f),"},{"type":"DELETE","lineNumber":199,"oldContent":"                    strokeWidth = 2.dp"},{"type":"DELETE","lineNumber":200,"oldContent":"                )"},{"type":"DELETE","lineNumber":201,"oldContent":"            }"}]},{"timestamp":1754314401782,"changes":[{"type":"MODIFY","lineNumber":0,"content":"package com.example.arwalking.components","oldContent":"package components"},{"type":"MODIFY","lineNumber":14,"content":"import androidx.compose.ui.graphics.graphicsLayer","oldContent":"import androidx.compose.foundation.layout.Arrangement"},{"type":"MODIFY","lineNumber":18,"content":"import androidx.compose.foundation.layout.Box","oldContent":"import androidx.compose.foundation.layout.Box"},{"type":"INSERT","lineNumber":46,"content":"import com.example.arwalking.ui.theme.GradientUtils"},{"type":"DELETE","lineNumber":47,"oldContent":"import androidx.compose.ui.graphics.Color"},{"type":"MODIFY","lineNumber":70,"content":") {","oldContent":") {"},{"type":"INSERT","lineNumber":74,"content":"    val coroutineScope = rememberCoroutineScope()"},{"type":"DELETE","lineNumber":75,"oldContent":""},{"type":"INSERT","lineNumber":141,"content":"                    brush = GradientUtils.safeVerticalGradient("},{"type":"DELETE","lineNumber":142,"oldContent":"                        colors = listOf("},{"type":"MODIFY","lineNumber":173,"content":"                .size(85.dp),","oldContent":"                .size(85.dp),"},{"type":"MODIFY","lineNumber":179,"content":"                modifier = Modifier.size(90.dp)","oldContent":"                modifier = Modifier.size(90.dp)"}]},{"timestamp":1754314407476,"changes":[{"type":"INSERT","lineNumber":17,"content":"import androidx.compose.foundation.layout.Arrangement"},{"type":"DELETE","lineNumber":18,"oldContent":"import androidx.compose.foundation.layout.Box"},{"type":"DELETE","lineNumber":58,"oldContent":"// Data class for Navigation Steps"},{"type":"DELETE","lineNumber":59,"oldContent":"data class NavigationStepData(val text: String, val icon: Int)"},{"type":"INSERT","lineNumber":58,"content":"// Import the correct NavigationStepData from NavigationDrawer.kt"},{"type":"INSERT","lineNumber":59,"content":"// data class NavigationStepData is already defined in NavigationDrawer.kt"},{"type":"INSERT","lineNumber":69,"content":"    onZoomChange: (Float) -> Unit = {}"},{"type":"DELETE","lineNumber":70,"oldContent":") {"},{"type":"INSERT","lineNumber":172,"content":"                .offset(x = 20.dp, y = 7.dp)"},{"type":"DELETE","lineNumber":173,"oldContent":"                .size(85.dp),"},{"type":"INSERT","lineNumber":178,"content":"                contentDescription = \"Logo\","},{"type":"DELETE","lineNumber":179,"oldContent":"                modifier = Modifier.size(90.dp)"}]},{"timestamp":1754314415283,"changes":[{"type":"MODIFY","lineNumber":62,"content":"fun NavigationDrawerList(","oldContent":"fun NavigationDrawer("}]},{"timestamp":1754314507861,"changes":[{"type":"DELETE","lineNumber":389,"oldContent":"                Image("},{"type":"DELETE","lineNumber":390,"oldContent":"                    painter = painterResource(id = step.icon),"},{"type":"DELETE","lineNumber":391,"oldContent":"                    contentDescription = step.text,"},{"type":"DELETE","lineNumber":392,"oldContent":"                    modifier = Modifier.size(if (isCompact) 20.dp else 24.dp),"},{"type":"DELETE","lineNumber":393,"oldContent":"                    colorFilter = ColorFilter.tint(Color.White)"},{"type":"INSERT","lineNumber":389,"content":"                Text("},{"type":"INSERT","lineNumber":390,"content":"                    text = step.stepNumber.toString(),"},{"type":"INSERT","lineNumber":391,"content":"                    color = Color.White,"},{"type":"INSERT","lineNumber":392,"content":"                    style = TextStyle("},{"type":"INSERT","lineNumber":393,"content":"                        fontSize = if (isCompact) 14.sp else 16.sp,"},{"type":"INSERT","lineNumber":394,"content":"                        fontWeight = FontWeight.Bold"},{"type":"INSERT","lineNumber":395,"content":"                    )"}]},{"timestamp":1754314523922,"changes":[{"type":"MODIFY","lineNumber":396,"content":"                )","oldContent":"                )"},{"type":"DELETE","lineNumber":399,"oldContent":"            // Step text"},{"type":"DELETE","lineNumber":400,"oldContent":"            Text("},{"type":"DELETE","lineNumber":401,"oldContent":"                text = step.text,"},{"type":"DELETE","lineNumber":402,"oldContent":"                color = Color.White,"},{"type":"DELETE","lineNumber":403,"oldContent":"                style = TextStyle("},{"type":"DELETE","lineNumber":404,"oldContent":"                    fontSize = if (isCompact) 15.sp else 17.sp,"},{"type":"DELETE","lineNumber":405,"oldContent":"                    fontWeight = if (isActive) FontWeight.Medium else FontWeight.Normal"},{"type":"DELETE","lineNumber":406,"oldContent":"                ),"},{"type":"INSERT","lineNumber":399,"content":"            // Step instruction and distance"},{"type":"INSERT","lineNumber":400,"content":"            Column("},{"type":"DELETE","lineNumber":408,"oldContent":"            )"},{"type":"INSERT","lineNumber":402,"content":"            ) {"},{"type":"INSERT","lineNumber":403,"content":"                Text("},{"type":"INSERT","lineNumber":404,"content":"                    text = step.instruction,"},{"type":"INSERT","lineNumber":405,"content":"                    color = Color.White,"},{"type":"INSERT","lineNumber":406,"content":"                    style = TextStyle("},{"type":"INSERT","lineNumber":407,"content":"                        fontSize = if (isCompact) 15.sp else 17.sp,"},{"type":"INSERT","lineNumber":408,"content":"                        fontWeight = if (isActive) FontWeight.Medium else FontWeight.Normal"},{"type":"INSERT","lineNumber":409,"content":"                    ),"},{"type":"INSERT","lineNumber":410,"content":"                    maxLines = if (isCompact) 1 else 2"},{"type":"INSERT","lineNumber":411,"content":"                )"},{"type":"INSERT","lineNumber":412,"content":"                if (step.distance > 0) {"},{"type":"INSERT","lineNumber":413,"content":"                    Text("},{"type":"INSERT","lineNumber":414,"content":"                        text = \"${step.distance.toInt()}m\","},{"type":"INSERT","lineNumber":415,"content":"                        color = Color.White.copy(alpha = 0.7f),"},{"type":"INSERT","lineNumber":416,"content":"                        style = TextStyle("},{"type":"INSERT","lineNumber":417,"content":"                            fontSize = if (isCompact) 12.sp else 14.sp,"},{"type":"INSERT","lineNumber":418,"content":"                            fontWeight = FontWeight.Normal"},{"type":"INSERT","lineNumber":419,"content":"                        )"},{"type":"INSERT","lineNumber":420,"content":"                    )"},{"type":"INSERT","lineNumber":421,"content":"                }"},{"type":"INSERT","lineNumber":422,"content":"            }"}]},{"timestamp":1754314533308,"changes":[{"type":"MODIFY","lineNumber":63,"content":"    steps: List<NavigationStepData>,","oldContent":"    navigationSteps: List<NavigationStepData>,"},{"type":"INSERT","lineNumber":64,"content":"    currentStep: Int,"},{"type":"INSERT","lineNumber":396,"content":"                    )"},{"type":"DELETE","lineNumber":396,"oldContent":"                )"},{"type":"INSERT","lineNumber":402,"content":"                modifier = Modifier.weight(1f)"},{"type":"DELETE","lineNumber":407,"oldContent":"                modifier = Modifier.weight(1f)"},{"type":"DELETE","lineNumber":410,"oldContent":"        }"},{"type":"DELETE","lineNumber":412,"oldContent":"    }"},{"type":"DELETE","lineNumber":414,"oldContent":"}"},{"type":"DELETE","lineNumber":416,"oldContent":""},{"type":"DELETE","lineNumber":418,"oldContent":"@Composable"},{"type":"DELETE","lineNumber":420,"oldContent":"fun DestinationCard("},{"type":"DELETE","lineNumber":422,"oldContent":"    destinationLabel: String,"},{"type":"DELETE","lineNumber":424,"oldContent":"    modifier: Modifier = Modifier"},{"type":"DELETE","lineNumber":426,"oldContent":") {"},{"type":"DELETE","lineNumber":428,"oldContent":"    Box("},{"type":"DELETE","lineNumber":430,"oldContent":"        modifier = modifier"},{"type":"DELETE","lineNumber":432,"oldContent":"            .height(72.dp)"},{"type":"DELETE","lineNumber":434,"oldContent":"            .clip(RoundedCornerShape(16.dp))"},{"type":"INSERT","lineNumber":424,"content":"        }"},{"type":"INSERT","lineNumber":425,"content":"    }"},{"type":"INSERT","lineNumber":426,"content":"}"},{"type":"INSERT","lineNumber":427,"content":""},{"type":"INSERT","lineNumber":428,"content":"@Composable"},{"type":"INSERT","lineNumber":429,"content":"fun DestinationCard("},{"type":"INSERT","lineNumber":430,"content":"    destinationLabel: String,"},{"type":"INSERT","lineNumber":431,"content":"    modifier: Modifier = Modifier"},{"type":"INSERT","lineNumber":432,"content":") {"},{"type":"INSERT","lineNumber":433,"content":"    Box("},{"type":"INSERT","lineNumber":434,"content":"        modifier = modifier"},{"type":"INSERT","lineNumber":435,"content":"            .height(72.dp)"},{"type":"INSERT","lineNumber":436,"content":"            .clip(RoundedCornerShape(16.dp))"}]},{"timestamp":1754314540307,"changes":[{"type":"MODIFY","lineNumber":320,"content":"                if (steps.isNotEmpty()) {","oldContent":"                if (navigationSteps.isNotEmpty()) {"},{"type":"MODIFY","lineNumber":322,"content":"                        step = steps.getOrNull(currentStep - 1) ?: steps.first(),","oldContent":"                        step = navigationSteps.first(),"},{"type":"MODIFY","lineNumber":330,"content":"                steps.drop(currentStep).take(2).forEach { step -> // Show max 2 next steps","oldContent":"                navigationSteps.drop(1).take(2).forEach { step -> // Show max 2 next steps"},{"type":"MODIFY","lineNumber":397,"content":"                )","oldContent":"                )"},{"type":"MODIFY","lineNumber":403,"content":"            ) {","oldContent":"            ) {"},{"type":"INSERT","lineNumber":418,"content":"                            fontSize = if (isCompact) 12.sp else 14.sp,"},{"type":"INSERT","lineNumber":419,"content":"                            fontWeight = FontWeight.Normal"},{"type":"INSERT","lineNumber":420,"content":"                        )"},{"type":"INSERT","lineNumber":421,"content":"                    )"},{"type":"INSERT","lineNumber":422,"content":"                }"},{"type":"INSERT","lineNumber":423,"content":"            }"},{"type":"DELETE","lineNumber":420,"oldContent":"                            fontSize = if (isCompact) 12.sp else 14.sp,"},{"type":"DELETE","lineNumber":423,"oldContent":"                            fontWeight = FontWeight.Normal"},{"type":"DELETE","lineNumber":426,"oldContent":"                        )"},{"type":"DELETE","lineNumber":429,"oldContent":"                    )"},{"type":"DELETE","lineNumber":432,"oldContent":"                }"},{"type":"DELETE","lineNumber":435,"oldContent":"            }"}]},{"timestamp":1754314559412,"changes":[{"type":"DELETE","lineNumber":285,"oldContent":"                // Current step (highlighted)"},{"type":"DELETE","lineNumber":286,"oldContent":"                if (navigationSteps.isNotEmpty()) {"},{"type":"INSERT","lineNumber":285,"content":"                // All steps with current step highlighted"},{"type":"INSERT","lineNumber":286,"content":"                steps.forEachIndexed { index, step ->"},{"type":"DELETE","lineNumber":288,"oldContent":"                        step = navigationSteps.first(),"},{"type":"DELETE","lineNumber":289,"oldContent":"                        isActive = true,"},{"type":"DELETE","lineNumber":290,"oldContent":"                        modifier = Modifier.fillMaxWidth()"},{"type":"DELETE","lineNumber":291,"oldContent":"                    )"},{"type":"DELETE","lineNumber":292,"oldContent":"                }"},{"type":"DELETE","lineNumber":293,"oldContent":""},{"type":"DELETE","lineNumber":294,"oldContent":"                // Remaining steps"},{"type":"DELETE","lineNumber":295,"oldContent":"                navigationSteps.drop(1).forEach { step ->"},{"type":"DELETE","lineNumber":296,"oldContent":"                    StepCard("},{"type":"DELETE","lineNumber":298,"oldContent":"                        isActive = false,"},{"type":"INSERT","lineNumber":289,"content":"                        isActive = (index + 1) == currentStep,"},{"type":"INSERT","lineNumber":387,"content":"                    )"},{"type":"DELETE","lineNumber":397,"oldContent":"                )"},{"type":"INSERT","lineNumber":393,"content":"                modifier = Modifier.weight(1f)"},{"type":"DELETE","lineNumber":403,"oldContent":"            ) {"},{"type":"DELETE","lineNumber":419,"oldContent":"        }"},{"type":"DELETE","lineNumber":421,"oldContent":"    }"},{"type":"DELETE","lineNumber":424,"oldContent":"}"},{"type":"DELETE","lineNumber":426,"oldContent":""},{"type":"INSERT","lineNumber":415,"content":"        }"},{"type":"INSERT","lineNumber":416,"content":"    }"},{"type":"INSERT","lineNumber":417,"content":"}"},{"type":"INSERT","lineNumber":418,"content":""}]},{"timestamp":1754329853109,"changes":[{"type":"MODIFY","lineNumber":289,"content":"                        isActive = (index + 1) == currentStep,","oldContent":"                        isActive = (index + 1) == currentStep,"},{"type":"DELETE","lineNumber":378,"oldContent":"                    )"},{"type":"DELETE","lineNumber":385,"oldContent":"                modifier = Modifier.weight(1f)"},{"type":"INSERT","lineNumber":387,"content":"                    )"},{"type":"INSERT","lineNumber":393,"content":"                modifier = Modifier.weight(1f)"},{"type":"DELETE","lineNumber":406,"oldContent":"        }"},{"type":"DELETE","lineNumber":408,"oldContent":"    }"},{"type":"DELETE","lineNumber":410,"oldContent":"}"},{"type":"DELETE","lineNumber":412,"oldContent":""},{"type":"INSERT","lineNumber":415,"content":"        }"},{"type":"INSERT","lineNumber":416,"content":"    }"},{"type":"INSERT","lineNumber":417,"content":"}"},{"type":"INSERT","lineNumber":418,"content":""}]},{"timestamp":1754329855820,"changes":[{"type":"INSERT","lineNumber":288,"content":"                        step = step,"},{"type":"DELETE","lineNumber":289,"oldContent":"                        isActive = (index + 1) == currentStep,"},{"type":"DELETE","lineNumber":385,"oldContent":"                    )"},{"type":"INSERT","lineNumber":387,"content":"                    )"},{"type":"MODIFY","lineNumber":393,"content":"                modifier = Modifier.weight(1f)","oldContent":"                modifier = Modifier.weight(1f)"},{"type":"MODIFY","lineNumber":406,"content":"                       // text = \"${step.distance.toInt()}m\",","oldContent":"                        text = \"${step.distance.toInt()}m\","},{"type":"DELETE","lineNumber":411,"oldContent":"        }"},{"type":"DELETE","lineNumber":413,"oldContent":"    }"},{"type":"DELETE","lineNumber":415,"oldContent":"}"},{"type":"DELETE","lineNumber":417,"oldContent":""},{"type":"INSERT","lineNumber":415,"content":"        }"},{"type":"INSERT","lineNumber":416,"content":"    }"},{"type":"INSERT","lineNumber":417,"content":"}"},{"type":"INSERT","lineNumber":418,"content":""}]},{"timestamp":1754329867421,"changes":[{"type":"MODIFY","lineNumber":387,"content":"                    )","oldContent":"                    )"},{"type":"INSERT","lineNumber":392,"content":"            Column("},{"type":"DELETE","lineNumber":393,"oldContent":"                modifier = Modifier.weight(1f)"},{"type":"DELETE","lineNumber":406,"oldContent":"                       // text = \"${step.distance.toInt()}m\","},{"type":"INSERT","lineNumber":412,"content":"                }"},{"type":"INSERT","lineNumber":413,"content":"            }"},{"type":"DELETE","lineNumber":415,"oldContent":"                }"},{"type":"DELETE","lineNumber":418,"oldContent":"            }"}]},{"timestamp":1754329878609,"changes":[{"type":"INSERT","lineNumber":386,"content":"                        fontWeight = FontWeight.Bold"},{"type":"DELETE","lineNumber":387,"oldContent":"                    )"},{"type":"INSERT","lineNumber":406,"content":"                        text = \"${step.distance.toInt()}m\","},{"type":"DELETE","lineNumber":411,"oldContent":"                }"},{"type":"INSERT","lineNumber":413,"content":"                }"}]},{"timestamp":1754329882004,"changes":[{"type":"INSERT","lineNumber":404,"content":"                "}]},{"timestamp":1754330131989,"changes":[{"type":"MODIFY","lineNumber":404,"content":"","oldContent":"                "}]}]},"/Users/florian/Documents/GitHub/ar-walking/app/src/main/java/com/example/arwalking/components/ExpandedARInfoIsland.kt":{"filePath":"/Users/florian/Documents/GitHub/ar-walking/app/src/main/java/com/example/arwalking/components/ExpandedARInfoIsland.kt","baseContent":"package com.example.arwalking.components\n\nimport androidx.compose.animation.core.*\nimport androidx.compose.foundation.background\nimport androidx.compose.foundation.layout.*\nimport androidx.compose.foundation.shape.RoundedCornerShape\nimport androidx.compose.material.icons.Icons\nimport androidx.compose.material.icons.filled.CameraAlt\nimport androidx.compose.material.icons.filled.Search\nimport androidx.compose.material.icons.filled.CheckCircle\nimport androidx.compose.material.icons.filled.Warning\nimport androidx.compose.material.icons.filled.LocationOn\nimport androidx.compose.material3.*\nimport androidx.compose.runtime.*\nimport androidx.compose.ui.Alignment\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.draw.blur\nimport androidx.compose.ui.draw.clip\nimport androidx.compose.ui.graphics.Color\nimport androidx.compose.ui.graphics.vector.ImageVector\nimport androidx.compose.ui.res.painterResource\nimport androidx.compose.ui.text.font.FontWeight\nimport androidx.compose.ui.text.style.TextAlign\nimport androidx.compose.ui.unit.dp\nimport androidx.compose.ui.unit.sp\nimport kotlinx.coroutines.delay\nimport com.example.arwalking.R\n\n/**\n * Erweiterte AR Info Island mit detaillierten Informationen\n * Zeigt Landmark-Count, Confidence und erweiterte Status-Informationen\n */\n@Composable\nfun ExpandedARInfoIsland(\n    scanStatus: ARScanStatus,\n    landmarkCount: Int = 0,\n    confidence: Float = 0f,\n    isVisible: Boolean = true,\n    modifier: Modifier = Modifier,\n    currentInstruction: String? = null\n) {\n    if (!isVisible) return\n    \n    // Animation für das Ein-/Ausblenden\n    val alpha by animateFloatAsState(\n        targetValue = if (isVisible) 0.9f else 0f,\n        animationSpec = tween(durationMillis = 300),\n        label = \"expanded_island_alpha\"\n    )\n    \n    // Pulsierender Effekt für bestimmte Status\n    val pulseAnimation = rememberInfiniteTransition(label = \"pulse\")\n    val pulseAlpha by pulseAnimation.animateFloat(\n        initialValue = 0.8f,\n        targetValue = 1f,\n        animationSpec = infiniteRepeatable(\n            animation = tween(1000, easing = EaseInOut),\n            repeatMode = RepeatMode.Reverse\n        ),\n        label = \"pulse_alpha\"\n    )\n    \n    // Bestimme Farben basierend auf Status\n    val (backgroundColor, contentColor, accentColor) = when (scanStatus) {\n        ARScanStatus.INITIALIZING -> Triple(\n            Color.Black.copy(alpha = 0.8f),\n            Color.White,\n            Color.Yellow\n        )\n        ARScanStatus.SCANNING -> Triple(\n            Color.Black.copy(alpha = 0.8f),\n            Color.White,\n            Color.Cyan\n        )\n        ARScanStatus.TRACKING -> Triple(\n            Color.Black.copy(alpha = 0.8f),\n            Color.White,\n            Color.Green\n        )\n        ARScanStatus.LOST -> Triple(\n            Color.Black.copy(alpha = 0.8f),\n            Color.White,\n            Color.Red\n        )\n        ARScanStatus.NAVIGATING -> Triple(\n            Color.Black.copy(alpha = 0.8f),\n            Color.White,\n            Color.Blue\n        )\n    }\n    \n    Card(\n        modifier = modifier\n            .padding(16.dp),\n        shape = RoundedCornerShape(24.dp),\n        colors = CardDefaults.cardColors(\n            containerColor = backgroundColor.copy(alpha = alpha)\n        ),\n        elevation = CardDefaults.cardElevation(defaultElevation = 8.dp)\n    ) {\n        Row(\n            modifier = Modifier\n                .padding(horizontal = 20.dp, vertical = 12.dp),\n            verticalAlignment = Alignment.CenterVertically,\n            horizontalArrangement = Arrangement.spacedBy(12.dp)\n        ) {\n            // Status-Icon mit Animation\n            val iconAlpha = if (scanStatus == ARScanStatus.SCANNING || scanStatus == ARScanStatus.INITIALIZING) {\n                pulseAlpha\n            } else {\n                1f\n            }\n            \n            Icon(\n                imageVector = getStatusIcon(scanStatus),\n                contentDescription = null,\n                tint = accentColor.copy(alpha = iconAlpha),\n                modifier = Modifier.size(24.dp)\n            )\n            \n            // Status-Text und Details\n            Column(\n                verticalArrangement = Arrangement.spacedBy(2.dp)\n            ) {\n                Text(\n                    text = getStatusText(scanStatus),\n                    color = contentColor,\n                    fontSize = 14.sp,\n                    fontWeight = FontWeight.Medium\n                )\n                \n                // Erweiterte Informationen\n                if (landmarkCount > 0 || confidence > 0f) {\n                    Row(\n                        horizontalArrangement = Arrangement.spacedBy(8.dp),\n                        verticalAlignment = Alignment.CenterVertically\n                    ) {\n                        if (landmarkCount > 0) {\n                            Text(\n                                text = \"$landmarkCount Landmarks\",\n                                color = contentColor.copy(alpha = 0.7f),\n                                fontSize = 11.sp\n                            )\n                        }\n                        \n                        if (confidence > 0f) {\n                            Text(\n                                text = \"•\",\n                                color = contentColor.copy(alpha = 0.5f),\n                                fontSize = 11.sp\n                            )\n                            \n                            Text(\n                                text = \"${(confidence * 100).toInt()}%\",\n                                color = getConfidenceColor(confidence),\n                                fontSize = 11.sp,\n                                fontWeight = FontWeight.Medium\n                            )\n                        }\n                    }\n                }\n            }\n            \n            // Zusätzlicher Status-Indikator\n            if (scanStatus == ARScanStatus.TRACKING || scanStatus == ARScanStatus.NAVIGATING) {\n                Box(\n                    modifier = Modifier\n                        .size(8.dp)\n                        .background(\n                            accentColor.copy(alpha = pulseAlpha),\n                            shape = RoundedCornerShape(4.dp)\n                        )\n                )\n            }\n        }\n    }\n}\n\n/**\n * Bestimmt das Icon basierend auf dem Scan-Status\n */\nprivate fun getStatusIcon(status: ARScanStatus): ImageVector {\n    return when (status) {\n        ARScanStatus.INITIALIZING -> Icons.Default.CameraAlt\n        ARScanStatus.SCANNING -> Icons.Default.Search\n        ARScanStatus.TRACKING -> Icons.Default.CheckCircle\n        ARScanStatus.LOST -> Icons.Default.Warning\n        ARScanStatus.NAVIGATING -> Icons.Default.LocationOn\n    }\n}\n\n/**\n * Bestimmt den Status-Text\n */\nprivate fun getStatusText(status: ARScanStatus): String {\n    return when (status) {\n        ARScanStatus.INITIALIZING -> \"AR wird initialisiert...\"\n        ARScanStatus.SCANNING -> \"Suche nach Landmarks...\"\n        ARScanStatus.TRACKING -> \"Landmark erkannt\"\n        ARScanStatus.LOST -> \"Landmark verloren\"\n        ARScanStatus.NAVIGATING -> \"Navigation aktiv\"\n    }\n}\n\n/**\n * Bestimmt die Farbe basierend auf der Confidence\n */\nprivate fun getConfidenceColor(confidence: Float): Color {\n    return when {\n        confidence >= 0.9f -> Color.Green\n        confidence >= 0.8f -> Color(0xFF90EE90) // Light Green\n        confidence >= 0.7f -> Color.Yellow\n        confidence >= 0.6f -> Color(0xFFFFA500) // Orange\n        else -> Color.Red\n    }\n}","baseTimestamp":1754330242450,"deltas":[{"timestamp":1754330248631,"changes":[{"type":"DELETE","lineNumber":113,"oldContent":"            Icon("},{"type":"DELETE","lineNumber":114,"oldContent":"                imageVector = getStatusIcon(scanStatus),"},{"type":"DELETE","lineNumber":115,"oldContent":"                contentDescription = null,"},{"type":"DELETE","lineNumber":116,"oldContent":"                tint = accentColor.copy(alpha = iconAlpha),"},{"type":"DELETE","lineNumber":117,"oldContent":"                modifier = Modifier.size(24.dp)"},{"type":"DELETE","lineNumber":118,"oldContent":"            )"},{"type":"INSERT","lineNumber":113,"content":"            // Verwende Navigationsicon wenn verfügbar, sonst Standard-Icon"},{"type":"INSERT","lineNumber":114,"content":"            if (scanStatus == ARScanStatus.NAVIGATING && currentInstruction != null) {"},{"type":"INSERT","lineNumber":115,"content":"                val navigationAction = getNavigationAction(currentInstruction)"},{"type":"INSERT","lineNumber":116,"content":"                Icon("},{"type":"INSERT","lineNumber":117,"content":"                    painter = painterResource(id = navigationAction.getIconResource()),"},{"type":"INSERT","lineNumber":118,"content":"                    contentDescription = null,"},{"type":"INSERT","lineNumber":119,"content":"                    tint = accentColor.copy(alpha = iconAlpha),"},{"type":"INSERT","lineNumber":120,"content":"                    modifier = Modifier.size(24.dp)"},{"type":"INSERT","lineNumber":121,"content":"                )"},{"type":"INSERT","lineNumber":122,"content":"            } else {"},{"type":"INSERT","lineNumber":123,"content":"                Icon("},{"type":"INSERT","lineNumber":124,"content":"                    imageVector = getStatusIcon(scanStatus),"},{"type":"INSERT","lineNumber":125,"content":"                    contentDescription = null,"},{"type":"INSERT","lineNumber":126,"content":"                    tint = accentColor.copy(alpha = iconAlpha),"},{"type":"INSERT","lineNumber":127,"content":"                    modifier = Modifier.size(24.dp)"},{"type":"INSERT","lineNumber":128,"content":"                )"},{"type":"INSERT","lineNumber":129,"content":"            }"}]},{"timestamp":1754330256506,"changes":[{"type":"DELETE","lineNumber":120,"oldContent":"            "},{"type":"DELETE","lineNumber":122,"oldContent":"            // Status-Text und Details"},{"type":"DELETE","lineNumber":124,"oldContent":"            Column("},{"type":"DELETE","lineNumber":126,"oldContent":"                verticalArrangement = Arrangement.spacedBy(2.dp)"},{"type":"DELETE","lineNumber":128,"oldContent":"            ) {"},{"type":"DELETE","lineNumber":130,"oldContent":"                Text("},{"type":"DELETE","lineNumber":132,"oldContent":"                    text = getStatusText(scanStatus),"},{"type":"DELETE","lineNumber":134,"oldContent":"                    color = contentColor,"},{"type":"DELETE","lineNumber":136,"oldContent":"                    fontSize = 14.sp,"},{"type":"DELETE","lineNumber":138,"oldContent":"                    fontWeight = FontWeight.Medium"},{"type":"INSERT","lineNumber":130,"content":"            "},{"type":"INSERT","lineNumber":131,"content":"            // Status-Text und Details"},{"type":"INSERT","lineNumber":132,"content":"            Column("},{"type":"INSERT","lineNumber":133,"content":"                verticalArrangement = Arrangement.spacedBy(2.dp)"},{"type":"INSERT","lineNumber":134,"content":"            ) {"},{"type":"INSERT","lineNumber":135,"content":"                // Status Text - zeige Navigationsanweisung ohne Distanz wenn verfügbar"},{"type":"INSERT","lineNumber":136,"content":"                val displayText = if (scanStatus == ARScanStatus.NAVIGATING && currentInstruction != null) {"},{"type":"INSERT","lineNumber":137,"content":"                    // Entferne Distanzangaben aus der Anweisung"},{"type":"INSERT","lineNumber":138,"content":"                    currentInstruction"},{"type":"INSERT","lineNumber":139,"content":"                        .replace(Regex(\"\\\\d+\\\\s*m\"), \"\") // Entferne \"123m\" oder \"123 m\""},{"type":"INSERT","lineNumber":140,"content":"                        .replace(Regex(\"\\\\d+\\\\s*meter\"), \"\") // Entferne \"123 meter\""},{"type":"INSERT","lineNumber":141,"content":"                        .replace(Regex(\"\\\\d+\\\\s*Meter\"), \"\") // Entferne \"123 Meter\""},{"type":"INSERT","lineNumber":142,"content":"                        .replace(Regex(\"\\\\s+\"), \" \") // Mehrfache Leerzeichen durch einfache ersetzen"},{"type":"INSERT","lineNumber":143,"content":"                        .trim()"},{"type":"INSERT","lineNumber":144,"content":"                } else {"},{"type":"INSERT","lineNumber":145,"content":"                    getStatusText(scanStatus)"},{"type":"INSERT","lineNumber":146,"content":"                }"},{"type":"INSERT","lineNumber":147,"content":"                "},{"type":"INSERT","lineNumber":148,"content":"                Text("},{"type":"INSERT","lineNumber":149,"content":"                    text = displayText,"},{"type":"INSERT","lineNumber":150,"content":"                    color = contentColor,"},{"type":"INSERT","lineNumber":151,"content":"                    fontSize = 14.sp,"},{"type":"INSERT","lineNumber":152,"content":"                    fontWeight = FontWeight.Medium"}]},{"timestamp":1754330267999,"changes":[{"type":"INSERT","lineNumber":125,"content":"                    contentDescription = null,"},{"type":"INSERT","lineNumber":126,"content":"                    tint = accentColor.copy(alpha = iconAlpha),"},{"type":"INSERT","lineNumber":127,"content":"                    modifier = Modifier.size(24.dp)"},{"type":"INSERT","lineNumber":128,"content":"                )"},{"type":"INSERT","lineNumber":129,"content":"            }"},{"type":"DELETE","lineNumber":127,"oldContent":"                    contentDescription = null,"},{"type":"DELETE","lineNumber":130,"oldContent":"                    tint = accentColor.copy(alpha = iconAlpha),"},{"type":"DELETE","lineNumber":133,"oldContent":"                    modifier = Modifier.size(24.dp)"},{"type":"DELETE","lineNumber":136,"oldContent":"                )"},{"type":"DELETE","lineNumber":139,"oldContent":"            }"},{"type":"DELETE","lineNumber":141,"oldContent":"                )"},{"type":"DELETE","lineNumber":143,"oldContent":"                "},{"type":"DELETE","lineNumber":145,"oldContent":"                // Erweiterte Informationen"},{"type":"DELETE","lineNumber":147,"oldContent":"                if (landmarkCount > 0 || confidence > 0f) {"},{"type":"DELETE","lineNumber":149,"oldContent":"                    Row("},{"type":"DELETE","lineNumber":151,"oldContent":"                        horizontalArrangement = Arrangement.spacedBy(8.dp),"},{"type":"DELETE","lineNumber":153,"oldContent":"                        verticalAlignment = Alignment.CenterVertically"},{"type":"DELETE","lineNumber":155,"oldContent":"                    ) {"},{"type":"DELETE","lineNumber":157,"oldContent":"                        if (landmarkCount > 0) {"},{"type":"DELETE","lineNumber":159,"oldContent":"                            Text("},{"type":"DELETE","lineNumber":161,"oldContent":"                                text = \"$landmarkCount Landmarks\","},{"type":"DELETE","lineNumber":163,"oldContent":"                                color = contentColor.copy(alpha = 0.7f),"},{"type":"INSERT","lineNumber":153,"content":"                )"},{"type":"INSERT","lineNumber":154,"content":"                "},{"type":"INSERT","lineNumber":155,"content":"                // Erweiterte Informationen"},{"type":"INSERT","lineNumber":156,"content":"                if (landmarkCount > 0 || confidence > 0f) {"},{"type":"INSERT","lineNumber":157,"content":"                    Row("},{"type":"INSERT","lineNumber":158,"content":"                        horizontalArrangement = Arrangement.spacedBy(8.dp),"},{"type":"INSERT","lineNumber":159,"content":"                        verticalAlignment = Alignment.CenterVertically"},{"type":"INSERT","lineNumber":160,"content":"                    ) {"},{"type":"INSERT","lineNumber":161,"content":"                        if (landmarkCount > 0) {"},{"type":"INSERT","lineNumber":162,"content":"                            Text("},{"type":"INSERT","lineNumber":163,"content":"                                text = \"$landmarkCount Landmarks\","},{"type":"INSERT","lineNumber":164,"content":"                                color = contentColor.copy(alpha = 0.7f),"},{"type":"INSERT","lineNumber":240,"content":""},{"type":"INSERT","lineNumber":241,"content":"/**"},{"type":"INSERT","lineNumber":242,"content":" * Bestimmt die Navigationsaktion basierend auf der Anweisung"},{"type":"INSERT","lineNumber":243,"content":" */"},{"type":"INSERT","lineNumber":244,"content":"private fun getNavigationAction(instruction: String): NavigationAction {"},{"type":"INSERT","lineNumber":245,"content":"    val lowerInstruction = instruction.lowercase()"},{"type":"INSERT","lineNumber":246,"content":"    return when {"},{"type":"INSERT","lineNumber":247,"content":"        lowerInstruction.contains(\"rechts\") || lowerInstruction.contains(\"right\") -> NavigationAction.TURN_RIGHT"},{"type":"INSERT","lineNumber":248,"content":"        lowerInstruction.contains(\"links\") || lowerInstruction.contains(\"left\") -> NavigationAction.TURN_LEFT"},{"type":"INSERT","lineNumber":249,"content":"        lowerInstruction.contains(\"tür\") || lowerInstruction.contains(\"door\") || "},{"type":"INSERT","lineNumber":250,"content":"        lowerInstruction.contains(\"eingang\") || lowerInstruction.contains(\"entrance\") ||"},{"type":"INSERT","lineNumber":251,"content":"        lowerInstruction.contains(\"durch\") || lowerInstruction.contains(\"through\") -> NavigationAction.THROUGH_DOOR"},{"type":"INSERT","lineNumber":252,"content":"        else -> NavigationAction.STRAIGHT"},{"type":"INSERT","lineNumber":253,"content":"    }"},{"type":"INSERT","lineNumber":254,"content":"}"},{"type":"INSERT","lineNumber":255,"content":""},{"type":"INSERT","lineNumber":256,"content":"/**"},{"type":"INSERT","lineNumber":257,"content":" * Gibt das passende Icon für die Navigationsaktion zurück"},{"type":"INSERT","lineNumber":258,"content":" */"},{"type":"INSERT","lineNumber":259,"content":"private fun NavigationAction.getIconResource(): Int = when (this) {"},{"type":"INSERT","lineNumber":260,"content":"    NavigationAction.TURN_RIGHT -> R.drawable.corner_up_right_1"},{"type":"INSERT","lineNumber":261,"content":"    NavigationAction.TURN_LEFT -> R.drawable.left"},{"type":"INSERT","lineNumber":262,"content":"    NavigationAction.THROUGH_DOOR -> R.drawable.door"},{"type":"INSERT","lineNumber":263,"content":"    NavigationAction.STRAIGHT -> R.drawable.arrow_up_1"},{"type":"INSERT","lineNumber":264,"content":"    NavigationAction.UNKNOWN -> R.drawable.navigation21"},{"type":"INSERT","lineNumber":265,"content":"}"}]}]},"/Users/florian/Documents/GitHub/ar-walking/app/src/main/java/com/example/arwalking/components/AR3DArrowOverlay.kt":{"filePath":"/Users/florian/Documents/GitHub/ar-walking/app/src/main/java/com/example/arwalking/components/AR3DArrowOverlay.kt","baseContent":"package com.example.arwalking.components\n\nimport android.graphics.Canvas\nimport android.graphics.Paint\nimport android.graphics.Path\nimport android.graphics.PointF\nimport androidx.compose.foundation.Canvas\nimport androidx.compose.foundation.layout.Box\nimport androidx.compose.foundation.layout.fillMaxSize\nimport androidx.compose.runtime.*\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.geometry.Offset\nimport androidx.compose.ui.graphics.*\nimport androidx.compose.ui.graphics.drawscope.DrawScope\nimport androidx.compose.ui.graphics.drawscope.Stroke\nimport androidx.compose.ui.graphics.drawscope.drawIntoCanvas\nimport androidx.compose.ui.graphics.drawscope.rotate\nimport androidx.compose.ui.graphics.drawscope.scale\nimport androidx.compose.ui.graphics.drawscope.translate\nimport androidx.compose.ui.platform.LocalDensity\nimport androidx.compose.ui.unit.dp\nimport com.example.arwalking.FeatureMatchResult\nimport kotlin.math.*\n\n/**\n * 3D-Pfeil Overlay für AR-Navigation\n * Zeigt einen 3D-Pfeil an, der auf erkannte Landmarks zeigt\n */\n@Composable\nfun AR3DArrowOverlay(\n    matches: List<FeatureMatchResult>,\n    isFeatureMappingEnabled: Boolean,\n    screenWidth: Float,\n    screenHeight: Float,\n    modifier: Modifier = Modifier\n) {\n    // Nur den besten Match verwenden\n    val bestMatch = matches.maxByOrNull { it.confidence }\n    \n    if (isFeatureMappingEnabled && bestMatch != null && bestMatch.confidence >= 0.7f) {\n        \n        // Berechne die Position des Pfeils basierend auf dem Landmark\n        val arrowPosition = calculateArrowPosition(\n            landmark = bestMatch.landmark,\n            screenPosition = bestMatch.screenPosition,\n            screenWidth = screenWidth,\n            screenHeight = screenHeight\n        )\n        \n        // Berechne die Richtung des Pfeils\n        val arrowDirection = calculateArrowDirection(bestMatch.landmark)\n        \n        Box(modifier = modifier.fillMaxSize()) {\n            Canvas(modifier = Modifier.fillMaxSize()) {\n                draw3DArrow(\n                    position = arrowPosition,\n                    direction = arrowDirection,\n                    confidence = bestMatch.confidence,\n                    size = size\n                )\n            }\n        }\n    }\n}\n\n/**\n * Berechnet die Position des 3D-Pfeils auf dem Bildschirm\n */\nprivate fun calculateArrowPosition(\n    landmark: com.example.arwalking.FeatureLandmark,\n    screenWidth: Float,\n    screenHeight: Float\n): Offset {\n    // Verwende die Position des Landmarks, um die Bildschirmposition zu berechnen\n    // Dies ist eine vereinfachte Berechnung - in einer echten AR-App würde man\n    // die Kamera-Matrix und die 3D-Position des Landmarks verwenden\n    \n    val x = landmark.position.x.toFloat()\n    val y = landmark.position.y.toFloat()\n    \n    // Normalisiere die Position auf Bildschirmkoordinaten\n    val normalizedX = (x % 100) / 100f // Vereinfachte Normalisierung\n    val normalizedY = (y % 100) / 100f\n    \n    return Offset(\n        x = normalizedX * screenWidth,\n        y = normalizedY * screenHeight\n    )\n}\n\n/**\n * Berechnet die Richtung des Pfeils basierend auf der Navigation\n */\nprivate fun calculateArrowDirection(landmark: com.example.arwalking.FeatureLandmark): Float {\n    // Vereinfachte Richtungsberechnung\n    // In einer echten Implementierung würde man die aktuelle Position des Benutzers\n    // und die Zielposition verwenden\n    \n    val angle = landmark.position.x.toFloat() * 0.1f // Vereinfachte Berechnung\n    return angle % 360f\n}\n\n/**\n * Zeichnet einen 3D-Pfeil auf dem Canvas\n */\nprivate fun DrawScope.draw3DArrow(\n    position: Offset,\n    direction: Float,\n    confidence: Float,\n    size: androidx.compose.ui.geometry.Size\n) {\n    val arrowSize = 60.dp.toPx() * confidence // Größe basierend auf Confidence\n    val arrowColor = getArrowColor(confidence)\n    \n    drawIntoCanvas { canvas ->\n        // Speichere den aktuellen Zustand\n        canvas.save()\n        \n        // Verschiebe zum Pfeil-Zentrum\n        canvas.translate(position.x, position.y)\n        \n        // Rotiere basierend auf der Richtung\n        canvas.rotate(direction)\n        \n        // Zeichne den 3D-Pfeil\n        draw3DArrowShape(canvas, arrowSize, arrowColor, confidence)\n        \n        // Stelle den ursprünglichen Zustand wieder her\n        canvas.restore()\n    }\n}\n\n/**\n * Zeichnet die 3D-Pfeil-Form\n */\nprivate fun DrawScope.draw3DArrowShape(\n    canvas: Canvas,\n    size: Float,\n    color: Color,\n    confidence: Float\n) {\n    val paint = Paint().apply {\n        this.color = color.toArgb()\n        isAntiAlias = true\n        style = Paint.Style.FILL\n    }\n    \n    val strokePaint = Paint().apply {\n        this.color = Color.White.copy(alpha = 0.8f).toArgb()\n        isAntiAlias = true\n        style = Paint.Style.STROKE\n        strokeWidth = 3f\n    }\n    \n    // Hauptkörper des Pfeils (3D-Effekt durch mehrere Schichten)\n    val arrowPath = Path().apply {\n        // Pfeilspitze\n        moveTo(0f, -size * 0.5f)\n        lineTo(size * 0.3f, -size * 0.2f)\n        lineTo(size * 0.15f, -size * 0.2f)\n        \n        // Pfeilkörper\n        lineTo(size * 0.15f, size * 0.3f)\n        lineTo(-size * 0.15f, size * 0.3f)\n        lineTo(-size * 0.15f, -size * 0.2f)\n        lineTo(-size * 0.3f, -size * 0.2f)\n        \n        close()\n    }\n    \n    // Schatten-Effekt (3D-Tiefe)\n    val shadowPath = Path(arrowPath).apply {\n        offset(size * 0.05f, size * 0.05f)\n    }\n    \n    val shadowPaint = Paint().apply {\n        this.color = Color.Black.copy(alpha = 0.3f).toArgb()\n        isAntiAlias = true\n        style = Paint.Style.FILL\n    }\n    \n    // Zeichne Schatten\n    canvas.drawPath(shadowPath, shadowPaint)\n    \n    // Zeichne Hauptpfeil\n    canvas.drawPath(arrowPath, paint)\n    \n    // Zeichne Umriss\n    canvas.drawPath(arrowPath, strokePaint)\n    \n    // Zeichne Glanz-Effekt für 3D-Look\n    val highlightPaint = Paint().apply {\n        this.color = Color.White.copy(alpha = 0.4f * confidence).toArgb()\n        isAntiAlias = true\n        style = Paint.Style.FILL\n    }\n    \n    val highlightPath = Path().apply {\n        moveTo(-size * 0.05f, -size * 0.4f)\n        lineTo(size * 0.05f, -size * 0.3f)\n        lineTo(size * 0.05f, -size * 0.1f)\n        lineTo(-size * 0.05f, -size * 0.2f)\n        close()\n    }\n    \n    canvas.drawPath(highlightPath, highlightPaint)\n}\n\n/**\n * Bestimmt die Farbe des Pfeils basierend auf der Confidence\n */\nprivate fun getArrowColor(confidence: Float): Color {\n    return when {\n        confidence >= 0.9f -> Color(0xFF4CAF50) // Grün - Sehr sicher\n        confidence >= 0.8f -> Color(0xFF8BC34A) // Hellgrün - Sicher\n        confidence >= 0.7f -> Color(0xFFFFEB3B) // Gelb - Okay\n        else -> Color(0xFFFF9800) // Orange - Unsicher\n    }\n}\n\n/**\n * Erweiterte 3D-Pfeil-Komponente mit Animation\n */\n@Composable\nfun Animated3DArrowOverlay(\n    matches: List<FeatureMatchResult>,\n    isFeatureMappingEnabled: Boolean,\n    screenWidth: Float,\n    screenHeight: Float,\n    modifier: Modifier = Modifier\n) {\n    val bestMatch = matches.maxByOrNull { it.confidence }\n    var animationProgress by remember { mutableStateOf(0f) }\n    \n    // Animation für pulsierenden Effekt\n    LaunchedEffect(bestMatch) {\n        if (bestMatch != null && bestMatch.confidence >= 0.7f) {\n            while (true) {\n                animationProgress = (animationProgress + 0.02f) % 1f\n                kotlinx.coroutines.delay(16) // ~60 FPS\n            }\n        }\n    }\n    \n    if (isFeatureMappingEnabled && bestMatch != null && bestMatch.confidence >= 0.7f) {\n        val arrowPosition = calculateArrowPosition(\n            landmark = bestMatch.landmark,\n            screenWidth = screenWidth,\n            screenHeight = screenHeight\n        )\n        \n        val arrowDirection = calculateArrowDirection(bestMatch.landmark)\n        \n        Box(modifier = modifier.fillMaxSize()) {\n            Canvas(modifier = Modifier.fillMaxSize()) {\n                drawAnimated3DArrow(\n                    position = arrowPosition,\n                    direction = arrowDirection,\n                    confidence = bestMatch.confidence,\n                    animationProgress = animationProgress,\n                    size = size\n                )\n            }\n        }\n    }\n}\n\n/**\n * Zeichnet einen animierten 3D-Pfeil\n */\nprivate fun DrawScope.drawAnimated3DArrow(\n    position: Offset,\n    direction: Float,\n    confidence: Float,\n    animationProgress: Float,\n    size: androidx.compose.ui.geometry.Size\n) {\n    val baseSize = 60.dp.toPx()\n    val pulseScale = 1f + sin(animationProgress * 2 * PI).toFloat() * 0.1f\n    val arrowSize = baseSize * confidence * pulseScale\n    val arrowColor = getArrowColor(confidence)\n    \n    // Leichtes Schweben des Pfeils\n    val hoverOffset = sin(animationProgress * 4 * PI).toFloat() * 5f\n    val adjustedPosition = position.copy(y = position.y + hoverOffset)\n    \n    drawIntoCanvas { canvas ->\n        canvas.save()\n        canvas.translate(adjustedPosition.x, adjustedPosition.y)\n        canvas.rotate(direction + animationProgress * 2f) // Leichte Rotation\n        \n        draw3DArrowShape(canvas, arrowSize, arrowColor, confidence)\n        \n        canvas.restore()\n    }\n}","baseTimestamp":1754116843411,"deltas":[{"timestamp":1754261511075,"changes":[{"type":"DELETE","lineNumber":129,"oldContent":"        // Treppen - nach oben/unten"},{"type":"DELETE","lineNumber":132,"oldContent":"        "},{"type":"DELETE","lineNumber":134,"oldContent":"        // Aufzüge - geradeaus"},{"type":"DELETE","lineNumber":137,"oldContent":"        "},{"type":"DELETE","lineNumber":139,"oldContent":"        else -> {"},{"type":"DELETE","lineNumber":141,"oldContent":"            // Dynamische Berechnung basierend auf Route-Fortschritt"},{"type":"INSERT","lineNumber":137,"content":"        // Treppen - nach oben/unten"},{"type":"INSERT","lineNumber":138,"content":"        landmark.name.contains(\"stairs\", ignoreCase = true) ||"},{"type":"INSERT","lineNumber":139,"content":"        landmark.name.contains(\"Treppe\", ignoreCase = true) -> 45f // Diagonal nach oben"},{"type":"INSERT","lineNumber":140,"content":"        "},{"type":"INSERT","lineNumber":141,"content":"        // Aufzüge - geradeaus"},{"type":"INSERT","lineNumber":142,"content":"        landmark.name.contains(\"elevator\", ignoreCase = true) ||"},{"type":"INSERT","lineNumber":143,"content":"        landmark.name.contains(\"Aufzug\", ignoreCase = true) -> 0f // Geradeaus"},{"type":"INSERT","lineNumber":144,"content":"        "},{"type":"INSERT","lineNumber":145,"content":"        else -> {"},{"type":"INSERT","lineNumber":146,"content":"            // Dynamische Berechnung basierend auf Route-Fortschritt"},{"type":"DELETE","lineNumber":145,"oldContent":"        landmark.name.contains(\"stairs\", ignoreCase = true) ||"},{"type":"DELETE","lineNumber":147,"oldContent":"        landmark.name.contains(\"Treppe\", ignoreCase = true) -> 45f // Diagonal nach oben"},{"type":"DELETE","lineNumber":151,"oldContent":"        landmark.name.contains(\"elevator\", ignoreCase = true) ||"},{"type":"DELETE","lineNumber":153,"oldContent":"        landmark.name.contains(\"Aufzug\", ignoreCase = true) -> 0f // Geradeaus"},{"type":"INSERT","lineNumber":422,"content":"    // Aktualisiere Tracking mit neuen Matches"},{"type":"INSERT","lineNumber":423,"content":"    LaunchedEffect(matches) {"},{"type":"DELETE","lineNumber":431,"oldContent":"    // Aktualisiere Tracking mit neuen Matches"},{"type":"DELETE","lineNumber":433,"oldContent":"    LaunchedEffect(matches) {"},{"type":"INSERT","lineNumber":510,"content":"/**"},{"type":"INSERT","lineNumber":511,"content":" * Berechnet sanfte Pfeil-Orientierung mit Smooth-Tracking"},{"type":"INSERT","lineNumber":512,"content":" */"},{"type":"INSERT","lineNumber":513,"content":"private fun calculateSmoothArrowOrientation("},{"type":"INSERT","lineNumber":514,"content":"    landmark: com.example.arwalking.FeatureLandmark,"},{"type":"DELETE","lineNumber":516,"oldContent":"/**"},{"type":"DELETE","lineNumber":517,"oldContent":"        landmark.id.contains(\"entrance\") -> 0f    // Geradeaus"},{"type":"DELETE","lineNumber":518,"oldContent":" * Berechnet sanfte Pfeil-Orientierung mit Smooth-Tracking"},{"type":"DELETE","lineNumber":519,"oldContent":"        landmark.id.contains(\"stairs\") -> 45f     // Diagonal nach oben"},{"type":"DELETE","lineNumber":520,"oldContent":" */"},{"type":"DELETE","lineNumber":521,"oldContent":"        landmark.id.contains(\"elevator\") -> 0f    // Geradeaus"},{"type":"DELETE","lineNumber":522,"oldContent":"private fun calculateSmoothArrowOrientation("},{"type":"DELETE","lineNumber":523,"oldContent":"        landmark.id.contains(\"office\") -> 270f    // Nach links"},{"type":"DELETE","lineNumber":524,"oldContent":"    landmark: com.example.arwalking.FeatureLandmark,"},{"type":"INSERT","lineNumber":521,"content":"        // Spezifische Landmark-IDs aus der Route"},{"type":"INSERT","lineNumber":522,"content":"        landmark.id == \"PT-1-86\" -> 270f    // Prof. Ludwig Büro - nach links"},{"type":"INSERT","lineNumber":523,"content":"        landmark.id == \"PT-1-566\" -> 0f     // Tür - geradeaus"},{"type":"INSERT","lineNumber":524,"content":"        landmark.id == \"PT-1-697\" -> 0f     // Entry - geradeaus"},{"type":"INSERT","lineNumber":525,"content":"        "},{"type":"INSERT","lineNumber":526,"content":"        // Allgemeine Typen basierend auf Namen"},{"type":"INSERT","lineNumber":527,"content":"        landmark.name.contains(\"Entry\", ignoreCase = true) ||"},{"type":"INSERT","lineNumber":528,"content":"        landmark.name.contains(\"entrance\", ignoreCase = true) -> 0f    // Geradeaus"},{"type":"INSERT","lineNumber":529,"content":"        landmark.name.contains(\"stairs\", ignoreCase = true) ||"},{"type":"INSERT","lineNumber":530,"content":"        landmark.name.contains(\"Treppe\", ignoreCase = true) -> 45f     // Diagonal nach oben"},{"type":"INSERT","lineNumber":531,"content":"        landmark.name.contains(\"elevator\", ignoreCase = true) ||"},{"type":"INSERT","lineNumber":532,"content":"        landmark.name.contains(\"Aufzug\", ignoreCase = true) -> 0f    // Geradeaus"},{"type":"INSERT","lineNumber":533,"content":"        landmark.name.contains(\"office\", ignoreCase = true) ||"},{"type":"INSERT","lineNumber":534,"content":"        landmark.name.contains(\"Prof.\", ignoreCase = true) -> 270f    // Nach links"}]},{"timestamp":1754311773355,"changes":[{"type":"INSERT","lineNumber":134,"content":"        landmark.name.contains(\"Prof.\", ignoreCase = true) ||"},{"type":"INSERT","lineNumber":135,"content":"        landmark.name.contains(\"Office\", ignoreCase = true) -> 270f // Nach links"},{"type":"INSERT","lineNumber":136,"content":"        "},{"type":"DELETE","lineNumber":136,"oldContent":"        landmark.name.contains(\"Prof.\", ignoreCase = true) ||"},{"type":"DELETE","lineNumber":139,"oldContent":"        landmark.name.contains(\"Office\", ignoreCase = true) -> 270f // Nach links"},{"type":"DELETE","lineNumber":142,"oldContent":"        "},{"type":"DELETE","lineNumber":144,"oldContent":"            val progress = currentStep.toFloat() / totalSteps.toFloat()"},{"type":"DELETE","lineNumber":146,"oldContent":"            when {"},{"type":"INSERT","lineNumber":147,"content":"            val progress = currentStep.toFloat() / totalSteps.toFloat()"},{"type":"INSERT","lineNumber":148,"content":"            when {"},{"type":"DELETE","lineNumber":390,"oldContent":"/**"},{"type":"DELETE","lineNumber":391,"oldContent":" * Snapchat-Style AR Arrow mit verbesserter 3D-Positionierung und Tracking"},{"type":"DELETE","lineNumber":392,"oldContent":" */"},{"type":"DELETE","lineNumber":393,"oldContent":"@Composable"},{"type":"DELETE","lineNumber":394,"oldContent":"fun SnapchatStyleAR3DArrow("},{"type":"DELETE","lineNumber":395,"oldContent":"    matches: List<FeatureMatchResult>,"},{"type":"DELETE","lineNumber":396,"oldContent":"    isFeatureMappingEnabled: Boolean,"},{"type":"DELETE","lineNumber":397,"oldContent":"    screenWidth: Float,"},{"type":"DELETE","lineNumber":398,"oldContent":"    screenHeight: Float,"},{"type":"DELETE","lineNumber":399,"oldContent":"    cameraRotation: Float = 0f,"},{"type":"DELETE","lineNumber":400,"oldContent":"    deviceOrientation: Float = 0f,"},{"type":"DELETE","lineNumber":401,"oldContent":"    modifier: Modifier = Modifier"},{"type":"DELETE","lineNumber":402,"oldContent":") {"},{"type":"DELETE","lineNumber":403,"oldContent":"    val context = LocalContext.current"},{"type":"DELETE","lineNumber":404,"oldContent":"    "},{"type":"DELETE","lineNumber":405,"oldContent":"    // AR Tracking System"},{"type":"DELETE","lineNumber":406,"oldContent":"    val trackingSystem = remember { ARTrackingSystem() }"},{"type":"DELETE","lineNumber":407,"oldContent":"    var trackedLandmarks by remember { mutableStateOf<List<TrackedLandmark>>(emptyList()) }"},{"type":"DELETE","lineNumber":408,"oldContent":"    "},{"type":"DELETE","lineNumber":409,"oldContent":"    // GLB Model State"},{"type":"DELETE","lineNumber":410,"oldContent":"    var glbModel by remember { mutableStateOf<GLBArrowModel?>(null) }"},{"type":"DELETE","lineNumber":411,"oldContent":"    var isModelLoaded by remember { mutableStateOf(false) }"},{"type":"DELETE","lineNumber":412,"oldContent":"    "},{"type":"DELETE","lineNumber":413,"oldContent":"    // Lade GLB-Modell"},{"type":"DELETE","lineNumber":414,"oldContent":"    LaunchedEffect(Unit) {"},{"type":"DELETE","lineNumber":415,"oldContent":"        val model = GLBArrowModel(context)"},{"type":"DELETE","lineNumber":416,"oldContent":"        if (model.loadModel()) {"},{"type":"DELETE","lineNumber":417,"oldContent":"            glbModel = model"},{"type":"DELETE","lineNumber":418,"oldContent":"            isModelLoaded = true"},{"type":"DELETE","lineNumber":419,"oldContent":"        }"},{"type":"DELETE","lineNumber":420,"oldContent":"    }"},{"type":"DELETE","lineNumber":421,"oldContent":"    "},{"type":"DELETE","lineNumber":422,"oldContent":"    // Aktualisiere Tracking mit neuen Matches"},{"type":"DELETE","lineNumber":423,"oldContent":"        if (matches.isNotEmpty()) {"},{"type":"DELETE","lineNumber":424,"oldContent":"    LaunchedEffect(matches) {"},{"type":"DELETE","lineNumber":425,"oldContent":"            trackedLandmarks = trackingSystem.updateTracking(matches)"},{"type":"DELETE","lineNumber":426,"oldContent":"        }"},{"type":"DELETE","lineNumber":427,"oldContent":"    }"},{"type":"DELETE","lineNumber":428,"oldContent":"    "},{"type":"DELETE","lineNumber":429,"oldContent":"    // Verwende besten getrackte Landmark"},{"type":"DELETE","lineNumber":430,"oldContent":"    val bestTrackedLandmark = trackedLandmarks.firstOrNull { it.isStable }"},{"type":"DELETE","lineNumber":431,"oldContent":"    "},{"type":"DELETE","lineNumber":432,"oldContent":"    if (isFeatureMappingEnabled && bestTrackedLandmark != null && bestTrackedLandmark.confidence >= 0.7f) {"},{"type":"DELETE","lineNumber":433,"oldContent":"        "},{"type":"DELETE","lineNumber":434,"oldContent":"        // Berechne stabilisierte 3D-Position (Snapchat-Style)"},{"type":"DELETE","lineNumber":435,"oldContent":"        val stabilizedPosition = calculateStabilized3DPosition("},{"type":"DELETE","lineNumber":436,"oldContent":"            landmark = bestTrackedLandmark.landmark,"},{"type":"DELETE","lineNumber":437,"oldContent":"            screenPosition = bestTrackedLandmark.position,"},{"type":"DELETE","lineNumber":438,"oldContent":"            screenWidth = screenWidth,"},{"type":"DELETE","lineNumber":439,"oldContent":"            screenHeight = screenHeight,"},{"type":"DELETE","lineNumber":440,"oldContent":"            cameraRotation = cameraRotation,"},{"type":"DELETE","lineNumber":441,"oldContent":"            deviceOrientation = deviceOrientation"},{"type":"DELETE","lineNumber":442,"oldContent":"        )"},{"type":"DELETE","lineNumber":443,"oldContent":"        "},{"type":"DELETE","lineNumber":444,"oldContent":"        // Berechne Pfeil-Orientierung mit Smooth-Tracking"},{"type":"DELETE","lineNumber":445,"oldContent":"        val arrowOrientation = calculateSmoothArrowOrientation("},{"type":"DELETE","lineNumber":446,"oldContent":"            landmark = bestTrackedLandmark.landmark,"},{"type":"DELETE","lineNumber":447,"oldContent":"            confidence = bestTrackedLandmark.confidence,"},{"type":"DELETE","lineNumber":448,"oldContent":"            cameraRotation = cameraRotation"},{"type":"DELETE","lineNumber":449,"oldContent":"        )"},{"type":"DELETE","lineNumber":450,"oldContent":"        "},{"type":"DELETE","lineNumber":451,"oldContent":"        Box(modifier = modifier.fillMaxSize()) {"},{"type":"DELETE","lineNumber":452,"oldContent":"            Canvas(modifier = Modifier.fillMaxSize()) {"},{"type":"DELETE","lineNumber":453,"oldContent":"                if (isModelLoaded) {"},{"type":"DELETE","lineNumber":454,"oldContent":"                    // Verwende GLB-Modell falls verfügbar"},{"type":"DELETE","lineNumber":455,"oldContent":"                    drawGLBArrow("},{"type":"DELETE","lineNumber":456,"oldContent":"                        position = stabilizedPosition,"},{"type":"DELETE","lineNumber":457,"oldContent":"                        orientation = arrowOrientation,"},{"type":"DELETE","lineNumber":458,"oldContent":"                        confidence = bestTrackedLandmark.confidence,"},{"type":"DELETE","lineNumber":459,"oldContent":"                        size = size"},{"type":"DELETE","lineNumber":460,"oldContent":"                    )"},{"type":"DELETE","lineNumber":461,"oldContent":"                } else {"},{"type":"DELETE","lineNumber":462,"oldContent":"                    // Fallback auf verbesserte 2D-Darstellung"},{"type":"DELETE","lineNumber":463,"oldContent":"                    drawEnhanced3DArrow("},{"type":"DELETE","lineNumber":464,"oldContent":"                        position = stabilizedPosition,"},{"type":"DELETE","lineNumber":465,"oldContent":"                        orientation = arrowOrientation,"},{"type":"DELETE","lineNumber":466,"oldContent":"                        confidence = bestTrackedLandmark.confidence,"},{"type":"DELETE","lineNumber":467,"oldContent":"                        size = size"},{"type":"DELETE","lineNumber":468,"oldContent":"                    )"},{"type":"DELETE","lineNumber":469,"oldContent":"                }"},{"type":"DELETE","lineNumber":470,"oldContent":"            }"},{"type":"DELETE","lineNumber":471,"oldContent":"        }"},{"type":"DELETE","lineNumber":472,"oldContent":"    }"},{"type":"DELETE","lineNumber":473,"oldContent":"}"},{"type":"INSERT","lineNumber":391,"content":""},{"type":"DELETE","lineNumber":511,"oldContent":"    confidence: Float,"},{"type":"DELETE","lineNumber":513,"oldContent":"    cameraRotation: Float"},{"type":"DELETE","lineNumber":515,"oldContent":"): Float {"},{"type":"DELETE","lineNumber":517,"oldContent":"    "},{"type":"INSERT","lineNumber":432,"content":"    confidence: Float,"},{"type":"INSERT","lineNumber":433,"content":"    cameraRotation: Float"},{"type":"INSERT","lineNumber":434,"content":"): Float {"},{"type":"INSERT","lineNumber":435,"content":"    "},{"type":"DELETE","lineNumber":526,"oldContent":"        else -> 0f"},{"type":"DELETE","lineNumber":528,"oldContent":"    }"},{"type":"DELETE","lineNumber":530,"oldContent":"    "},{"type":"DELETE","lineNumber":532,"oldContent":"    // Kompensiere Kamerabewegung für stabilere Orientierung"},{"type":"DELETE","lineNumber":534,"oldContent":"    val stabilizedDirection = baseDirection - cameraRotation"},{"type":"DELETE","lineNumber":536,"oldContent":"    "},{"type":"DELETE","lineNumber":538,"oldContent":"    // Füge Confidence-basierte Variation hinzu"},{"type":"DELETE","lineNumber":540,"oldContent":"    val confidenceVariation = (1f - confidence) * 10f * sin(System.currentTimeMillis() / 1000f)"},{"type":"DELETE","lineNumber":542,"oldContent":"    "},{"type":"INSERT","lineNumber":452,"content":"        else -> 0f"},{"type":"INSERT","lineNumber":453,"content":"    }"},{"type":"INSERT","lineNumber":454,"content":"    "},{"type":"INSERT","lineNumber":455,"content":"    // Kompensiere Kamerabewegung für stabilere Orientierung"},{"type":"INSERT","lineNumber":456,"content":"    val stabilizedDirection = baseDirection - cameraRotation"},{"type":"INSERT","lineNumber":457,"content":"    "},{"type":"INSERT","lineNumber":458,"content":"    // Füge Confidence-basierte Variation hinzu"},{"type":"INSERT","lineNumber":459,"content":"    val confidenceVariation = (1f - confidence) * 10f * sin(System.currentTimeMillis() / 1000f)"},{"type":"INSERT","lineNumber":460,"content":"    "}]},{"timestamp":1754312410556,"changes":[{"type":"DELETE","lineNumber":135,"oldContent":"        // Treppen - nach oben/unten"},{"type":"MODIFY","lineNumber":137,"content":"        // Treppen - nach oben/unten","oldContent":"        landmark.name.contains(\"stairs\", ignoreCase = true) ||"},{"type":"INSERT","lineNumber":138,"content":"        landmark.name.contains(\"stairs\", ignoreCase = true) ||"},{"type":"DELETE","lineNumber":145,"oldContent":"            val progress = currentStep.toFloat() / totalSteps.toFloat()"},{"type":"MODIFY","lineNumber":147,"content":"            val progress = currentStep.toFloat() / totalSteps.toFloat()","oldContent":"            when {"},{"type":"INSERT","lineNumber":148,"content":"            when {"},{"type":"MODIFY","lineNumber":245,"content":"    canvas.drawPath(arrowPath, paint as androidx.compose.ui.graphics.Paint)","oldContent":"    canvas.drawPath(arrowPath, paint)"},{"type":"DELETE","lineNumber":391,"oldContent":"    confidence: Float,"},{"type":"DELETE","lineNumber":392,"oldContent":"    cameraRotation: Float"},{"type":"DELETE","lineNumber":393,"oldContent":"): Float {"},{"type":"DELETE","lineNumber":394,"oldContent":"    "},{"type":"DELETE","lineNumber":395,"oldContent":"        else -> 0f"},{"type":"DELETE","lineNumber":396,"oldContent":"    }"},{"type":"DELETE","lineNumber":397,"oldContent":"    "},{"type":"DELETE","lineNumber":398,"oldContent":"    // Kompensiere Kamerabewegung für stabilere Orientierung"},{"type":"DELETE","lineNumber":399,"oldContent":"    val stabilizedDirection = baseDirection - cameraRotation"},{"type":"DELETE","lineNumber":400,"oldContent":"    "},{"type":"DELETE","lineNumber":401,"oldContent":"    // Füge Confidence-basierte Variation hinzu"},{"type":"DELETE","lineNumber":402,"oldContent":"    val confidenceVariation = (1f - confidence) * 10f * sin(System.currentTimeMillis() / 1000f)"},{"type":"DELETE","lineNumber":403,"oldContent":"    "},{"type":"INSERT","lineNumber":432,"content":"    confidence: Float,"},{"type":"INSERT","lineNumber":433,"content":"    cameraRotation: Float"},{"type":"INSERT","lineNumber":434,"content":"): Float {"},{"type":"INSERT","lineNumber":435,"content":"    "},{"type":"INSERT","lineNumber":452,"content":"        else -> 0f"},{"type":"INSERT","lineNumber":453,"content":"    }"},{"type":"INSERT","lineNumber":454,"content":"    "},{"type":"INSERT","lineNumber":455,"content":"    // Kompensiere Kamerabewegung für stabilere Orientierung"},{"type":"INSERT","lineNumber":456,"content":"    val stabilizedDirection = baseDirection - cameraRotation"},{"type":"INSERT","lineNumber":457,"content":"    "},{"type":"INSERT","lineNumber":458,"content":"    // Füge Confidence-basierte Variation hinzu"},{"type":"INSERT","lineNumber":459,"content":"    val confidenceVariation = (1f - confidence) * 10f * sin(System.currentTimeMillis() / 1000f)"},{"type":"INSERT","lineNumber":460,"content":"    "}]},{"timestamp":1754312414761,"changes":[{"type":"INSERT","lineNumber":136,"content":"        "},{"type":"DELETE","lineNumber":138,"oldContent":"        "},{"type":"INSERT","lineNumber":146,"content":"            // Dynamische Berechnung basierend auf Route-Fortschritt"},{"type":"DELETE","lineNumber":148,"oldContent":"            // Dynamische Berechnung basierend auf Route-Fortschritt"},{"type":"MODIFY","lineNumber":245,"content":"    canvas.drawPath(arrowPath as androidx.compose.ui.graphics.Path, paint as androidx.compose.ui.graphics.Paint)","oldContent":"    canvas.drawPath(arrowPath, paint as androidx.compose.ui.graphics.Paint)"},{"type":"DELETE","lineNumber":419,"oldContent":"    confidence: Float,"},{"type":"DELETE","lineNumber":421,"oldContent":"    cameraRotation: Float"},{"type":"DELETE","lineNumber":423,"oldContent":"): Float {"},{"type":"DELETE","lineNumber":425,"oldContent":"    "},{"type":"INSERT","lineNumber":432,"content":"    confidence: Float,"},{"type":"INSERT","lineNumber":433,"content":"    cameraRotation: Float"},{"type":"INSERT","lineNumber":434,"content":"): Float {"},{"type":"INSERT","lineNumber":435,"content":"    "},{"type":"DELETE","lineNumber":443,"oldContent":"        else -> 0f"},{"type":"DELETE","lineNumber":445,"oldContent":"    }"},{"type":"DELETE","lineNumber":447,"oldContent":"    "},{"type":"DELETE","lineNumber":449,"oldContent":"    // Kompensiere Kamerabewegung für stabilere Orientierung"},{"type":"DELETE","lineNumber":451,"oldContent":"    val stabilizedDirection = baseDirection - cameraRotation"},{"type":"DELETE","lineNumber":453,"oldContent":"    "},{"type":"DELETE","lineNumber":455,"oldContent":"    // Füge Confidence-basierte Variation hinzu"},{"type":"DELETE","lineNumber":457,"oldContent":"    val confidenceVariation = (1f - confidence) * 10f * sin(System.currentTimeMillis() / 1000f)"},{"type":"DELETE","lineNumber":459,"oldContent":"    "},{"type":"INSERT","lineNumber":452,"content":"        else -> 0f"},{"type":"INSERT","lineNumber":453,"content":"    }"},{"type":"INSERT","lineNumber":454,"content":"    "},{"type":"INSERT","lineNumber":455,"content":"    // Kompensiere Kamerabewegung für stabilere Orientierung"},{"type":"INSERT","lineNumber":456,"content":"    val stabilizedDirection = baseDirection - cameraRotation"},{"type":"INSERT","lineNumber":457,"content":"    "},{"type":"INSERT","lineNumber":458,"content":"    // Füge Confidence-basierte Variation hinzu"},{"type":"INSERT","lineNumber":459,"content":"    val confidenceVariation = (1f - confidence) * 10f * sin(System.currentTimeMillis() / 1000f)"},{"type":"INSERT","lineNumber":460,"content":"    "}]},{"timestamp":1754312416761,"changes":[{"type":"MODIFY","lineNumber":242,"content":"    canvas.drawPath(shadowPath as androidx.compose.ui.graphics.Path, shadowPaint)","oldContent":"    canvas.drawPath(shadowPath, shadowPaint)"},{"type":"DELETE","lineNumber":428,"oldContent":"    confidence: Float,"},{"type":"DELETE","lineNumber":430,"oldContent":"    cameraRotation: Float"},{"type":"DELETE","lineNumber":432,"oldContent":"): Float {"},{"type":"DELETE","lineNumber":434,"oldContent":"    "},{"type":"INSERT","lineNumber":432,"content":"    confidence: Float,"},{"type":"INSERT","lineNumber":433,"content":"    cameraRotation: Float"},{"type":"INSERT","lineNumber":434,"content":"): Float {"},{"type":"INSERT","lineNumber":435,"content":"    "},{"type":"DELETE","lineNumber":447,"oldContent":"        else -> 0f"},{"type":"INSERT","lineNumber":448,"content":"        landmark.name.contains(\"elevator\", ignoreCase = true) ||"},{"type":"INSERT","lineNumber":449,"content":"        landmark.name.contains(\"Aufzug\", ignoreCase = true) -> 0f    // Geradeaus"},{"type":"INSERT","lineNumber":450,"content":"        landmark.name.contains(\"office\", ignoreCase = true) ||"},{"type":"INSERT","lineNumber":451,"content":"        landmark.name.contains(\"Prof.\", ignoreCase = true) -> 270f    // Nach links"},{"type":"INSERT","lineNumber":452,"content":"        else -> 0f"},{"type":"DELETE","lineNumber":451,"oldContent":"        landmark.name.contains(\"elevator\", ignoreCase = true) ||"},{"type":"DELETE","lineNumber":454,"oldContent":"        landmark.name.contains(\"Aufzug\", ignoreCase = true) -> 0f    // Geradeaus"},{"type":"DELETE","lineNumber":457,"oldContent":"        landmark.name.contains(\"office\", ignoreCase = true) ||"},{"type":"DELETE","lineNumber":460,"oldContent":"        landmark.name.contains(\"Prof.\", ignoreCase = true) -> 270f    // Nach links"}]},{"timestamp":1754312421292,"changes":[{"type":"INSERT","lineNumber":83,"content":"    screenPosition: android.graphics.PointF?,"},{"type":"DELETE","lineNumber":86,"oldContent":"    // Verwende die Position des Landmarks, um die Bildschirmposition zu berechnen"},{"type":"DELETE","lineNumber":87,"oldContent":"    // die Kamera-Matrix und die 3D-Position des Landmarks verwenden"},{"type":"DELETE","lineNumber":88,"oldContent":"    "},{"type":"DELETE","lineNumber":89,"oldContent":"    val y = landmark.position.y.toFloat()"},{"type":"DELETE","lineNumber":90,"oldContent":"    // Normalisiere die Position auf Bildschirmkoordinaten"},{"type":"DELETE","lineNumber":91,"oldContent":"    val normalizedY = (y % 100) / 100f"},{"type":"INSERT","lineNumber":87,"content":"    // Verwende die tatsächliche Bildschirmposition falls verfügbar"},{"type":"INSERT","lineNumber":88,"content":"    if (screenPosition != null) {"},{"type":"INSERT","lineNumber":89,"content":"        return Offset("},{"type":"INSERT","lineNumber":90,"content":"            x = screenPosition.x,"},{"type":"INSERT","lineNumber":91,"content":"            y = screenPosition.y"},{"type":"DELETE","lineNumber":104,"oldContent":" * Berechnet die Richtung des Pfeils basierend auf der Navigation"},{"type":"DELETE","lineNumber":105,"oldContent":" */"},{"type":"DELETE","lineNumber":106,"oldContent":"private fun calculateArrowDirection(landmark: com.example.arwalking.FeatureLandmark): Float {"},{"type":"DELETE","lineNumber":107,"oldContent":"    // Vereinfachte Richtungsberechnung"},{"type":"DELETE","lineNumber":108,"oldContent":"    // In einer echten Implementierung würde man die aktuelle Position des Benutzers"},{"type":"DELETE","lineNumber":109,"oldContent":"    // und die Zielposition verwenden"},{"type":"INSERT","lineNumber":104,"content":"    val normalizedY = (y % 100) / 100f"},{"type":"DELETE","lineNumber":111,"oldContent":"    val angle = landmark.position.x.toFloat() * 0.1f // Vereinfachte Berechnung"},{"type":"DELETE","lineNumber":112,"oldContent":"    return angle % 360f"},{"type":"INSERT","lineNumber":106,"content":"    return Offset("},{"type":"INSERT","lineNumber":107,"content":"        x = normalizedX * screenWidth,"},{"type":"INSERT","lineNumber":108,"content":"        y = normalizedY * screenHeight"},{"type":"INSERT","lineNumber":109,"content":"    )"},{"type":"INSERT","lineNumber":112,"content":"/**"},{"type":"INSERT","lineNumber":113,"content":" * Berechnet die Richtung des Pfeils basierend auf der Navigation"},{"type":"INSERT","lineNumber":114,"content":" */"},{"type":"INSERT","lineNumber":191,"content":""},{"type":"INSERT","lineNumber":192,"content":"/**"},{"type":"INSERT","lineNumber":193,"content":" * Zeichnet die 3D-Pfeil-Form"},{"type":"INSERT","lineNumber":194,"content":" */"},{"type":"INSERT","lineNumber":195,"content":"private fun DrawScope.draw3DArrowShape("},{"type":"INSERT","lineNumber":196,"content":"    canvas: Canvas,"},{"type":"INSERT","lineNumber":197,"content":"    size: Float,"},{"type":"INSERT","lineNumber":198,"content":"    color: Color,"},{"type":"INSERT","lineNumber":199,"content":"    confidence: Float"},{"type":"DELETE","lineNumber":233,"oldContent":"    canvas.drawPath(shadowPath, shadowPaint)"},{"type":"INSERT","lineNumber":242,"content":"    canvas.drawPath(shadowPath as androidx.compose.ui.graphics.Path,"},{"type":"INSERT","lineNumber":243,"content":"        shadowPaint as androidx.compose.ui.graphics.Paint"},{"type":"INSERT","lineNumber":244,"content":"    )"},{"type":"DELETE","lineNumber":236,"oldContent":"    canvas.drawPath(arrowPath, paint)"},{"type":"INSERT","lineNumber":247,"content":"    canvas.drawPath(arrowPath as androidx.compose.ui.graphics.Path, paint as androidx.compose.ui.graphics.Paint)"},{"type":"DELETE","lineNumber":239,"oldContent":"    canvas.drawPath(arrowPath, strokePaint)"},{"type":"INSERT","lineNumber":250,"content":"    canvas.drawPath(arrowPath, strokePaint as androidx.compose.ui.graphics.Paint)"},{"type":"DELETE","lineNumber":242,"oldContent":"    canvas.drawPath(shadowPath as androidx.compose.ui.graphics.Path, shadowPaint)"},{"type":"INSERT","lineNumber":253,"content":"    val highlightPaint = Paint().apply {"},{"type":"DELETE","lineNumber":245,"oldContent":"    canvas.drawPath(arrowPath as androidx.compose.ui.graphics.Path, paint as androidx.compose.ui.graphics.Paint)"},{"type":"INSERT","lineNumber":256,"content":"        style = Paint.Style.FILL"},{"type":"INSERT","lineNumber":291,"content":"    currentStep: Int = 1,"},{"type":"INSERT","lineNumber":292,"content":"    totalSteps: Int = 3,"},{"type":"DELETE","lineNumber":289,"oldContent":"    currentStep: Int = 1,"},{"type":"DELETE","lineNumber":290,"oldContent":"    totalSteps: Int = 3,"},{"type":"DELETE","lineNumber":291,"oldContent":"    modifier: Modifier = Modifier"},{"type":"DELETE","lineNumber":292,"oldContent":") {"},{"type":"INSERT","lineNumber":302,"content":"                animationProgress = (animationProgress + 0.02f) % 1f"},{"type":"INSERT","lineNumber":303,"content":"                kotlinx.coroutines.delay(16) // ~60 FPS"},{"type":"INSERT","lineNumber":311,"content":"            screenPosition = bestMatch.screenPosition,"},{"type":"DELETE","lineNumber":304,"oldContent":"        val arrowDirection = calculateArrowDirection(bestMatch.landmark)"},{"type":"DELETE","lineNumber":305,"oldContent":"        "},{"type":"DELETE","lineNumber":306,"oldContent":"        Box(modifier = modifier.fillMaxSize()) {"},{"type":"DELETE","lineNumber":307,"oldContent":"            Canvas(modifier = Modifier.fillMaxSize()) {"},{"type":"DELETE","lineNumber":308,"oldContent":"                drawAnimated3DArrow("},{"type":"DELETE","lineNumber":309,"oldContent":"            screenPosition = bestMatch.screenPosition,"},{"type":"DELETE","lineNumber":310,"oldContent":"                    position = arrowPosition,"},{"type":"DELETE","lineNumber":311,"oldContent":"                    direction = arrowDirection,"},{"type":"DELETE","lineNumber":312,"oldContent":"                    confidence = bestMatch.confidence,"},{"type":"DELETE","lineNumber":313,"oldContent":"                    animationProgress = animationProgress,"},{"type":"INSERT","lineNumber":327,"content":"                    confidence = bestMatch.confidence,"},{"type":"INSERT","lineNumber":328,"content":"                    animationProgress = animationProgress,"},{"type":"INSERT","lineNumber":329,"content":"                    size = size"},{"type":"INSERT","lineNumber":330,"content":"                )"},{"type":"INSERT","lineNumber":331,"content":"            }"},{"type":"INSERT","lineNumber":332,"content":"        }"},{"type":"INSERT","lineNumber":333,"content":"    }"},{"type":"INSERT","lineNumber":334,"content":"}"},{"type":"INSERT","lineNumber":335,"content":""},{"type":"DELETE","lineNumber":349,"oldContent":"        draw3DArrowShape(canvas, arrowSize, arrowColor, confidence)"},{"type":"INSERT","lineNumber":360,"content":"        draw3DArrowShape(canvas as Canvas, arrowSize, arrowColor, confidence)"},{"type":"DELETE","lineNumber":354,"oldContent":"}"},{"type":"DELETE","lineNumber":355,"oldContent":"    canvas.drawPath(arrowPath, paint)"},{"type":"DELETE","lineNumber":356,"oldContent":"    "},{"type":"DELETE","lineNumber":357,"oldContent":"    }"},{"type":"DELETE","lineNumber":358,"oldContent":"        close()"},{"type":"DELETE","lineNumber":359,"oldContent":"        "},{"type":"DELETE","lineNumber":360,"oldContent":"        lineTo(offsetX - size * 0.3f, offsetY - size * 0.2f)"},{"type":"DELETE","lineNumber":361,"oldContent":"        lineTo(offsetX - size * 0.15f, offsetY - size * 0.2f)"},{"type":"DELETE","lineNumber":362,"oldContent":"        lineTo(offsetX - size * 0.15f, offsetY + size * 0.3f)"},{"type":"INSERT","lineNumber":432,"content":"private fun calculateSmoothArrowOrientation("},{"type":"INSERT","lineNumber":433,"content":"    landmark: com.example.arwalking.FeatureLandmark,"},{"type":"DELETE","lineNumber":432,"oldContent":"private fun calculateSmoothArrowOrientation("},{"type":"DELETE","lineNumber":435,"oldContent":"    landmark: com.example.arwalking.FeatureLandmark,"},{"type":"DELETE","lineNumber":447,"oldContent":"        landmark.name.contains(\"elevator\", ignoreCase = true) ||"},{"type":"INSERT","lineNumber":450,"content":"        landmark.name.contains(\"elevator\", ignoreCase = true) ||"},{"type":"DELETE","lineNumber":450,"oldContent":"    }"},{"type":"DELETE","lineNumber":452,"oldContent":"    "},{"type":"INSERT","lineNumber":455,"content":"    }"},{"type":"INSERT","lineNumber":456,"content":"    "},{"type":"DELETE","lineNumber":551,"oldContent":"}"},{"type":"DELETE","lineNumber":552,"oldContent":"    "},{"type":"MODIFY","lineNumber":553,"content":"        // Pfeilkörper","oldContent":"        close()"},{"type":"INSERT","lineNumber":554,"content":"        lineTo(offsetX + size * 0.15f, offsetY + size * 0.3f)"},{"type":"INSERT","lineNumber":555,"content":"        lineTo(offsetX - size * 0.15f, offsetY + size * 0.3f)"},{"type":"INSERT","lineNumber":559,"content":"        close()"},{"type":"INSERT","lineNumber":560,"content":"    }"},{"type":"INSERT","lineNumber":561,"content":"    "},{"type":"INSERT","lineNumber":562,"content":"    canvas.drawPath(arrowPath, paint)"},{"type":"INSERT","lineNumber":563,"content":"}"}]},{"timestamp":1754312426823,"changes":[{"type":"DELETE","lineNumber":100,"oldContent":"        x = normalizedX * screenWidth,"},{"type":"DELETE","lineNumber":101,"oldContent":"        y = normalizedY * screenHeight"},{"type":"DELETE","lineNumber":102,"oldContent":"}"},{"type":"DELETE","lineNumber":103,"oldContent":""},{"type":"INSERT","lineNumber":100,"content":"    val y = landmark.position.y.toFloat()"},{"type":"INSERT","lineNumber":101,"content":"    "},{"type":"INSERT","lineNumber":102,"content":"    // Normalisiere die Position auf Bildschirmkoordinaten"},{"type":"INSERT","lineNumber":103,"content":"    val normalizedX = (x % 100) / 100f // Vereinfachte Normalisierung"},{"type":"INSERT","lineNumber":105,"content":"    "},{"type":"DELETE","lineNumber":109,"oldContent":"    "},{"type":"INSERT","lineNumber":110,"content":"}"},{"type":"INSERT","lineNumber":111,"content":""},{"type":"DELETE","lineNumber":112,"oldContent":"}"},{"type":"DELETE","lineNumber":114,"oldContent":""},{"type":"DELETE","lineNumber":192,"oldContent":") {"},{"type":"DELETE","lineNumber":194,"oldContent":"    val paint = Paint().apply {"},{"type":"DELETE","lineNumber":196,"oldContent":"        this.color = color.toArgb()"},{"type":"DELETE","lineNumber":198,"oldContent":"        isAntiAlias = true"},{"type":"DELETE","lineNumber":200,"oldContent":"        style = Paint.Style.FILL"},{"type":"DELETE","lineNumber":202,"oldContent":"    }"},{"type":"DELETE","lineNumber":204,"oldContent":"    "},{"type":"DELETE","lineNumber":206,"oldContent":"    val strokePaint = Paint().apply {"},{"type":"INSERT","lineNumber":200,"content":") {"},{"type":"INSERT","lineNumber":201,"content":"    val paint = Paint().apply {"},{"type":"INSERT","lineNumber":202,"content":"        this.color = color.toArgb()"},{"type":"INSERT","lineNumber":203,"content":"        isAntiAlias = true"},{"type":"INSERT","lineNumber":204,"content":"        style = Paint.Style.FILL"},{"type":"INSERT","lineNumber":205,"content":"    }"},{"type":"INSERT","lineNumber":206,"content":"    "},{"type":"INSERT","lineNumber":207,"content":"    val strokePaint = Paint().apply {"},{"type":"INSERT","lineNumber":242,"content":"    canvas.drawPath(shadowPath as androidx.compose.ui.graphics.Path,"},{"type":"INSERT","lineNumber":243,"content":"        shadowPaint as androidx.compose.ui.graphics.Paint"},{"type":"INSERT","lineNumber":244,"content":"    )"},{"type":"INSERT","lineNumber":247,"content":"    canvas.drawPath(arrowPath as androidx.compose.ui.graphics.Path, paint as androidx.compose.ui.graphics.Paint)"},{"type":"INSERT","lineNumber":250,"content":"    canvas.drawPath(arrowPath, strokePaint as androidx.compose.ui.graphics.Paint)"},{"type":"DELETE","lineNumber":248,"oldContent":"    canvas.drawPath(shadowPath as androidx.compose.ui.graphics.Path,"},{"type":"DELETE","lineNumber":249,"oldContent":"        shadowPaint as androidx.compose.ui.graphics.Paint"},{"type":"INSERT","lineNumber":253,"content":"    val highlightPaint = Paint().apply {"},{"type":"DELETE","lineNumber":251,"oldContent":"    )"},{"type":"INSERT","lineNumber":256,"content":"        style = Paint.Style.FILL"},{"type":"DELETE","lineNumber":254,"oldContent":"    canvas.drawPath(arrowPath as androidx.compose.ui.graphics.Path, paint as androidx.compose.ui.graphics.Paint)"},{"type":"DELETE","lineNumber":258,"oldContent":"    canvas.drawPath(arrowPath, strokePaint as androidx.compose.ui.graphics.Paint)"},{"type":"DELETE","lineNumber":262,"oldContent":"    val highlightPaint = Paint().apply {"},{"type":"DELETE","lineNumber":266,"oldContent":"        style = Paint.Style.FILL"},{"type":"MODIFY","lineNumber":267,"content":"    canvas.drawPath(highlightPath as androidx.compose.ui.graphics.Path, highlightPaint)","oldContent":"    canvas.drawPath(highlightPath, highlightPaint)"},{"type":"INSERT","lineNumber":291,"content":"    currentStep: Int = 1,"},{"type":"INSERT","lineNumber":292,"content":"    totalSteps: Int = 3,"},{"type":"DELETE","lineNumber":300,"oldContent":"    currentStep: Int = 1,"},{"type":"DELETE","lineNumber":301,"oldContent":"    totalSteps: Int = 3,"},{"type":"INSERT","lineNumber":302,"content":"                animationProgress = (animationProgress + 0.02f) % 1f"},{"type":"INSERT","lineNumber":303,"content":"                kotlinx.coroutines.delay(16) // ~60 FPS"},{"type":"INSERT","lineNumber":311,"content":"            screenPosition = bestMatch.screenPosition,"},{"type":"DELETE","lineNumber":311,"oldContent":"                animationProgress = (animationProgress + 0.02f) % 1f"},{"type":"DELETE","lineNumber":313,"oldContent":"                kotlinx.coroutines.delay(16) // ~60 FPS"},{"type":"DELETE","lineNumber":315,"oldContent":"            screenPosition = bestMatch.screenPosition,"},{"type":"INSERT","lineNumber":327,"content":"                    confidence = bestMatch.confidence,"},{"type":"INSERT","lineNumber":328,"content":"                    animationProgress = animationProgress,"},{"type":"INSERT","lineNumber":329,"content":"                    size = size"},{"type":"INSERT","lineNumber":330,"content":"                )"},{"type":"INSERT","lineNumber":331,"content":"            }"},{"type":"INSERT","lineNumber":332,"content":"        }"},{"type":"INSERT","lineNumber":333,"content":"    }"},{"type":"INSERT","lineNumber":334,"content":"}"},{"type":"INSERT","lineNumber":335,"content":""},{"type":"INSERT","lineNumber":336,"content":"/**"},{"type":"DELETE","lineNumber":329,"oldContent":"                    confidence = bestMatch.confidence,"},{"type":"DELETE","lineNumber":331,"oldContent":"                    animationProgress = animationProgress,"},{"type":"DELETE","lineNumber":333,"oldContent":"                    size = size"},{"type":"DELETE","lineNumber":335,"oldContent":"                )"},{"type":"DELETE","lineNumber":337,"oldContent":"            }"},{"type":"DELETE","lineNumber":339,"oldContent":"        }"},{"type":"DELETE","lineNumber":341,"oldContent":"    }"},{"type":"DELETE","lineNumber":343,"oldContent":"}"},{"type":"DELETE","lineNumber":345,"oldContent":""},{"type":"MODIFY","lineNumber":360,"content":"        draw3DArrowShape(canvas as Canvas, arrowSize, arrowColor, confidence)","oldContent":"        draw3DArrowShape(canvas, arrowSize, arrowColor, confidence)"},{"type":"INSERT","lineNumber":361,"content":"        "},{"type":"DELETE","lineNumber":363,"oldContent":"}"},{"type":"DELETE","lineNumber":364,"oldContent":"        draw3DArrowShape(canvas as Canvas, arrowSize, arrowColor, confidence)"},{"type":"DELETE","lineNumber":432,"oldContent":"    confidence: Float,"},{"type":"MODIFY","lineNumber":434,"content":"    confidence: Float,","oldContent":"    cameraRotation: Float"},{"type":"INSERT","lineNumber":435,"content":"    cameraRotation: Float"},{"type":"MODIFY","lineNumber":451,"content":"        landmark.name.contains(\"Aufzug\", ignoreCase = true) -> 0f    // Geradeaus","oldContent":"        landmark.name.contains(\"Aufzug\", ignoreCase = true) -> 0f    // Geradeaus"},{"type":"MODIFY","lineNumber":457,"content":"    // Kompensiere Kamerabewegung für stabilere Orientierung","oldContent":"    // Kompensiere Kamerabewegung für stabilere Orientierung"},{"type":"MODIFY","lineNumber":556,"content":"        lineTo(offsetX - size * 0.15f, offsetY - size * 0.2f)","oldContent":"        lineTo(offsetX - size * 0.15f, offsetY - size * 0.2f)"},{"type":"DELETE","lineNumber":558,"oldContent":"        lineTo(offsetX - size * 0.3f, offsetY - size * 0.2f)"},{"type":"DELETE","lineNumber":559,"oldContent":"}"},{"type":"DELETE","lineNumber":560,"oldContent":"    canvas.drawPath(arrowPath, paint)"},{"type":"INSERT","lineNumber":558,"content":"        "},{"type":"MODIFY","lineNumber":561,"content":"    ","oldContent":"    "},{"type":"INSERT","lineNumber":562,"content":"    canvas.drawPath(arrowPath, paint)"},{"type":"INSERT","lineNumber":563,"content":"}"}]},{"timestamp":1754312430856,"changes":[{"type":"INSERT","lineNumber":92,"content":"        )"},{"type":"INSERT","lineNumber":93,"content":"    }"},{"type":"DELETE","lineNumber":93,"oldContent":"    val normalizedX = (x % 100) / 100f // Vereinfachte Normalisierung"},{"type":"DELETE","lineNumber":94,"oldContent":"    "},{"type":"MODIFY","lineNumber":95,"content":"    // Fallback: Verwende die Position des Landmarks, um die Bildschirmposition zu berechnen","oldContent":"    return Offset("},{"type":"MODIFY","lineNumber":112,"content":"/**","oldContent":"/**"},{"type":"INSERT","lineNumber":196,"content":"    canvas: Canvas,"},{"type":"INSERT","lineNumber":197,"content":"    size: Float,"},{"type":"INSERT","lineNumber":198,"content":"    color: Color,"},{"type":"INSERT","lineNumber":199,"content":"    confidence: Float"},{"type":"DELETE","lineNumber":198,"oldContent":"    canvas: Canvas,"},{"type":"DELETE","lineNumber":201,"oldContent":"    size: Float,"},{"type":"DELETE","lineNumber":204,"oldContent":"    color: Color,"},{"type":"DELETE","lineNumber":207,"oldContent":"    confidence: Float"},{"type":"DELETE","lineNumber":243,"oldContent":"    "},{"type":"MODIFY","lineNumber":246,"content":"    // Zeichne Hauptpfeil","oldContent":"    // Zeichne Hauptpfeil"},{"type":"INSERT","lineNumber":247,"content":"    canvas.drawPath(arrowPath as androidx.compose.ui.graphics.Path, paint as androidx.compose.ui.graphics.Paint)"},{"type":"INSERT","lineNumber":248,"content":"    "},{"type":"INSERT","lineNumber":250,"content":"    canvas.drawPath(arrowPath, strokePaint as androidx.compose.ui.graphics.Paint)"},{"type":"DELETE","lineNumber":250,"oldContent":"    canvas.drawPath(arrowPath as androidx.compose.ui.graphics.Path, paint as androidx.compose.ui.graphics.Paint)"},{"type":"DELETE","lineNumber":252,"oldContent":"    canvas.drawPath(arrowPath, strokePaint as androidx.compose.ui.graphics.Paint)"},{"type":"INSERT","lineNumber":253,"content":"    val highlightPaint = Paint().apply {"},{"type":"DELETE","lineNumber":255,"oldContent":"    val highlightPaint = Paint().apply {"},{"type":"INSERT","lineNumber":256,"content":"        style = Paint.Style.FILL"},{"type":"DELETE","lineNumber":258,"oldContent":"        style = Paint.Style.FILL"},{"type":"MODIFY","lineNumber":267,"content":"    canvas.drawPath(highlightPath as androidx.compose.ui.graphics.Path,","oldContent":"    canvas.drawPath(highlightPath as androidx.compose.ui.graphics.Path, highlightPaint)"},{"type":"INSERT","lineNumber":268,"content":"        highlightPaint as androidx.compose.ui.graphics.Paint"},{"type":"INSERT","lineNumber":269,"content":"    )"},{"type":"DELETE","lineNumber":292,"oldContent":"    modifier: Modifier = Modifier"},{"type":"INSERT","lineNumber":295,"content":"    modifier: Modifier = Modifier"},{"type":"DELETE","lineNumber":303,"oldContent":"            }"},{"type":"INSERT","lineNumber":306,"content":"            }"},{"type":"INSERT","lineNumber":313,"content":"            screenPosition = bestMatch.screenPosition,"},{"type":"DELETE","lineNumber":313,"oldContent":"            screenPosition = bestMatch.screenPosition,"},{"type":"DELETE","lineNumber":328,"oldContent":" * Zeichnet einen animierten 3D-Pfeil"},{"type":"DELETE","lineNumber":330,"oldContent":" */"},{"type":"DELETE","lineNumber":333,"oldContent":"private fun DrawScope.drawAnimated3DArrow("},{"type":"DELETE","lineNumber":336,"oldContent":"    position: Offset,"},{"type":"MODIFY","lineNumber":339,"content":" * Zeichnet einen animierten 3D-Pfeil","oldContent":"    direction: Float,"},{"type":"INSERT","lineNumber":340,"content":" */"},{"type":"INSERT","lineNumber":341,"content":"private fun DrawScope.drawAnimated3DArrow("},{"type":"INSERT","lineNumber":342,"content":"    position: Offset,"},{"type":"INSERT","lineNumber":343,"content":"    direction: Float,"},{"type":"DELETE","lineNumber":360,"oldContent":"        draw3DArrowShape(canvas, arrowSize, arrowColor, confidence)"},{"type":"INSERT","lineNumber":364,"content":"        canvas.restore()"},{"type":"DELETE","lineNumber":432,"oldContent":"    cameraRotation: Float"},{"type":"INSERT","lineNumber":434,"content":"private fun calculateSmoothArrowOrientation("},{"type":"INSERT","lineNumber":435,"content":"    landmark: com.example.arwalking.FeatureLandmark,"},{"type":"DELETE","lineNumber":435,"oldContent":"    landmark: com.example.arwalking.FeatureLandmark,"},{"type":"INSERT","lineNumber":452,"content":"        landmark.name.contains(\"elevator\", ignoreCase = true) ||"},{"type":"DELETE","lineNumber":451,"oldContent":"        landmark.name.contains(\"Aufzug\", ignoreCase = true) -> 0f    // Geradeaus"},{"type":"INSERT","lineNumber":458,"content":"    "},{"type":"DELETE","lineNumber":457,"oldContent":"    // Kompensiere Kamerabewegung für stabilere Orientierung"},{"type":"INSERT","lineNumber":557,"content":"        lineTo(offsetX - size * 0.15f, offsetY + size * 0.3f)"},{"type":"DELETE","lineNumber":556,"oldContent":"        lineTo(offsetX - size * 0.15f, offsetY - size * 0.2f)"},{"type":"INSERT","lineNumber":561,"content":"        close()"},{"type":"INSERT","lineNumber":562,"content":"    }"},{"type":"DELETE","lineNumber":561,"oldContent":"    "},{"type":"DELETE","lineNumber":563,"oldContent":"    }"}]},{"timestamp":1754319635662,"changes":[{"type":"DELETE","lineNumber":51,"oldContent":"        val arrowPosition = calculateArrowPosition("},{"type":"DELETE","lineNumber":52,"oldContent":"            landmark = bestMatch.landmark,"},{"type":"DELETE","lineNumber":53,"oldContent":"            screenPosition = bestMatch.screenPosition,"},{"type":"DELETE","lineNumber":54,"oldContent":"            screenWidth = screenWidth,"},{"type":"DELETE","lineNumber":55,"oldContent":"            screenHeight = screenHeight"},{"type":"DELETE","lineNumber":56,"oldContent":"        )"},{"type":"INSERT","lineNumber":51,"content":"        val arrowPosition = if (bestMatch.landmark != null) {"},{"type":"INSERT","lineNumber":52,"content":"            calculateArrowPosition("},{"type":"INSERT","lineNumber":53,"content":"                landmark = convertToFeatureLandmark(bestMatch.landmark!!),"},{"type":"INSERT","lineNumber":54,"content":"                screenPosition = bestMatch.screenPosition,"},{"type":"INSERT","lineNumber":55,"content":"                screenWidth = screenWidth,"},{"type":"INSERT","lineNumber":56,"content":"                screenHeight = screenHeight"},{"type":"INSERT","lineNumber":57,"content":"            )"},{"type":"INSERT","lineNumber":58,"content":"        } else {"},{"type":"INSERT","lineNumber":59,"content":"            PointF(screenWidth / 2, screenHeight / 2)"},{"type":"INSERT","lineNumber":60,"content":"        }"},{"type":"DELETE","lineNumber":59,"oldContent":"        val arrowDirection = calculateArrowDirection("},{"type":"DELETE","lineNumber":60,"oldContent":"            landmark = bestMatch.landmark,"},{"type":"DELETE","lineNumber":61,"oldContent":"            currentStep = currentStep,"},{"type":"DELETE","lineNumber":62,"oldContent":"            totalSteps = totalSteps"},{"type":"MODIFY","lineNumber":63,"content":"        val arrowDirection = if (bestMatch.landmark != null) {","oldContent":"        )"},{"type":"INSERT","lineNumber":64,"content":"            calculateArrowDirection("},{"type":"INSERT","lineNumber":65,"content":"                landmark = convertToFeatureLandmark(bestMatch.landmark!!),"},{"type":"INSERT","lineNumber":66,"content":"                currentStep = currentStep,"},{"type":"INSERT","lineNumber":67,"content":"                totalSteps = totalSteps"},{"type":"INSERT","lineNumber":68,"content":"            )"},{"type":"INSERT","lineNumber":69,"content":"        } else {"},{"type":"INSERT","lineNumber":70,"content":"            0f"},{"type":"INSERT","lineNumber":71,"content":"        }"},{"type":"DELETE","lineNumber":93,"oldContent":"    "},{"type":"INSERT","lineNumber":102,"content":"    "},{"type":"INSERT","lineNumber":119,"content":""},{"type":"DELETE","lineNumber":112,"oldContent":"/**"},{"type":"DELETE","lineNumber":197,"oldContent":") {"},{"type":"DELETE","lineNumber":199,"oldContent":"    val paint = Paint().apply {"},{"type":"INSERT","lineNumber":208,"content":") {"},{"type":"INSERT","lineNumber":209,"content":"    val paint = Paint().apply {"},{"type":"INSERT","lineNumber":252,"content":"    )"},{"type":"INSERT","lineNumber":253,"content":"    "},{"type":"DELETE","lineNumber":245,"oldContent":"    // Zeichne Hauptpfeil"},{"type":"DELETE","lineNumber":248,"oldContent":"    "},{"type":"DELETE","lineNumber":250,"oldContent":"    "},{"type":"INSERT","lineNumber":259,"content":"    "},{"type":"DELETE","lineNumber":269,"oldContent":"}"},{"type":"INSERT","lineNumber":278,"content":"}"},{"type":"DELETE","lineNumber":295,"oldContent":") {"},{"type":"INSERT","lineNumber":304,"content":") {"},{"type":"DELETE","lineNumber":306,"oldContent":"        }"},{"type":"INSERT","lineNumber":315,"content":"        }"},{"type":"DELETE","lineNumber":311,"oldContent":"        val arrowPosition = calculateArrowPosition("},{"type":"DELETE","lineNumber":312,"oldContent":"            landmark = bestMatch.landmark,"},{"type":"DELETE","lineNumber":313,"oldContent":"            screenWidth = screenWidth,"},{"type":"DELETE","lineNumber":314,"oldContent":"            screenHeight = screenHeight"},{"type":"DELETE","lineNumber":315,"oldContent":"            screenPosition = bestMatch.screenPosition,"},{"type":"DELETE","lineNumber":316,"oldContent":"        )"},{"type":"INSERT","lineNumber":319,"content":"        val arrowPosition = if (bestMatch.landmark != null) {"},{"type":"INSERT","lineNumber":320,"content":"            calculateArrowPosition("},{"type":"INSERT","lineNumber":321,"content":"                landmark = convertToFeatureLandmark(bestMatch.landmark!!),"},{"type":"INSERT","lineNumber":322,"content":"                screenPosition = bestMatch.screenPosition,"},{"type":"INSERT","lineNumber":323,"content":"                screenWidth = screenWidth,"},{"type":"INSERT","lineNumber":324,"content":"                screenHeight = screenHeight"},{"type":"INSERT","lineNumber":325,"content":"            )"},{"type":"INSERT","lineNumber":326,"content":"        } else {"},{"type":"INSERT","lineNumber":327,"content":"            PointF(screenWidth / 2, screenHeight / 2)"},{"type":"INSERT","lineNumber":328,"content":"        }"},{"type":"DELETE","lineNumber":318,"oldContent":"        val arrowDirection = calculateArrowDirection("},{"type":"DELETE","lineNumber":319,"oldContent":"            landmark = bestMatch.landmark,"},{"type":"DELETE","lineNumber":320,"oldContent":"            currentStep = currentStep,"},{"type":"DELETE","lineNumber":321,"oldContent":"            totalSteps = totalSteps"},{"type":"DELETE","lineNumber":322,"oldContent":"        )"},{"type":"INSERT","lineNumber":330,"content":"        val arrowDirection = if (bestMatch.landmark != null) {"},{"type":"INSERT","lineNumber":331,"content":"            calculateArrowDirection("},{"type":"INSERT","lineNumber":332,"content":"                landmark = convertToFeatureLandmark(bestMatch.landmark!!),"},{"type":"INSERT","lineNumber":333,"content":"                currentStep = currentStep,"},{"type":"INSERT","lineNumber":334,"content":"                totalSteps = totalSteps"},{"type":"INSERT","lineNumber":335,"content":"            )"},{"type":"INSERT","lineNumber":336,"content":"        } else {"},{"type":"INSERT","lineNumber":337,"content":"            0f"},{"type":"INSERT","lineNumber":338,"content":"        }"},{"type":"INSERT","lineNumber":353,"content":""},{"type":"INSERT","lineNumber":354,"content":"/**"},{"type":"DELETE","lineNumber":339,"oldContent":""},{"type":"DELETE","lineNumber":341,"oldContent":"/**"},{"type":"DELETE","lineNumber":343,"oldContent":"    confidence: Float,"},{"type":"INSERT","lineNumber":360,"content":"    confidence: Float,"},{"type":"DELETE","lineNumber":364,"oldContent":"    }"},{"type":"INSERT","lineNumber":381,"content":"    }"},{"type":"DELETE","lineNumber":434,"oldContent":"    confidence: Float,"},{"type":"DELETE","lineNumber":436,"oldContent":"    cameraRotation: Float"},{"type":"INSERT","lineNumber":452,"content":"    confidence: Float,"},{"type":"INSERT","lineNumber":453,"content":"    cameraRotation: Float"},{"type":"DELETE","lineNumber":452,"oldContent":"        landmark.name.contains(\"Aufzug\", ignoreCase = true) -> 0f    // Geradeaus"},{"type":"INSERT","lineNumber":469,"content":"        landmark.name.contains(\"Aufzug\", ignoreCase = true) -> 0f    // Geradeaus"},{"type":"DELETE","lineNumber":458,"oldContent":"    // Kompensiere Kamerabewegung für stabilere Orientierung"},{"type":"INSERT","lineNumber":475,"content":"    // Kompensiere Kamerabewegung für stabilere Orientierung"},{"type":"DELETE","lineNumber":557,"oldContent":"        lineTo(offsetX - size * 0.15f, offsetY - size * 0.2f)"},{"type":"INSERT","lineNumber":574,"content":"        lineTo(offsetX - size * 0.15f, offsetY - size * 0.2f)"},{"type":"DELETE","lineNumber":561,"oldContent":"    "},{"type":"DELETE","lineNumber":562,"oldContent":"    canvas.drawPath(arrowPath, paint)"},{"type":"INSERT","lineNumber":579,"content":"    "},{"type":"INSERT","lineNumber":580,"content":"    canvas.drawPath(arrowPath, paint)"}]},{"timestamp":1754319652814,"changes":[{"type":"MODIFY","lineNumber":39,"content":"    currentStep: Int = 1,","oldContent":"    modifier: Modifier = Modifier"},{"type":"MODIFY","lineNumber":43,"content":") {","oldContent":"    val bestMatch = matches.maxByOrNull { it.confidence }"},{"type":"INSERT","lineNumber":45,"content":"    // Nur den besten Match verwenden"},{"type":"INSERT","lineNumber":46,"content":"    val bestMatch = matches.maxByOrNull { it.confidence }"},{"type":"DELETE","lineNumber":49,"oldContent":"        val arrowPosition = calculateArrowPosition("},{"type":"DELETE","lineNumber":50,"oldContent":"            landmark = bestMatch.landmark,"},{"type":"DELETE","lineNumber":58,"oldContent":"        val arrowDirection = calculateArrowDirection(bestMatch.landmark)"},{"type":"MODIFY","lineNumber":61,"content":"        ","oldContent":"        "},{"type":"INSERT","lineNumber":62,"content":"        // Berechne die Richtung des Pfeils mit Navigationsdaten"},{"type":"DELETE","lineNumber":65,"oldContent":"        "},{"type":"DELETE","lineNumber":67,"oldContent":"        Box(modifier = modifier.fillMaxSize()) {"},{"type":"DELETE","lineNumber":69,"oldContent":"            Canvas(modifier = Modifier.fillMaxSize()) {"},{"type":"DELETE","lineNumber":71,"oldContent":"                draw3DArrow("},{"type":"DELETE","lineNumber":73,"oldContent":"                    position = arrowPosition,"},{"type":"DELETE","lineNumber":75,"oldContent":"    }"},{"type":"DELETE","lineNumber":77,"oldContent":"}"},{"type":"INSERT","lineNumber":72,"content":"        "},{"type":"INSERT","lineNumber":73,"content":"        Box(modifier = modifier.fillMaxSize()) {"},{"type":"INSERT","lineNumber":74,"content":"            Canvas(modifier = Modifier.fillMaxSize()) {"},{"type":"INSERT","lineNumber":75,"content":"                draw3DArrow("},{"type":"INSERT","lineNumber":76,"content":"                    position = arrowPosition,"},{"type":"INSERT","lineNumber":77,"content":"                    direction = arrowDirection,"},{"type":"INSERT","lineNumber":78,"content":"                    confidence = bestMatch.confidence,"},{"type":"INSERT","lineNumber":79,"content":"                    size = size"},{"type":"INSERT","lineNumber":80,"content":"                )"},{"type":"INSERT","lineNumber":81,"content":"            }"},{"type":"INSERT","lineNumber":82,"content":"        }"},{"type":"INSERT","lineNumber":83,"content":"    }"},{"type":"INSERT","lineNumber":84,"content":"}"},{"type":"INSERT","lineNumber":91,"content":"    screenPosition: android.graphics.PointF?,"},{"type":"DELETE","lineNumber":88,"oldContent":"    // Verwende die Position des Landmarks, um die Bildschirmposition zu berechnen"},{"type":"DELETE","lineNumber":89,"oldContent":"    // Dies ist eine vereinfachte Berechnung - in einer echten AR-App würde man"},{"type":"DELETE","lineNumber":90,"oldContent":"    // die Kamera-Matrix und die 3D-Position des Landmarks verwenden"},{"type":"DELETE","lineNumber":91,"oldContent":"    screenPosition: android.graphics.PointF?,"},{"type":"DELETE","lineNumber":92,"oldContent":"    "},{"type":"DELETE","lineNumber":93,"oldContent":"    val x = landmark.position.x.toFloat()"},{"type":"DELETE","lineNumber":94,"oldContent":"    val y = landmark.position.y.toFloat()"},{"type":"INSERT","lineNumber":102,"content":"    "},{"type":"DELETE","lineNumber":109,"oldContent":"    "},{"type":"INSERT","lineNumber":119,"content":""},{"type":"DELETE","lineNumber":122,"oldContent":"    size: androidx.compose.ui.geometry.Size"},{"type":"DELETE","lineNumber":123,"oldContent":") {"},{"type":"DELETE","lineNumber":124,"oldContent":"    val arrowColor = getArrowColor(confidence)"},{"type":"DELETE","lineNumber":125,"oldContent":"    drawIntoCanvas { canvas ->"},{"type":"DELETE","lineNumber":126,"oldContent":""},{"type":"DELETE","lineNumber":127,"oldContent":"        canvas.save()"},{"type":"DELETE","lineNumber":128,"oldContent":"        // Verschiebe zum Pfeil-Zentrum"},{"type":"DELETE","lineNumber":129,"oldContent":"        "},{"type":"INSERT","lineNumber":123,"content":"private fun calculateArrowDirection("},{"type":"INSERT","lineNumber":124,"content":"    landmark: com.example.arwalking.FeatureLandmark,"},{"type":"INSERT","lineNumber":125,"content":"    currentStep: Int = 1,"},{"type":"INSERT","lineNumber":126,"content":"    totalSteps: Int = 3"},{"type":"INSERT","lineNumber":127,"content":"): Float {"},{"type":"INSERT","lineNumber":128,"content":"    // Berechne Richtung basierend auf Landmark-Typ und Position"},{"type":"INSERT","lineNumber":129,"content":"    val baseAngle = when {"},{"type":"MODIFY","lineNumber":135,"content":"        ","oldContent":"/**"},{"type":"INSERT","lineNumber":208,"content":") {"},{"type":"INSERT","lineNumber":209,"content":"    val paint = Paint().apply {"},{"type":"DELETE","lineNumber":214,"oldContent":") {"},{"type":"INSERT","lineNumber":216,"content":"        this.color = Color.White.copy(alpha = 0.8f).toArgb()"},{"type":"INSERT","lineNumber":217,"content":"        isAntiAlias = true"},{"type":"INSERT","lineNumber":218,"content":"        style = Paint.Style.STROKE"},{"type":"INSERT","lineNumber":219,"content":"        strokeWidth = 3f"},{"type":"INSERT","lineNumber":220,"content":"    }"},{"type":"INSERT","lineNumber":221,"content":"    "},{"type":"INSERT","lineNumber":222,"content":"    // Hauptkörper des Pfeils (3D-Effekt durch mehrere Schichten)"},{"type":"INSERT","lineNumber":223,"content":"    val arrowPath = Path().apply {"},{"type":"INSERT","lineNumber":224,"content":"        // Pfeilspitze"},{"type":"INSERT","lineNumber":225,"content":"        moveTo(0f, -size * 0.5f)"},{"type":"INSERT","lineNumber":226,"content":"        lineTo(size * 0.3f, -size * 0.2f)"},{"type":"INSERT","lineNumber":227,"content":"        lineTo(size * 0.15f, -size * 0.2f)"},{"type":"INSERT","lineNumber":228,"content":"        "},{"type":"INSERT","lineNumber":229,"content":"        // Pfeilkörper"},{"type":"INSERT","lineNumber":230,"content":"        lineTo(size * 0.15f, size * 0.3f)"},{"type":"INSERT","lineNumber":231,"content":"        lineTo(-size * 0.15f, size * 0.3f)"},{"type":"INSERT","lineNumber":232,"content":"        lineTo(-size * 0.15f, -size * 0.2f)"},{"type":"INSERT","lineNumber":233,"content":"        lineTo(-size * 0.3f, -size * 0.2f)"},{"type":"INSERT","lineNumber":234,"content":"        "},{"type":"INSERT","lineNumber":235,"content":"        close()"},{"type":"INSERT","lineNumber":236,"content":"    }"},{"type":"INSERT","lineNumber":237,"content":"    "},{"type":"INSERT","lineNumber":238,"content":"    // Schatten-Effekt (3D-Tiefe)"},{"type":"INSERT","lineNumber":239,"content":"    val shadowPath = Path(arrowPath).apply {"},{"type":"INSERT","lineNumber":240,"content":"        offset(size * 0.05f, size * 0.05f)"},{"type":"INSERT","lineNumber":241,"content":"    }"},{"type":"INSERT","lineNumber":242,"content":"    "},{"type":"INSERT","lineNumber":243,"content":"    val shadowPaint = Paint().apply {"},{"type":"INSERT","lineNumber":244,"content":"        this.color = Color.Black.copy(alpha = 0.3f).toArgb()"},{"type":"INSERT","lineNumber":245,"content":"        isAntiAlias = true"},{"type":"INSERT","lineNumber":246,"content":"        style = Paint.Style.FILL"},{"type":"INSERT","lineNumber":247,"content":"    }"},{"type":"INSERT","lineNumber":248,"content":"    "},{"type":"DELETE","lineNumber":216,"oldContent":"    val paint = Paint().apply {"},{"type":"DELETE","lineNumber":217,"oldContent":"    canvas.drawPath(shadowPath, shadowPaint)"},{"type":"INSERT","lineNumber":250,"content":"    canvas.drawPath(shadowPath as androidx.compose.ui.graphics.Path,"},{"type":"INSERT","lineNumber":251,"content":"        shadowPaint as androidx.compose.ui.graphics.Paint"},{"type":"INSERT","lineNumber":252,"content":"    )"},{"type":"DELETE","lineNumber":220,"oldContent":"    canvas.drawPath(arrowPath, paint)"},{"type":"INSERT","lineNumber":255,"content":"    canvas.drawPath(arrowPath as androidx.compose.ui.graphics.Path, paint as androidx.compose.ui.graphics.Paint)"},{"type":"DELETE","lineNumber":223,"oldContent":"    canvas.drawPath(arrowPath, strokePaint)"},{"type":"INSERT","lineNumber":258,"content":"    canvas.drawPath(arrowPath, strokePaint as androidx.compose.ui.graphics.Paint)"},{"type":"DELETE","lineNumber":240,"oldContent":"    canvas.drawPath(highlightPath, highlightPaint)"},{"type":"INSERT","lineNumber":275,"content":"    canvas.drawPath(highlightPath as androidx.compose.ui.graphics.Path,"},{"type":"INSERT","lineNumber":276,"content":"        highlightPaint as androidx.compose.ui.graphics.Paint"},{"type":"INSERT","lineNumber":277,"content":"    )"},{"type":"DELETE","lineNumber":250,"oldContent":"    canvas.drawPath(shadowPath as androidx.compose.ui.graphics.Path,"},{"type":"DELETE","lineNumber":251,"oldContent":"        shadowPaint as androidx.compose.ui.graphics.Paint"},{"type":"INSERT","lineNumber":287,"content":"        confidence >= 0.7f -> Color(0xFFFFEB3B) // Gelb - Okay"},{"type":"INSERT","lineNumber":288,"content":"        else -> Color(0xFFFF9800) // Orange - Unsicher"},{"type":"DELETE","lineNumber":253,"oldContent":"    canvas.drawPath(arrowPath as androidx.compose.ui.graphics.Path, paint as androidx.compose.ui.graphics.Paint)"},{"type":"INSERT","lineNumber":290,"content":"}"},{"type":"DELETE","lineNumber":256,"oldContent":"    canvas.drawPath(arrowPath, strokePaint as androidx.compose.ui.graphics.Paint)"},{"type":"DELETE","lineNumber":257,"oldContent":"    )"},{"type":"INSERT","lineNumber":293,"content":" * Erweiterte 3D-Pfeil-Komponente mit Animation"},{"type":"INSERT","lineNumber":294,"content":" */"},{"type":"DELETE","lineNumber":259,"oldContent":"    "},{"type":"DELETE","lineNumber":260,"oldContent":"    val highlightPaint = Paint().apply {"},{"type":"INSERT","lineNumber":296,"content":"fun Animated3DArrowOverlay("},{"type":"DELETE","lineNumber":263,"oldContent":"        style = Paint.Style.FILL"},{"type":"INSERT","lineNumber":299,"content":"    screenWidth: Float,"},{"type":"INSERT","lineNumber":301,"content":"    currentStep: Int = 1,"},{"type":"INSERT","lineNumber":302,"content":"    totalSteps: Int = 3,"},{"type":"DELETE","lineNumber":266,"oldContent":"    "},{"type":"DELETE","lineNumber":275,"oldContent":"    canvas.drawPath(highlightPath as androidx.compose.ui.graphics.Path,"},{"type":"DELETE","lineNumber":276,"oldContent":"        highlightPaint as androidx.compose.ui.graphics.Paint"},{"type":"DELETE","lineNumber":277,"oldContent":"    )"},{"type":"INSERT","lineNumber":312,"content":"                animationProgress = (animationProgress + 0.02f) % 1f"},{"type":"INSERT","lineNumber":313,"content":"                kotlinx.coroutines.delay(16) // ~60 FPS"},{"type":"DELETE","lineNumber":283,"oldContent":"        val arrowPosition = calculateArrowPosition("},{"type":"DELETE","lineNumber":284,"oldContent":"            landmark = bestMatch.landmark,"},{"type":"DELETE","lineNumber":285,"oldContent":"}"},{"type":"DELETE","lineNumber":286,"oldContent":"            screenWidth = screenWidth,"},{"type":"DELETE","lineNumber":287,"oldContent":"            screenHeight = screenHeight"},{"type":"DELETE","lineNumber":288,"oldContent":"        )"},{"type":"DELETE","lineNumber":289,"oldContent":"        "},{"type":"DELETE","lineNumber":290,"oldContent":"        val arrowDirection = calculateArrowDirection(bestMatch.landmark)"},{"type":"DELETE","lineNumber":291,"oldContent":"        "},{"type":"DELETE","lineNumber":292,"oldContent":"        Box(modifier = modifier.fillMaxSize()) {"},{"type":"DELETE","lineNumber":293,"oldContent":"            Canvas(modifier = Modifier.fillMaxSize()) {"},{"type":"DELETE","lineNumber":294,"oldContent":"                drawAnimated3DArrow("},{"type":"DELETE","lineNumber":295,"oldContent":"                    position = arrowPosition,"},{"type":"DELETE","lineNumber":296,"oldContent":"                    direction = arrowDirection,"},{"type":"DELETE","lineNumber":297,"oldContent":"                    confidence = bestMatch.confidence,"},{"type":"DELETE","lineNumber":298,"oldContent":"                    animationProgress = animationProgress,"},{"type":"DELETE","lineNumber":299,"oldContent":"                    size = size"},{"type":"DELETE","lineNumber":300,"oldContent":"                )"},{"type":"DELETE","lineNumber":301,"oldContent":"    currentStep: Int = 1,"},{"type":"DELETE","lineNumber":302,"oldContent":"    totalSteps: Int = 3,"},{"type":"DELETE","lineNumber":303,"oldContent":"    modifier: Modifier = Modifier"},{"type":"DELETE","lineNumber":304,"oldContent":"    }"},{"type":"DELETE","lineNumber":305,"oldContent":"}"},{"type":"DELETE","lineNumber":306,"oldContent":""},{"type":"DELETE","lineNumber":307,"oldContent":"/**"},{"type":"DELETE","lineNumber":308,"oldContent":" * Zeichnet einen animierten 3D-Pfeil"},{"type":"DELETE","lineNumber":309,"oldContent":" */"},{"type":"DELETE","lineNumber":310,"oldContent":"private fun DrawScope.drawAnimated3DArrow("},{"type":"DELETE","lineNumber":311,"oldContent":") {"},{"type":"DELETE","lineNumber":312,"oldContent":"                animationProgress = (animationProgress + 0.02f) % 1f"},{"type":"DELETE","lineNumber":313,"oldContent":"                kotlinx.coroutines.delay(16) // ~60 FPS"},{"type":"DELETE","lineNumber":314,"oldContent":"            }"},{"type":"DELETE","lineNumber":315,"oldContent":"    size: androidx.compose.ui.geometry.Size"},{"type":"DELETE","lineNumber":316,"oldContent":") {"},{"type":"DELETE","lineNumber":317,"oldContent":"    val baseSize = 60.dp.toPx()"},{"type":"DELETE","lineNumber":318,"oldContent":"        }"},{"type":"DELETE","lineNumber":319,"oldContent":"    val hoverOffset = sin(animationProgress * 4 * PI).toFloat() * 5f"},{"type":"DELETE","lineNumber":325,"oldContent":"        "},{"type":"DELETE","lineNumber":327,"oldContent":"        Box(modifier = modifier.fillMaxSize()) {"},{"type":"DELETE","lineNumber":329,"oldContent":"            Canvas(modifier = Modifier.fillMaxSize()) {"},{"type":"DELETE","lineNumber":331,"oldContent":"    canvas.drawPath(arrowPath, paint)"},{"type":"DELETE","lineNumber":333,"oldContent":"    "},{"type":"INSERT","lineNumber":329,"content":"        "},{"type":"INSERT","lineNumber":330,"content":"        val arrowDirection = if (bestMatch.landmark != null) {"},{"type":"INSERT","lineNumber":331,"content":"            calculateArrowDirection("},{"type":"INSERT","lineNumber":332,"content":"                landmark = convertToFeatureLandmark(bestMatch.landmark!!),"},{"type":"INSERT","lineNumber":333,"content":"                currentStep = currentStep,"},{"type":"INSERT","lineNumber":334,"content":"                totalSteps = totalSteps"},{"type":"INSERT","lineNumber":335,"content":"            )"},{"type":"INSERT","lineNumber":336,"content":"        } else {"},{"type":"INSERT","lineNumber":337,"content":"            0f"},{"type":"INSERT","lineNumber":338,"content":"        }"},{"type":"INSERT","lineNumber":339,"content":"        "},{"type":"INSERT","lineNumber":340,"content":"        Box(modifier = modifier.fillMaxSize()) {"},{"type":"INSERT","lineNumber":341,"content":"            Canvas(modifier = Modifier.fillMaxSize()) {"},{"type":"INSERT","lineNumber":342,"content":"                drawAnimated3DArrow("},{"type":"INSERT","lineNumber":343,"content":"                    position = arrowPosition,"},{"type":"DELETE","lineNumber":337,"oldContent":"        val arrowDirection = if (bestMatch.landmark != null) {"},{"type":"DELETE","lineNumber":339,"oldContent":"            calculateArrowDirection("},{"type":"DELETE","lineNumber":341,"oldContent":"                landmark = convertToFeatureLandmark(bestMatch.landmark!!),"},{"type":"DELETE","lineNumber":343,"oldContent":"                currentStep = currentStep,"},{"type":"DELETE","lineNumber":345,"oldContent":"                totalSteps = totalSteps"},{"type":"DELETE","lineNumber":347,"oldContent":"            )"},{"type":"DELETE","lineNumber":349,"oldContent":"        } else {"},{"type":"DELETE","lineNumber":351,"oldContent":"            0f"},{"type":"INSERT","lineNumber":353,"content":""},{"type":"INSERT","lineNumber":354,"content":"/**"},{"type":"DELETE","lineNumber":353,"oldContent":"        }"},{"type":"DELETE","lineNumber":358,"oldContent":"        // Pfeilkörper"},{"type":"DELETE","lineNumber":359,"oldContent":"        "},{"type":"DELETE","lineNumber":360,"oldContent":"        lineTo(offsetX + size * 0.15f, offsetY - size * 0.2f)"},{"type":"DELETE","lineNumber":361,"oldContent":"        lineTo(offsetX + size * 0.3f, offsetY - size * 0.2f)"},{"type":"DELETE","lineNumber":362,"oldContent":"        moveTo(offsetX, offsetY - size * 0.5f)"},{"type":"DELETE","lineNumber":363,"oldContent":"        // Pfeilspitze"},{"type":"DELETE","lineNumber":364,"oldContent":"    val arrowPath = Path().apply {"},{"type":"DELETE","lineNumber":365,"oldContent":"    "},{"type":"DELETE","lineNumber":366,"oldContent":""},{"type":"DELETE","lineNumber":367,"oldContent":"    }"},{"type":"DELETE","lineNumber":368,"oldContent":"/**"},{"type":"DELETE","lineNumber":369,"oldContent":"        style = Paint.Style.FILL"},{"type":"DELETE","lineNumber":370,"oldContent":"        isAntiAlias = true"},{"type":"DELETE","lineNumber":371,"oldContent":"        this.color = color.toArgb()"},{"type":"DELETE","lineNumber":372,"oldContent":"    val paint = Paint().apply {"},{"type":"DELETE","lineNumber":373,"oldContent":") {"},{"type":"DELETE","lineNumber":374,"oldContent":"    offsetY: Float = 0f"},{"type":"DELETE","lineNumber":376,"oldContent":"    offsetX: Float = 0f,"},{"type":"DELETE","lineNumber":377,"oldContent":"    color: Color,"},{"type":"INSERT","lineNumber":361,"content":"    animationProgress: Float,"},{"type":"INSERT","lineNumber":362,"content":"    size: androidx.compose.ui.geometry.Size"},{"type":"INSERT","lineNumber":363,"content":") {"},{"type":"INSERT","lineNumber":364,"content":"    val baseSize = 60.dp.toPx()"},{"type":"INSERT","lineNumber":365,"content":"    val pulseScale = 1f + sin(animationProgress * 2 * PI).toFloat() * 0.1f"},{"type":"INSERT","lineNumber":366,"content":"    val arrowSize = baseSize * confidence * pulseScale"},{"type":"INSERT","lineNumber":367,"content":"    val arrowColor = getArrowColor(confidence)"},{"type":"INSERT","lineNumber":368,"content":"    "},{"type":"INSERT","lineNumber":369,"content":"    // Leichtes Schweben des Pfeils"},{"type":"INSERT","lineNumber":370,"content":"    val hoverOffset = sin(animationProgress * 4 * PI).toFloat() * 5f"},{"type":"INSERT","lineNumber":371,"content":"    val adjustedPosition = position.copy(y = position.y + hoverOffset)"},{"type":"INSERT","lineNumber":372,"content":"    "},{"type":"INSERT","lineNumber":373,"content":"    drawIntoCanvas { canvas ->"},{"type":"INSERT","lineNumber":374,"content":"        canvas.save()"},{"type":"INSERT","lineNumber":375,"content":"        canvas.translate(adjustedPosition.x, adjustedPosition.y)"},{"type":"INSERT","lineNumber":376,"content":"        canvas.rotate(direction + animationProgress * 2f) // Leichte Rotation"},{"type":"INSERT","lineNumber":377,"content":"        "},{"type":"MODIFY","lineNumber":381,"content":"    }","oldContent":" * Zeichnet eine einzelne Pfeil-Schicht"},{"type":"INSERT","lineNumber":382,"content":"}"},{"type":"DELETE","lineNumber":396,"oldContent":"    }"},{"type":"INSERT","lineNumber":452,"content":"    confidence: Float,"},{"type":"INSERT","lineNumber":453,"content":"    cameraRotation: Float"},{"type":"DELETE","lineNumber":466,"oldContent":"    confidence: Float,"},{"type":"DELETE","lineNumber":467,"oldContent":"    cameraRotation: Float"},{"type":"INSERT","lineNumber":469,"content":"        landmark.name.contains(\"Aufzug\", ignoreCase = true) -> 0f    // Geradeaus"},{"type":"INSERT","lineNumber":475,"content":"    // Kompensiere Kamerabewegung für stabilere Orientierung"},{"type":"DELETE","lineNumber":483,"oldContent":"        landmark.name.contains(\"Aufzug\", ignoreCase = true) -> 0f    // Geradeaus"},{"type":"DELETE","lineNumber":490,"oldContent":"    // Kompensiere Kamerabewegung für stabilere Orientierung"},{"type":"MODIFY","lineNumber":555,"content":"    color: Color,","oldContent":"    canvas.drawPath(arrowPath, paint)"},{"type":"INSERT","lineNumber":556,"content":"    offsetX: Float = 0f,"},{"type":"INSERT","lineNumber":557,"content":"    offsetY: Float = 0f"},{"type":"INSERT","lineNumber":558,"content":") {"},{"type":"INSERT","lineNumber":559,"content":"    val paint = Paint().apply {"},{"type":"INSERT","lineNumber":560,"content":"        this.color = color.toArgb()"},{"type":"INSERT","lineNumber":561,"content":"        isAntiAlias = true"},{"type":"INSERT","lineNumber":562,"content":"        style = Paint.Style.FILL"},{"type":"INSERT","lineNumber":563,"content":"    }"},{"type":"DELETE","lineNumber":557,"oldContent":"        close()"},{"type":"INSERT","lineNumber":565,"content":"    val arrowPath = Path().apply {"},{"type":"INSERT","lineNumber":566,"content":"        // Pfeilspitze"},{"type":"INSERT","lineNumber":567,"content":"        moveTo(offsetX, offsetY - size * 0.5f)"},{"type":"INSERT","lineNumber":568,"content":"        lineTo(offsetX + size * 0.3f, offsetY - size * 0.2f)"},{"type":"INSERT","lineNumber":569,"content":"        lineTo(offsetX + size * 0.15f, offsetY - size * 0.2f)"},{"type":"DELETE","lineNumber":559,"oldContent":"        lineTo(offsetX - size * 0.3f, offsetY - size * 0.2f)"},{"type":"INSERT","lineNumber":571,"content":"        // Pfeilkörper"},{"type":"INSERT","lineNumber":572,"content":"        lineTo(offsetX + size * 0.15f, offsetY + size * 0.3f)"},{"type":"INSERT","lineNumber":573,"content":"        lineTo(offsetX - size * 0.15f, offsetY + size * 0.3f)"},{"type":"DELETE","lineNumber":562,"oldContent":"}"},{"type":"DELETE","lineNumber":563,"oldContent":"    canvas.drawPath(arrowPath, paint)"},{"type":"DELETE","lineNumber":564,"oldContent":"    "},{"type":"DELETE","lineNumber":565,"oldContent":"    }"},{"type":"DELETE","lineNumber":566,"oldContent":"        close()"},{"type":"DELETE","lineNumber":567,"oldContent":"        lineTo(offsetX - size * 0.15f, offsetY + size * 0.3f)"},{"type":"DELETE","lineNumber":568,"oldContent":"        lineTo(offsetX + size * 0.15f, offsetY + size * 0.3f)"},{"type":"DELETE","lineNumber":569,"oldContent":"}"},{"type":"DELETE","lineNumber":570,"oldContent":"    canvas.drawPath(arrowPath, paint)"},{"type":"INSERT","lineNumber":577,"content":"        close()"},{"type":"DELETE","lineNumber":573,"oldContent":"    canvas.drawPath(arrowPath, paint)"},{"type":"DELETE","lineNumber":575,"oldContent":"        lineTo(offsetX - size * 0.15f, offsetY - size * 0.2f)"},{"type":"INSERT","lineNumber":580,"content":"    canvas.drawPath(arrowPath, paint)"},{"type":"INSERT","lineNumber":581,"content":"}"},{"type":"INSERT","lineNumber":582,"content":""},{"type":"INSERT","lineNumber":583,"content":"/**"},{"type":"INSERT","lineNumber":584,"content":" * Konvertiert ProcessedLandmark zu FeatureLandmark"},{"type":"INSERT","lineNumber":585,"content":" */"},{"type":"INSERT","lineNumber":586,"content":"private fun convertToFeatureLandmark(processedLandmark: ProcessedLandmark): FeatureLandmark {"},{"type":"INSERT","lineNumber":587,"content":"    return FeatureLandmark("},{"type":"INSERT","lineNumber":588,"content":"        id = processedLandmark.id,"},{"type":"INSERT","lineNumber":589,"content":"        name = processedLandmark.name,"},{"type":"INSERT","lineNumber":590,"content":"        description = \"Processed landmark\","},{"type":"INSERT","lineNumber":591,"content":"        position = Position(0.0, 0.0, 0.0),"},{"type":"INSERT","lineNumber":592,"content":"        imageUrl = \"\","},{"type":"INSERT","lineNumber":593,"content":"        confidence = 1.0f"},{"type":"INSERT","lineNumber":594,"content":"    )"},{"type":"INSERT","lineNumber":595,"content":"}"}]},{"timestamp":1754319678937,"changes":[{"type":"MODIFY","lineNumber":47,"content":"    ","oldContent":"    "},{"type":"INSERT","lineNumber":59,"content":"            PointF(screenWidth / 2, screenHeight / 2)"},{"type":"INSERT","lineNumber":60,"content":"        }"},{"type":"DELETE","lineNumber":60,"oldContent":"        "},{"type":"DELETE","lineNumber":62,"oldContent":"        }"},{"type":"DELETE","lineNumber":68,"oldContent":"        "},{"type":"INSERT","lineNumber":69,"content":"        } else {"},{"type":"INSERT","lineNumber":70,"content":"            0f"},{"type":"INSERT","lineNumber":71,"content":"        }"},{"type":"INSERT","lineNumber":72,"content":"        "},{"type":"DELETE","lineNumber":72,"oldContent":"        } else {"},{"type":"DELETE","lineNumber":75,"oldContent":"            0f"},{"type":"DELETE","lineNumber":78,"oldContent":"        }"},{"type":"DELETE","lineNumber":80,"oldContent":""},{"type":"DELETE","lineNumber":82,"oldContent":"/**"},{"type":"DELETE","lineNumber":84,"oldContent":" * Berechnet die Position des 3D-Pfeils auf dem Bildschirm"},{"type":"DELETE","lineNumber":86,"oldContent":" */"},{"type":"DELETE","lineNumber":88,"oldContent":"private fun calculateArrowPosition("},{"type":"INSERT","lineNumber":85,"content":""},{"type":"INSERT","lineNumber":86,"content":"/**"},{"type":"INSERT","lineNumber":87,"content":" * Berechnet die Position des 3D-Pfeils auf dem Bildschirm"},{"type":"INSERT","lineNumber":88,"content":" */"},{"type":"INSERT","lineNumber":89,"content":"private fun calculateArrowPosition("},{"type":"INSERT","lineNumber":91,"content":"    screenPosition: android.graphics.PointF?,"},{"type":"DELETE","lineNumber":94,"oldContent":"    screenPosition: android.graphics.PointF?,"},{"type":"DELETE","lineNumber":104,"oldContent":""},{"type":"DELETE","lineNumber":105,"oldContent":" * Berechnet die Richtung des Pfeils basierend auf der Navigation"},{"type":"INSERT","lineNumber":104,"content":"    // Dies ist eine vereinfachte Berechnung - in einer echten AR-App würde man"},{"type":"INSERT","lineNumber":105,"content":"    // die Kamera-Matrix und die 3D-Position des Landmarks verwenden"},{"type":"DELETE","lineNumber":182,"oldContent":"    val strokePaint = Paint().apply {"},{"type":"DELETE","lineNumber":183,"oldContent":"        isAntiAlias = true"},{"type":"DELETE","lineNumber":184,"oldContent":"        style = Paint.Style.STROKE"},{"type":"DELETE","lineNumber":185,"oldContent":"    }"},{"type":"DELETE","lineNumber":186,"oldContent":"    "},{"type":"DELETE","lineNumber":187,"oldContent":"    val arrowPath = Path().apply {"},{"type":"DELETE","lineNumber":188,"oldContent":"        // Pfeilspitze"},{"type":"DELETE","lineNumber":189,"oldContent":"        lineTo(size * 0.3f, -size * 0.2f)"},{"type":"DELETE","lineNumber":190,"oldContent":"        lineTo(size * 0.15f, -size * 0.2f)"},{"type":"DELETE","lineNumber":191,"oldContent":"        // Pfeilkörper"},{"type":"DELETE","lineNumber":192,"oldContent":"        lineTo(size * 0.15f, size * 0.3f)"},{"type":"DELETE","lineNumber":193,"oldContent":"        lineTo(-size * 0.15f, size * 0.3f)"},{"type":"DELETE","lineNumber":194,"oldContent":"        lineTo(-size * 0.3f, -size * 0.2f)"},{"type":"INSERT","lineNumber":182,"content":"    drawIntoCanvas { canvas ->"},{"type":"INSERT","lineNumber":183,"content":"        // Speichere den aktuellen Zustand"},{"type":"INSERT","lineNumber":184,"content":"        canvas.save()"},{"type":"INSERT","lineNumber":186,"content":"        // Verschiebe zum Pfeil-Zentrum"},{"type":"INSERT","lineNumber":187,"content":"        canvas.translate(position.x, position.y)"},{"type":"INSERT","lineNumber":188,"content":"        "},{"type":"INSERT","lineNumber":189,"content":"        // Rotiere basierend auf der Richtung"},{"type":"INSERT","lineNumber":190,"content":"        canvas.rotate(direction)"},{"type":"INSERT","lineNumber":191,"content":"        "},{"type":"INSERT","lineNumber":192,"content":"        // Zeichne den 3D-Pfeil"},{"type":"INSERT","lineNumber":193,"content":"        draw3DArrowShape(canvas as Canvas, arrowSize, arrowColor, confidence)"},{"type":"INSERT","lineNumber":194,"content":"        "},{"type":"INSERT","lineNumber":195,"content":"        // Stelle den ursprünglichen Zustand wieder her"},{"type":"INSERT","lineNumber":196,"content":"        canvas.restore()"},{"type":"DELETE","lineNumber":197,"oldContent":"    // Schatten-Effekt (3D-Tiefe)"},{"type":"MODIFY","lineNumber":198,"content":"}","oldContent":"        offset(size * 0.05f, size * 0.05f)"},{"type":"MODIFY","lineNumber":210,"content":"        this.color = color.toArgb()","oldContent":"        this.color = color.toArgb()"},{"type":"DELETE","lineNumber":216,"oldContent":"    // Zeichne Schatten"},{"type":"DELETE","lineNumber":220,"oldContent":"    "},{"type":"DELETE","lineNumber":222,"oldContent":"    // Zeichne Hauptpfeil"},{"type":"DELETE","lineNumber":225,"oldContent":"    "},{"type":"DELETE","lineNumber":227,"oldContent":"    // Zeichne Umriss"},{"type":"DELETE","lineNumber":230,"oldContent":"    "},{"type":"DELETE","lineNumber":232,"oldContent":"    // Zeichne Glanz-Effekt für 3D-Look"},{"type":"DELETE","lineNumber":234,"oldContent":"    val highlightPaint = Paint().apply {"},{"type":"DELETE","lineNumber":236,"oldContent":"        this.color = Color.White.copy(alpha = 0.4f * confidence).toArgb()"},{"type":"DELETE","lineNumber":238,"oldContent":"        isAntiAlias = true"},{"type":"DELETE","lineNumber":240,"oldContent":"        style = Paint.Style.FILL"},{"type":"DELETE","lineNumber":242,"oldContent":"    }"},{"type":"DELETE","lineNumber":244,"oldContent":"    "},{"type":"DELETE","lineNumber":246,"oldContent":"    val highlightPath = Path().apply {"},{"type":"DELETE","lineNumber":248,"oldContent":"        moveTo(-size * 0.05f, -size * 0.4f)"},{"type":"DELETE","lineNumber":250,"oldContent":"        lineTo(size * 0.05f, -size * 0.3f)"},{"type":"DELETE","lineNumber":252,"oldContent":"        lineTo(size * 0.05f, -size * 0.1f)"},{"type":"DELETE","lineNumber":254,"oldContent":"        lineTo(-size * 0.05f, -size * 0.2f)"},{"type":"DELETE","lineNumber":256,"oldContent":"        close()"},{"type":"DELETE","lineNumber":258,"oldContent":"    }"},{"type":"DELETE","lineNumber":260,"oldContent":"    "},{"type":"DELETE","lineNumber":263,"oldContent":"}"},{"type":"DELETE","lineNumber":265,"oldContent":""},{"type":"DELETE","lineNumber":267,"oldContent":"/**"},{"type":"DELETE","lineNumber":269,"oldContent":" * Bestimmt die Farbe des Pfeils basierend auf der Confidence"},{"type":"DELETE","lineNumber":271,"oldContent":" */"},{"type":"DELETE","lineNumber":273,"oldContent":"private fun getArrowColor(confidence: Float): Color {"},{"type":"DELETE","lineNumber":275,"oldContent":"    return when {"},{"type":"DELETE","lineNumber":277,"oldContent":"        confidence >= 0.9f -> Color(0xFF4CAF50) // Grün - Sehr sicher"},{"type":"DELETE","lineNumber":278,"oldContent":"        confidence >= 0.8f -> Color(0xFF8BC34A) // Hellgrün - Sicher"},{"type":"INSERT","lineNumber":249,"content":"    // Zeichne Schatten"},{"type":"INSERT","lineNumber":253,"content":"    "},{"type":"INSERT","lineNumber":254,"content":"    // Zeichne Hauptpfeil"},{"type":"INSERT","lineNumber":255,"content":"    canvas.drawPath(arrowPath as androidx.compose.ui.graphics.Path, paint as androidx.compose.ui.graphics.Paint)"},{"type":"INSERT","lineNumber":256,"content":"    "},{"type":"INSERT","lineNumber":257,"content":"    // Zeichne Umriss"},{"type":"INSERT","lineNumber":258,"content":"    canvas.drawPath(arrowPath, strokePaint as androidx.compose.ui.graphics.Paint)"},{"type":"INSERT","lineNumber":259,"content":"    "},{"type":"INSERT","lineNumber":260,"content":"    // Zeichne Glanz-Effekt für 3D-Look"},{"type":"INSERT","lineNumber":261,"content":"    val highlightPaint = Paint().apply {"},{"type":"INSERT","lineNumber":262,"content":"        this.color = Color.White.copy(alpha = 0.4f * confidence).toArgb()"},{"type":"INSERT","lineNumber":263,"content":"        isAntiAlias = true"},{"type":"INSERT","lineNumber":264,"content":"        style = Paint.Style.FILL"},{"type":"INSERT","lineNumber":266,"content":"    "},{"type":"INSERT","lineNumber":267,"content":"    val highlightPath = Path().apply {"},{"type":"INSERT","lineNumber":268,"content":"        moveTo(-size * 0.05f, -size * 0.4f)"},{"type":"INSERT","lineNumber":269,"content":"        lineTo(size * 0.05f, -size * 0.3f)"},{"type":"INSERT","lineNumber":270,"content":"        lineTo(size * 0.05f, -size * 0.1f)"},{"type":"INSERT","lineNumber":271,"content":"        lineTo(-size * 0.05f, -size * 0.2f)"},{"type":"INSERT","lineNumber":272,"content":"        close()"},{"type":"INSERT","lineNumber":273,"content":"    }"},{"type":"INSERT","lineNumber":274,"content":"    "},{"type":"INSERT","lineNumber":275,"content":"    canvas.drawPath(highlightPath as androidx.compose.ui.graphics.Path,"},{"type":"INSERT","lineNumber":276,"content":"        highlightPaint as androidx.compose.ui.graphics.Paint"},{"type":"INSERT","lineNumber":277,"content":"    )"},{"type":"INSERT","lineNumber":278,"content":"}"},{"type":"DELETE","lineNumber":284,"oldContent":"    canvas.drawPath(arrowPath as androidx.compose.ui.graphics.Path, paint as androidx.compose.ui.graphics.Paint)"},{"type":"DELETE","lineNumber":286,"oldContent":"    canvas.drawPath(arrowPath, strokePaint as androidx.compose.ui.graphics.Paint)"},{"type":"INSERT","lineNumber":281,"content":" * Bestimmt die Farbe des Pfeils basierend auf der Confidence"},{"type":"INSERT","lineNumber":282,"content":" */"},{"type":"INSERT","lineNumber":283,"content":"private fun getArrowColor(confidence: Float): Color {"},{"type":"INSERT","lineNumber":284,"content":"    return when {"},{"type":"INSERT","lineNumber":285,"content":"        confidence >= 0.9f -> Color(0xFF4CAF50) // Grün - Sehr sicher"},{"type":"INSERT","lineNumber":286,"content":"        confidence >= 0.8f -> Color(0xFF8BC34A) // Hellgrün - Sicher"},{"type":"INSERT","lineNumber":287,"content":"        confidence >= 0.7f -> Color(0xFFFFEB3B) // Gelb - Okay"},{"type":"INSERT","lineNumber":288,"content":"        else -> Color(0xFFFF9800) // Orange - Unsicher"},{"type":"INSERT","lineNumber":289,"content":"    }"},{"type":"INSERT","lineNumber":290,"content":"}"},{"type":"INSERT","lineNumber":291,"content":""},{"type":"INSERT","lineNumber":292,"content":"/**"},{"type":"INSERT","lineNumber":293,"content":" * Erweiterte 3D-Pfeil-Komponente mit Animation"},{"type":"INSERT","lineNumber":294,"content":" */"},{"type":"INSERT","lineNumber":296,"content":"fun Animated3DArrowOverlay("},{"type":"INSERT","lineNumber":299,"content":"    screenWidth: Float,"},{"type":"INSERT","lineNumber":301,"content":"    currentStep: Int = 1,"},{"type":"INSERT","lineNumber":302,"content":"    totalSteps: Int = 3,"},{"type":"DELETE","lineNumber":300,"oldContent":"    canvas.drawPath(highlightPath as androidx.compose.ui.graphics.Path,"},{"type":"DELETE","lineNumber":301,"oldContent":"        highlightPaint as androidx.compose.ui.graphics.Paint"},{"type":"DELETE","lineNumber":302,"oldContent":"    )"},{"type":"INSERT","lineNumber":312,"content":"                animationProgress = (animationProgress + 0.02f) % 1f"},{"type":"INSERT","lineNumber":313,"content":"                kotlinx.coroutines.delay(16) // ~60 FPS"},{"type":"DELETE","lineNumber":308,"oldContent":"        confidence >= 0.7f -> Color(0xFFFFEB3B) // Gelb - Okay"},{"type":"DELETE","lineNumber":309,"oldContent":"        else -> Color(0xFFFF9800) // Orange - Unsicher"},{"type":"DELETE","lineNumber":310,"oldContent":"}"},{"type":"DELETE","lineNumber":311,"oldContent":" * Erweiterte 3D-Pfeil-Komponente mit Animation"},{"type":"DELETE","lineNumber":312,"oldContent":" */"},{"type":"DELETE","lineNumber":313,"oldContent":"fun Animated3DArrowOverlay("},{"type":"DELETE","lineNumber":314,"oldContent":"    screenWidth: Float,"},{"type":"DELETE","lineNumber":315,"oldContent":"    currentStep: Int = 1,"},{"type":"DELETE","lineNumber":316,"oldContent":"    totalSteps: Int = 3,"},{"type":"DELETE","lineNumber":317,"oldContent":"                animationProgress = (animationProgress + 0.02f) % 1f"},{"type":"DELETE","lineNumber":318,"oldContent":"                kotlinx.coroutines.delay(16) // ~60 FPS"},{"type":"INSERT","lineNumber":326,"content":"        } else {"},{"type":"INSERT","lineNumber":327,"content":"            PointF(screenWidth / 2, screenHeight / 2)"},{"type":"INSERT","lineNumber":328,"content":"        }"},{"type":"DELETE","lineNumber":328,"oldContent":"        } else {"},{"type":"DELETE","lineNumber":331,"oldContent":"            PointF(screenWidth / 2, screenHeight / 2)"},{"type":"DELETE","lineNumber":334,"oldContent":"        }"},{"type":"DELETE","lineNumber":336,"oldContent":"                    direction = arrowDirection,"},{"type":"DELETE","lineNumber":338,"oldContent":"                    confidence = bestMatch.confidence,"},{"type":"DELETE","lineNumber":341,"oldContent":"                    animationProgress = animationProgress,"},{"type":"DELETE","lineNumber":344,"oldContent":"                    size = size"},{"type":"DELETE","lineNumber":347,"oldContent":"                )"},{"type":"INSERT","lineNumber":344,"content":"                    direction = arrowDirection,"},{"type":"INSERT","lineNumber":345,"content":"                    confidence = bestMatch.confidence,"},{"type":"INSERT","lineNumber":346,"content":"                    animationProgress = animationProgress,"},{"type":"INSERT","lineNumber":347,"content":"                    size = size"},{"type":"INSERT","lineNumber":348,"content":"                )"},{"type":"DELETE","lineNumber":353,"oldContent":" * Zeichnet einen animierten 3D-Pfeil"},{"type":"INSERT","lineNumber":355,"content":" * Zeichnet einen animierten 3D-Pfeil"},{"type":"INSERT","lineNumber":360,"content":"    confidence: Float,"},{"type":"DELETE","lineNumber":375,"oldContent":"    confidence: Float,"},{"type":"MODIFY","lineNumber":454,"content":"): Float {","oldContent":"): Float {"},{"type":"MODIFY","lineNumber":476,"content":"    val stabilizedDirection = baseDirection - cameraRotation","oldContent":"    val stabilizedDirection = baseDirection - cameraRotation"},{"type":"MODIFY","lineNumber":554,"content":"    size: Float,","oldContent":"    canvas.drawPath(arrowPath, paint)"},{"type":"DELETE","lineNumber":557,"oldContent":"        close()"},{"type":"DELETE","lineNumber":560,"oldContent":"        lineTo(offsetX - size * 0.15f, offsetY - size * 0.2f)"},{"type":"DELETE","lineNumber":563,"oldContent":"}"},{"type":"DELETE","lineNumber":565,"oldContent":"    canvas.drawPath(arrowPath, paint)"},{"type":"INSERT","lineNumber":564,"content":"    "},{"type":"INSERT","lineNumber":570,"content":"        "},{"type":"DELETE","lineNumber":574,"oldContent":"        close()"},{"type":"DELETE","lineNumber":577,"oldContent":"        lineTo(offsetX - size * 0.15f, offsetY + size * 0.3f)"},{"type":"DELETE","lineNumber":579,"oldContent":"    )"},{"type":"INSERT","lineNumber":575,"content":"        lineTo(offsetX - size * 0.3f, offsetY - size * 0.2f)"},{"type":"INSERT","lineNumber":576,"content":"        "},{"type":"DELETE","lineNumber":581,"oldContent":"        confidence = 1.0f"},{"type":"DELETE","lineNumber":582,"oldContent":"        imageUrl = \"\","},{"type":"DELETE","lineNumber":583,"oldContent":"        position = Position(0.0, 0.0, 0.0),"},{"type":"INSERT","lineNumber":578,"content":"    }"},{"type":"INSERT","lineNumber":579,"content":"    "},{"type":"DELETE","lineNumber":585,"oldContent":"        description = \"Processed landmark\","},{"type":"DELETE","lineNumber":587,"oldContent":"        name = processedLandmark.name,"},{"type":"DELETE","lineNumber":589,"oldContent":"        id = processedLandmark.id,"},{"type":"DELETE","lineNumber":591,"oldContent":"    return FeatureLandmark("},{"type":"DELETE","lineNumber":593,"oldContent":"private fun convertToFeatureLandmark(processedLandmark: ProcessedLandmark): FeatureLandmark {"},{"type":"INSERT","lineNumber":586,"content":"private fun convertToFeatureLandmark(processedLandmark: com.example.arwalking.ProcessedLandmark): com.example.arwalking.FeatureLandmark {"},{"type":"INSERT","lineNumber":587,"content":"    return com.example.arwalking.FeatureLandmark("},{"type":"INSERT","lineNumber":588,"content":"        id = processedLandmark.id,"},{"type":"INSERT","lineNumber":589,"content":"        name = processedLandmark.name,"},{"type":"INSERT","lineNumber":590,"content":"        description = \"Processed landmark\","},{"type":"INSERT","lineNumber":591,"content":"        position = com.example.arwalking.Position(0.0, 0.0, 0.0),"},{"type":"INSERT","lineNumber":592,"content":"        imageUrl = \"\","},{"type":"INSERT","lineNumber":593,"content":"        confidence = 1.0f"},{"type":"INSERT","lineNumber":594,"content":"    )"},{"type":"INSERT","lineNumber":595,"content":"}"}]},{"timestamp":1754319697077,"changes":[{"type":"MODIFY","lineNumber":2,"content":"import android.content.Context","oldContent":"import android.graphics.Canvas"},{"type":"INSERT","lineNumber":3,"content":"import android.graphics.Paint"},{"type":"DELETE","lineNumber":6,"oldContent":"import androidx.compose.foundation.Canvas"},{"type":"INSERT","lineNumber":8,"content":"import androidx.compose.foundation.layout.Box"},{"type":"DELETE","lineNumber":19,"oldContent":"import androidx.compose.ui.platform.LocalDensity"},{"type":"INSERT","lineNumber":21,"content":"import androidx.compose.ui.platform.LocalDensity"},{"type":"DELETE","lineNumber":22,"oldContent":"import kotlin.math.*"},{"type":"MODIFY","lineNumber":23,"content":"import com.example.arwalking.FeatureMatchResult","oldContent":""},{"type":"INSERT","lineNumber":26,"content":"import kotlin.math.*"},{"type":"INSERT","lineNumber":27,"content":""},{"type":"DELETE","lineNumber":27,"oldContent":" * 3D-Pfeil Overlay für AR-Navigation"},{"type":"DELETE","lineNumber":28,"oldContent":" * Zeigt einen 3D-Pfeil an, der auf erkannte Landmarks zeigt"},{"type":"MODIFY","lineNumber":30,"content":" * Zeigt einen 3D-Pfeil an, der auf erkannte Landmarks zeigt","oldContent":"@Composable"},{"type":"INSERT","lineNumber":32,"content":" */"},{"type":"INSERT","lineNumber":33,"content":"@Composable"},{"type":"DELETE","lineNumber":37,"oldContent":"    modifier: Modifier = Modifier"},{"type":"DELETE","lineNumber":38,"oldContent":") {"},{"type":"MODIFY","lineNumber":40,"content":"    totalSteps: Int = 3,","oldContent":"    "},{"type":"MODIFY","lineNumber":46,"content":"    val bestMatch = matches.maxByOrNull { it.confidence }","oldContent":"        "},{"type":"INSERT","lineNumber":48,"content":"    if (isFeatureMappingEnabled && bestMatch != null && bestMatch.confidence >= 0.7f) {"},{"type":"INSERT","lineNumber":49,"content":"        "},{"type":"DELETE","lineNumber":49,"oldContent":"        val arrowPosition = calculateArrowPosition("},{"type":"DELETE","lineNumber":50,"oldContent":"            landmark = bestMatch.landmark,"},{"type":"DELETE","lineNumber":59,"oldContent":"            PointF(screenWidth / 2, screenHeight / 2)"},{"type":"DELETE","lineNumber":60,"oldContent":"            Canvas(modifier = Modifier.fillMaxSize()) {"},{"type":"INSERT","lineNumber":59,"content":"            Offset(screenWidth / 2, screenHeight / 2)"},{"type":"INSERT","lineNumber":61,"content":"        "},{"type":"MODIFY","lineNumber":69,"content":"        } else {","oldContent":"        } else {"},{"type":"DELETE","lineNumber":71,"oldContent":"        Box(modifier = modifier.fillMaxSize()) {"},{"type":"MODIFY","lineNumber":73,"content":"        Box(modifier = modifier.fillMaxSize()) {","oldContent":"            Canvas(modifier = Modifier.fillMaxSize()) {"},{"type":"INSERT","lineNumber":74,"content":"            Canvas(modifier = Modifier.fillMaxSize()) {"},{"type":"DELETE","lineNumber":82,"oldContent":""},{"type":"INSERT","lineNumber":83,"content":"    }"},{"type":"INSERT","lineNumber":84,"content":"}"},{"type":"INSERT","lineNumber":85,"content":""},{"type":"DELETE","lineNumber":86,"oldContent":"    }"},{"type":"DELETE","lineNumber":89,"oldContent":"}"},{"type":"MODIFY","lineNumber":90,"content":"    landmark: com.example.arwalking.FeatureLandmark,","oldContent":"    screenHeight: Float"},{"type":"INSERT","lineNumber":92,"content":"    screenWidth: Float,"},{"type":"INSERT","lineNumber":93,"content":"    screenHeight: Float"},{"type":"DELETE","lineNumber":93,"oldContent":"    // Verwende die Position des Landmarks, um die Bildschirmposition zu berechnen"},{"type":"DELETE","lineNumber":94,"oldContent":"    // Dies ist eine vereinfachte Berechnung - in einer echten AR-App würde man"},{"type":"MODIFY","lineNumber":106,"content":"    ","oldContent":"    // Vereinfachte Richtungsberechnung"},{"type":"MODIFY","lineNumber":132,"content":"        ","oldContent":"        canvas.translate(position.x, position.y)"},{"type":"DELETE","lineNumber":157,"oldContent":"    canvas: Canvas,"},{"type":"DELETE","lineNumber":158,"oldContent":"    color: Color,"},{"type":"DELETE","lineNumber":159,"oldContent":"    confidence: Float"},{"type":"DELETE","lineNumber":160,"oldContent":"    val paint = Paint().apply {"},{"type":"DELETE","lineNumber":161,"oldContent":"        isAntiAlias = true"},{"type":"DELETE","lineNumber":162,"oldContent":"        style = Paint.Style.FILL"},{"type":"INSERT","lineNumber":157,"content":"                progress < 0.33f -> 270f // Anfang: nach links"},{"type":"INSERT","lineNumber":158,"content":"                progress < 0.66f -> 0f   // Mitte: geradeaus"},{"type":"INSERT","lineNumber":159,"content":"                else -> 90f              // Ende: nach rechts"},{"type":"INSERT","lineNumber":160,"content":"            }"},{"type":"INSERT","lineNumber":161,"content":"        }"},{"type":"INSERT","lineNumber":162,"content":"    }"},{"type":"MODIFY","lineNumber":164,"content":"    // Füge leichte Variation basierend auf Position hinzu","oldContent":"        this.color = Color.White.copy(alpha = 0.8f).toArgb()"},{"type":"INSERT","lineNumber":185,"content":"        "},{"type":"DELETE","lineNumber":195,"oldContent":"    val shadowPath = Path(arrowPath).apply {"},{"type":"MODIFY","lineNumber":197,"content":"    }","oldContent":"        offset(size * 0.05f, size * 0.05f)"},{"type":"INSERT","lineNumber":209,"content":"    val paint = Paint().apply {"},{"type":"DELETE","lineNumber":210,"oldContent":"        this.color = color.toArgb()"},{"type":"DELETE","lineNumber":234,"oldContent":"    // Zeichne Schatten"},{"type":"INSERT","lineNumber":236,"content":"    }"},{"type":"INSERT","lineNumber":238,"content":"    // Schatten-Effekt (3D-Tiefe)"},{"type":"INSERT","lineNumber":239,"content":"    val shadowPath = Path(arrowPath).apply {"},{"type":"INSERT","lineNumber":240,"content":"        offset(size * 0.05f, size * 0.05f)"},{"type":"INSERT","lineNumber":242,"content":"    "},{"type":"INSERT","lineNumber":243,"content":"    val shadowPaint = Paint().apply {"},{"type":"INSERT","lineNumber":244,"content":"        this.color = Color.Black.copy(alpha = 0.3f).toArgb()"},{"type":"INSERT","lineNumber":245,"content":"        isAntiAlias = true"},{"type":"INSERT","lineNumber":246,"content":"        style = Paint.Style.FILL"},{"type":"INSERT","lineNumber":247,"content":"    }"},{"type":"INSERT","lineNumber":248,"content":"    "},{"type":"INSERT","lineNumber":249,"content":"    // Zeichne Schatten"},{"type":"INSERT","lineNumber":250,"content":"    canvas.drawPath(shadowPath as androidx.compose.ui.graphics.Path,"},{"type":"INSERT","lineNumber":251,"content":"        shadowPaint as androidx.compose.ui.graphics.Paint"},{"type":"INSERT","lineNumber":252,"content":"    )"},{"type":"INSERT","lineNumber":253,"content":"    "},{"type":"DELETE","lineNumber":242,"oldContent":"    "},{"type":"DELETE","lineNumber":244,"oldContent":"    // Schatten-Effekt (3D-Tiefe)"},{"type":"DELETE","lineNumber":247,"oldContent":"    val shadowPath = Path(arrowPath).apply {"},{"type":"DELETE","lineNumber":250,"oldContent":"        offset(size * 0.05f, size * 0.05f)"},{"type":"DELETE","lineNumber":252,"oldContent":"    }"},{"type":"INSERT","lineNumber":265,"content":"    }"},{"type":"DELETE","lineNumber":256,"oldContent":"    "},{"type":"DELETE","lineNumber":257,"oldContent":"    val shadowPaint = Paint().apply {"},{"type":"DELETE","lineNumber":260,"oldContent":"        this.color = Color.Black.copy(alpha = 0.3f).toArgb()"},{"type":"DELETE","lineNumber":263,"oldContent":"        isAntiAlias = true"},{"type":"DELETE","lineNumber":266,"oldContent":"        style = Paint.Style.FILL"},{"type":"DELETE","lineNumber":269,"oldContent":"    }"},{"type":"DELETE","lineNumber":272,"oldContent":"    "},{"type":"DELETE","lineNumber":275,"oldContent":"    canvas.drawPath(shadowPath as androidx.compose.ui.graphics.Path,"},{"type":"DELETE","lineNumber":276,"oldContent":"        shadowPaint as androidx.compose.ui.graphics.Paint"},{"type":"INSERT","lineNumber":279,"content":""},{"type":"INSERT","lineNumber":280,"content":"/**"},{"type":"DELETE","lineNumber":278,"oldContent":"    )"},{"type":"DELETE","lineNumber":280,"oldContent":""},{"type":"DELETE","lineNumber":282,"oldContent":" * Erweiterte 3D-Pfeil-Komponente mit Animation"},{"type":"DELETE","lineNumber":285,"oldContent":" */"},{"type":"DELETE","lineNumber":288,"oldContent":"    matches: List<FeatureMatchResult>,"},{"type":"DELETE","lineNumber":290,"oldContent":"    screenWidth: Float,"},{"type":"DELETE","lineNumber":292,"oldContent":"    screenHeight: Float,"},{"type":"DELETE","lineNumber":294,"oldContent":") {"},{"type":"DELETE","lineNumber":296,"oldContent":"    val bestMatch = matches.maxByOrNull { it.confidence }"},{"type":"DELETE","lineNumber":298,"oldContent":"    var animationProgress by remember { mutableStateOf(0f) }"},{"type":"DELETE","lineNumber":300,"oldContent":"    "},{"type":"INSERT","lineNumber":295,"content":"@Composable"},{"type":"INSERT","lineNumber":296,"content":"fun Animated3DArrowOverlay("},{"type":"INSERT","lineNumber":297,"content":"    matches: List<FeatureMatchResult>,"},{"type":"INSERT","lineNumber":298,"content":"    isFeatureMappingEnabled: Boolean,"},{"type":"INSERT","lineNumber":299,"content":"    screenWidth: Float,"},{"type":"INSERT","lineNumber":300,"content":"    screenHeight: Float,"},{"type":"INSERT","lineNumber":301,"content":"    currentStep: Int = 1,"},{"type":"INSERT","lineNumber":302,"content":"    totalSteps: Int = 3,"},{"type":"INSERT","lineNumber":303,"content":"    modifier: Modifier = Modifier"},{"type":"INSERT","lineNumber":304,"content":") {"},{"type":"INSERT","lineNumber":305,"content":"    val bestMatch = matches.maxByOrNull { it.confidence }"},{"type":"INSERT","lineNumber":306,"content":"    var animationProgress by remember { mutableStateOf(0f) }"},{"type":"INSERT","lineNumber":307,"content":"    "},{"type":"DELETE","lineNumber":304,"oldContent":"fun Animated3DArrowOverlay("},{"type":"DELETE","lineNumber":308,"oldContent":"    screenWidth: Float,"},{"type":"DELETE","lineNumber":310,"oldContent":"    currentStep: Int = 1,"},{"type":"DELETE","lineNumber":311,"oldContent":"    totalSteps: Int = 3,"},{"type":"INSERT","lineNumber":314,"content":"            }"},{"type":"INSERT","lineNumber":315,"content":"        }"},{"type":"DELETE","lineNumber":315,"oldContent":"        val arrowPosition = calculateArrowPosition("},{"type":"DELETE","lineNumber":316,"oldContent":"            landmark = bestMatch.landmark,"},{"type":"DELETE","lineNumber":317,"oldContent":"                animationProgress = (animationProgress + 0.02f) % 1f"},{"type":"DELETE","lineNumber":318,"oldContent":"                kotlinx.coroutines.delay(16) // ~60 FPS"},{"type":"DELETE","lineNumber":327,"oldContent":"        "},{"type":"MODIFY","lineNumber":329,"content":"        ","oldContent":"        val arrowDirection = if (bestMatch.landmark != null) {"},{"type":"INSERT","lineNumber":330,"content":"        val arrowDirection = if (bestMatch.landmark != null) {"},{"type":"INSERT","lineNumber":341,"content":"            Canvas(modifier = Modifier.fillMaxSize()) {"},{"type":"INSERT","lineNumber":342,"content":"                drawAnimated3DArrow("},{"type":"INSERT","lineNumber":343,"content":"                    position = arrowPosition,"},{"type":"DELETE","lineNumber":343,"oldContent":"            Canvas(modifier = Modifier.fillMaxSize()) {"},{"type":"DELETE","lineNumber":345,"oldContent":"                drawAnimated3DArrow("},{"type":"DELETE","lineNumber":348,"oldContent":"                    position = arrowPosition,"},{"type":"MODIFY","lineNumber":355,"content":" * Zeichnet einen animierten 3D-Pfeil","oldContent":" * Zeichnet einen animierten 3D-Pfeil"},{"type":"INSERT","lineNumber":453,"content":"    cameraRotation: Float"},{"type":"DELETE","lineNumber":454,"oldContent":"): Float {"},{"type":"INSERT","lineNumber":475,"content":"    // Kompensiere Kamerabewegung für stabilere Orientierung"},{"type":"DELETE","lineNumber":476,"oldContent":"    val stabilizedDirection = baseDirection - cameraRotation"},{"type":"MODIFY","lineNumber":552,"content":"private fun drawArrowLayer(","oldContent":"}"},{"type":"DELETE","lineNumber":561,"oldContent":"    "},{"type":"INSERT","lineNumber":564,"content":"    "},{"type":"DELETE","lineNumber":567,"oldContent":"        "},{"type":"INSERT","lineNumber":570,"content":"        "},{"type":"MODIFY","lineNumber":573,"content":"        lineTo(offsetX - size * 0.15f, offsetY + size * 0.3f)","oldContent":"        lineTo(offsetX - size * 0.3f, offsetY - size * 0.2f)"},{"type":"INSERT","lineNumber":574,"content":"        lineTo(offsetX - size * 0.15f, offsetY - size * 0.2f)"},{"type":"INSERT","lineNumber":575,"content":"        lineTo(offsetX - size * 0.3f, offsetY - size * 0.2f)"},{"type":"DELETE","lineNumber":575,"oldContent":"    canvas.drawPath(arrowPath, paint)"},{"type":"INSERT","lineNumber":577,"content":"        close()"},{"type":"DELETE","lineNumber":577,"oldContent":"}"},{"type":"DELETE","lineNumber":579,"oldContent":"        close()"},{"type":"DELETE","lineNumber":581,"oldContent":"private fun convertToFeatureLandmark(processedLandmark: com.example.arwalking.ProcessedLandmark): com.example.arwalking.FeatureLandmark {"},{"type":"INSERT","lineNumber":582,"content":""},{"type":"INSERT","lineNumber":583,"content":"/**"},{"type":"INSERT","lineNumber":584,"content":" * Konvertiert ProcessedLandmark zu FeatureLandmark"},{"type":"INSERT","lineNumber":585,"content":" */"},{"type":"INSERT","lineNumber":586,"content":"private fun convertToFeatureLandmark(processedLandmark: com.example.arwalking.ProcessedLandmark): com.example.arwalking.FeatureLandmark {"},{"type":"DELETE","lineNumber":585,"oldContent":""},{"type":"DELETE","lineNumber":588,"oldContent":"/**"},{"type":"DELETE","lineNumber":591,"oldContent":" * Konvertiert ProcessedLandmark zu FeatureLandmark"}]},{"timestamp":1754319703162,"changes":[{"type":"DELETE","lineNumber":27,"oldContent":"/**"},{"type":"MODIFY","lineNumber":28,"content":"/**","oldContent":" */"},{"type":"INSERT","lineNumber":29,"content":" * 3D-Pfeil Overlay für AR-Navigation (Snapchat-Style)"},{"type":"MODIFY","lineNumber":31,"content":" * Unterstützt GLB-Modelle für realistischere 3D-Darstellung","oldContent":"fun AR3DArrowOverlay("},{"type":"DELETE","lineNumber":33,"oldContent":"    matches: List<FeatureMatchResult>,"},{"type":"INSERT","lineNumber":34,"content":"fun AR3DArrowOverlay("},{"type":"INSERT","lineNumber":35,"content":"    matches: List<FeatureMatchResult>,"},{"type":"DELETE","lineNumber":38,"oldContent":"    modifier: Modifier = Modifier"},{"type":"MODIFY","lineNumber":41,"content":"    useGLBModel: Boolean = true,","oldContent":"    if (isFeatureMappingEnabled && bestMatch != null && bestMatch.confidence >= 0.7f) {"},{"type":"DELETE","lineNumber":49,"oldContent":"            landmark = bestMatch.landmark,"},{"type":"INSERT","lineNumber":50,"content":"        // Berechne die Position des Pfeils basierend auf dem Landmark"},{"type":"MODIFY","lineNumber":61,"content":"        ","oldContent":"        "},{"type":"INSERT","lineNumber":68,"content":"            )"},{"type":"DELETE","lineNumber":69,"oldContent":"        } else {"},{"type":"INSERT","lineNumber":72,"content":"        "},{"type":"DELETE","lineNumber":74,"oldContent":"        "},{"type":"MODIFY","lineNumber":83,"content":"    }","oldContent":"    }"},{"type":"MODIFY","lineNumber":86,"content":"/**","oldContent":"/**"},{"type":"DELETE","lineNumber":93,"oldContent":"    // die Kamera-Matrix und die 3D-Position des Landmarks verwenden"},{"type":"INSERT","lineNumber":94,"content":"): Offset {"},{"type":"MODIFY","lineNumber":163,"content":"    ","oldContent":"        this.color = color.toArgb()"},{"type":"DELETE","lineNumber":173,"oldContent":"        style = Paint.Style.STROKE"},{"type":"DELETE","lineNumber":174,"oldContent":"        strokeWidth = 3f"},{"type":"DELETE","lineNumber":175,"oldContent":"    "},{"type":"DELETE","lineNumber":176,"oldContent":"    val arrowPath = Path().apply {"},{"type":"DELETE","lineNumber":177,"oldContent":"        moveTo(0f, -size * 0.5f)"},{"type":"INSERT","lineNumber":173,"content":"private fun DrawScope.draw3DArrow("},{"type":"INSERT","lineNumber":174,"content":"    position: Offset,"},{"type":"INSERT","lineNumber":175,"content":"    direction: Float,"},{"type":"INSERT","lineNumber":176,"content":"    confidence: Float,"},{"type":"INSERT","lineNumber":177,"content":"    size: androidx.compose.ui.geometry.Size"},{"type":"MODIFY","lineNumber":236,"content":"    }","oldContent":"    }"},{"type":"DELETE","lineNumber":239,"oldContent":"    }"},{"type":"DELETE","lineNumber":241,"oldContent":"    // Zeichne Hauptpfeil"},{"type":"DELETE","lineNumber":243,"oldContent":"    canvas.drawPath(arrowPath as androidx.compose.ui.graphics.Path, paint as androidx.compose.ui.graphics.Paint)"},{"type":"INSERT","lineNumber":241,"content":"    }"},{"type":"DELETE","lineNumber":245,"oldContent":"    "},{"type":"DELETE","lineNumber":247,"oldContent":"    // Zeichne Umriss"},{"type":"DELETE","lineNumber":250,"oldContent":"    canvas.drawPath(arrowPath, strokePaint as androidx.compose.ui.graphics.Paint)"},{"type":"DELETE","lineNumber":252,"oldContent":"    "},{"type":"DELETE","lineNumber":255,"oldContent":"    // Zeichne Glanz-Effekt für 3D-Look"},{"type":"DELETE","lineNumber":257,"oldContent":"    val highlightPaint = Paint().apply {"},{"type":"DELETE","lineNumber":260,"oldContent":"        this.color = Color.White.copy(alpha = 0.4f * confidence).toArgb()"},{"type":"INSERT","lineNumber":254,"content":"    // Zeichne Hauptpfeil"},{"type":"INSERT","lineNumber":255,"content":"    canvas.drawPath(arrowPath as androidx.compose.ui.graphics.Path, paint as androidx.compose.ui.graphics.Paint)"},{"type":"INSERT","lineNumber":256,"content":"    "},{"type":"INSERT","lineNumber":257,"content":"    // Zeichne Umriss"},{"type":"INSERT","lineNumber":258,"content":"    canvas.drawPath(arrowPath, strokePaint as androidx.compose.ui.graphics.Paint)"},{"type":"INSERT","lineNumber":259,"content":"    "},{"type":"INSERT","lineNumber":260,"content":"    // Zeichne Glanz-Effekt für 3D-Look"},{"type":"INSERT","lineNumber":261,"content":"    val highlightPaint = Paint().apply {"},{"type":"INSERT","lineNumber":262,"content":"        this.color = Color.White.copy(alpha = 0.4f * confidence).toArgb()"},{"type":"INSERT","lineNumber":265,"content":"    }"},{"type":"DELETE","lineNumber":271,"oldContent":"    }"},{"type":"DELETE","lineNumber":279,"oldContent":" * Bestimmt die Farbe des Pfeils basierend auf der Confidence"},{"type":"MODIFY","lineNumber":281,"content":" * Bestimmt die Farbe des Pfeils basierend auf der Confidence","oldContent":" */"},{"type":"INSERT","lineNumber":282,"content":" */"},{"type":"DELETE","lineNumber":291,"oldContent":"@Composable"},{"type":"INSERT","lineNumber":292,"content":"/**"},{"type":"INSERT","lineNumber":293,"content":" * Erweiterte 3D-Pfeil-Komponente mit Animation"},{"type":"INSERT","lineNumber":294,"content":" */"},{"type":"INSERT","lineNumber":295,"content":"@Composable"},{"type":"DELETE","lineNumber":295,"oldContent":"/**"},{"type":"DELETE","lineNumber":298,"oldContent":" * Erweiterte 3D-Pfeil-Komponente mit Animation"},{"type":"DELETE","lineNumber":301,"oldContent":" */"},{"type":"DELETE","lineNumber":303,"oldContent":"            while (true) {"},{"type":"DELETE","lineNumber":305,"oldContent":"                animationProgress = (animationProgress + 0.02f) % 1f"},{"type":"DELETE","lineNumber":308,"oldContent":"                kotlinx.coroutines.delay(16) // ~60 FPS"},{"type":"DELETE","lineNumber":310,"oldContent":"            }"},{"type":"DELETE","lineNumber":312,"oldContent":"        }"},{"type":"DELETE","lineNumber":313,"oldContent":"    }"},{"type":"DELETE","lineNumber":314,"oldContent":"        val arrowPosition = calculateArrowPosition("},{"type":"DELETE","lineNumber":315,"oldContent":"            landmark = bestMatch.landmark,"},{"type":"INSERT","lineNumber":308,"content":"    // Animation für pulsierenden Effekt"},{"type":"INSERT","lineNumber":309,"content":"    LaunchedEffect(bestMatch) {"},{"type":"INSERT","lineNumber":310,"content":"        if (bestMatch != null && bestMatch.confidence >= 0.7f) {"},{"type":"INSERT","lineNumber":311,"content":"            while (true) {"},{"type":"INSERT","lineNumber":312,"content":"                animationProgress = (animationProgress + 0.02f) % 1f"},{"type":"INSERT","lineNumber":313,"content":"                kotlinx.coroutines.delay(16) // ~60 FPS"},{"type":"DELETE","lineNumber":317,"oldContent":"            screenWidth = screenWidth,"},{"type":"INSERT","lineNumber":316,"content":"    }"},{"type":"INSERT","lineNumber":317,"content":"    "},{"type":"INSERT","lineNumber":318,"content":"    if (isFeatureMappingEnabled && bestMatch != null && bestMatch.confidence >= 0.7f) {"},{"type":"MODIFY","lineNumber":327,"content":"            Offset(screenWidth / 2, screenHeight / 2)","oldContent":"            PointF(screenWidth / 2, screenHeight / 2)"},{"type":"INSERT","lineNumber":328,"content":"        }"},{"type":"DELETE","lineNumber":330,"oldContent":"        }"},{"type":"DELETE","lineNumber":342,"oldContent":"                    direction = arrowDirection,"},{"type":"MODIFY","lineNumber":344,"content":"                    direction = arrowDirection,","oldContent":"                    confidence = bestMatch.confidence,"},{"type":"INSERT","lineNumber":345,"content":"                    confidence = bestMatch.confidence,"},{"type":"INSERT","lineNumber":354,"content":"/**"},{"type":"DELETE","lineNumber":355,"oldContent":" * Zeichnet einen animierten 3D-Pfeil"},{"type":"DELETE","lineNumber":549,"oldContent":"    canvas.drawPath(arrowPath, paint)"},{"type":"DELETE","lineNumber":550,"oldContent":"    "},{"type":"DELETE","lineNumber":551,"oldContent":"        close()"},{"type":"INSERT","lineNumber":549,"content":"/**"},{"type":"INSERT","lineNumber":550,"content":" * Zeichnet eine einzelne Pfeil-Schicht"},{"type":"INSERT","lineNumber":551,"content":" */"},{"type":"MODIFY","lineNumber":564,"content":"    ","oldContent":"    "},{"type":"MODIFY","lineNumber":570,"content":"        ","oldContent":"        "},{"type":"MODIFY","lineNumber":572,"content":"        lineTo(offsetX + size * 0.15f, offsetY + size * 0.3f)","oldContent":"        lineTo(offsetX - size * 0.3f, offsetY - size * 0.2f)"},{"type":"DELETE","lineNumber":575,"oldContent":"        "},{"type":"DELETE","lineNumber":577,"oldContent":"    }"},{"type":"INSERT","lineNumber":576,"content":"        "},{"type":"INSERT","lineNumber":578,"content":"    }"},{"type":"MODIFY","lineNumber":582,"content":"","oldContent":""},{"type":"DELETE","lineNumber":584,"oldContent":"    return com.example.arwalking.FeatureLandmark("},{"type":"DELETE","lineNumber":586,"oldContent":"        id = processedLandmark.id,"},{"type":"INSERT","lineNumber":587,"content":"    return com.example.arwalking.FeatureLandmark("},{"type":"INSERT","lineNumber":588,"content":"        id = processedLandmark.id,"},{"type":"INSERT","lineNumber":594,"content":"    )"},{"type":"INSERT","lineNumber":595,"content":"}"}]},{"timestamp":1754321481579,"changes":[{"type":"MODIFY","lineNumber":20,"content":"import androidx.compose.ui.platform.LocalContext","oldContent":"import androidx.compose.ui.unit.dp"},{"type":"INSERT","lineNumber":22,"content":"import androidx.compose.ui.unit.dp"},{"type":"DELETE","lineNumber":23,"oldContent":"import com.example.arwalking.FeatureMatchResult"},{"type":"INSERT","lineNumber":27,"content":""},{"type":"DELETE","lineNumber":29,"oldContent":" */"},{"type":"MODIFY","lineNumber":34,"content":"fun AR3DArrowOverlay(","oldContent":"fun AR3DArrowOverlay("},{"type":"MODIFY","lineNumber":44,"content":"    val context = LocalContext.current","oldContent":"        val arrowPosition = calculateArrowPosition("},{"type":"MODIFY","lineNumber":50,"content":"        // Berechne die Position des Pfeils basierend auf dem Landmark","oldContent":"        // Berechne die Position des Pfeils basierend auf dem Landmark"},{"type":"INSERT","lineNumber":60,"content":"        }"},{"type":"DELETE","lineNumber":61,"oldContent":"        "},{"type":"INSERT","lineNumber":82,"content":"        }"},{"type":"DELETE","lineNumber":83,"oldContent":"    }"},{"type":"INSERT","lineNumber":85,"content":""},{"type":"DELETE","lineNumber":86,"oldContent":"/**"},{"type":"MODIFY","lineNumber":94,"content":"): Offset {","oldContent":"): Offset {"},{"type":"INSERT","lineNumber":107,"content":"    val x = landmark.position?.x?.toFloat() ?: 0f"},{"type":"INSERT","lineNumber":108,"content":"    val y = landmark.position?.y?.toFloat() ?: 0f"},{"type":"DELETE","lineNumber":108,"oldContent":"    val y = landmark.position.y.toFloat()"},{"type":"DELETE","lineNumber":109,"oldContent":"    "},{"type":"DELETE","lineNumber":166,"oldContent":"        style = Paint.Style.FILL"},{"type":"DELETE","lineNumber":167,"oldContent":"    }"},{"type":"DELETE","lineNumber":168,"oldContent":"    val strokePaint = Paint().apply {"},{"type":"DELETE","lineNumber":169,"oldContent":"        isAntiAlias = true"},{"type":"INSERT","lineNumber":166,"content":"    "},{"type":"INSERT","lineNumber":167,"content":"    return (baseAngle + positionVariation) % 360f"},{"type":"INSERT","lineNumber":168,"content":"}"},{"type":"INSERT","lineNumber":169,"content":""},{"type":"DELETE","lineNumber":179,"oldContent":"        moveTo(0f, -size * 0.5f)"},{"type":"DELETE","lineNumber":180,"oldContent":"        lineTo(size * 0.3f, -size * 0.2f)"},{"type":"DELETE","lineNumber":181,"oldContent":"        "},{"type":"INSERT","lineNumber":179,"content":"    val arrowSize = 60.dp.toPx() * confidence // Größe basierend auf Confidence"},{"type":"INSERT","lineNumber":180,"content":"    val arrowColor = getArrowColor(confidence)"},{"type":"INSERT","lineNumber":181,"content":"    "},{"type":"INSERT","lineNumber":235,"content":"        close()"},{"type":"DELETE","lineNumber":236,"oldContent":"    }"},{"type":"MODIFY","lineNumber":241,"content":"    }","oldContent":"    }"},{"type":"MODIFY","lineNumber":249,"content":"    // Zeichne Schatten","oldContent":"    // Zeichne Hauptpfeil"},{"type":"INSERT","lineNumber":250,"content":"    canvas.drawPath(shadowPath as androidx.compose.ui.graphics.Path,"},{"type":"INSERT","lineNumber":251,"content":"        shadowPaint as androidx.compose.ui.graphics.Paint"},{"type":"INSERT","lineNumber":252,"content":"    )"},{"type":"INSERT","lineNumber":253,"content":"    "},{"type":"INSERT","lineNumber":254,"content":"    // Zeichne Hauptpfeil"},{"type":"DELETE","lineNumber":252,"oldContent":"    // Zeichne Schatten"},{"type":"DELETE","lineNumber":255,"oldContent":"    canvas.drawPath(shadowPath as androidx.compose.ui.graphics.Path,"},{"type":"DELETE","lineNumber":257,"oldContent":"        shadowPaint as androidx.compose.ui.graphics.Paint"},{"type":"DELETE","lineNumber":260,"oldContent":"    )"},{"type":"DELETE","lineNumber":262,"oldContent":"    "},{"type":"INSERT","lineNumber":280,"content":"/**"},{"type":"DELETE","lineNumber":282,"oldContent":"/**"},{"type":"MODIFY","lineNumber":292,"content":"/**","oldContent":"/**"},{"type":"DELETE","lineNumber":294,"oldContent":"fun Animated3DArrowOverlay("},{"type":"MODIFY","lineNumber":296,"content":"fun Animated3DArrowOverlay(","oldContent":"    matches: List<FeatureMatchResult>,"},{"type":"INSERT","lineNumber":297,"content":"    matches: List<FeatureMatchResult>,"},{"type":"INSERT","lineNumber":306,"content":"    var animationProgress by remember { mutableStateOf(0f) }"},{"type":"INSERT","lineNumber":307,"content":"    "},{"type":"DELETE","lineNumber":308,"oldContent":"    var animationProgress by remember { mutableStateOf(0f) }"},{"type":"DELETE","lineNumber":311,"oldContent":"    "},{"type":"MODIFY","lineNumber":315,"content":"        }","oldContent":"    }"},{"type":"INSERT","lineNumber":316,"content":"    }"},{"type":"DELETE","lineNumber":318,"oldContent":"        }"},{"type":"INSERT","lineNumber":343,"content":"                    position = arrowPosition,"},{"type":"DELETE","lineNumber":345,"oldContent":"                    position = arrowPosition,"},{"type":"DELETE","lineNumber":383,"oldContent":"private fun DrawScope.drawLayered3DArrow("},{"type":"MODIFY","lineNumber":384,"content":"/**","oldContent":" * Zeichnet mehrschichtigen 3D-Pfeil für realistischeren Effekt"},{"type":"INSERT","lineNumber":385,"content":" * GLB-Model Loader für 3D-Pfeil"},{"type":"INSERT","lineNumber":386,"content":" * Lädt das arrow.glb Modell aus den Assets"},{"type":"INSERT","lineNumber":387,"content":" */"},{"type":"INSERT","lineNumber":388,"content":"class GLBArrowModel(private val context: Context) {"},{"type":"INSERT","lineNumber":389,"content":"    private var isLoaded = false"},{"type":"INSERT","lineNumber":390,"content":"    private var modelData: ByteArray? = null"},{"type":"INSERT","lineNumber":391,"content":"    "},{"type":"INSERT","lineNumber":392,"content":"    suspend fun loadModel(): Boolean {"},{"type":"INSERT","lineNumber":393,"content":"        return try {"},{"type":"INSERT","lineNumber":394,"content":"            val inputStream = context.assets.open(\"models/arrow.glb\")"},{"type":"INSERT","lineNumber":395,"content":"            modelData = inputStream.readBytes()"},{"type":"INSERT","lineNumber":396,"content":"            inputStream.close()"},{"type":"INSERT","lineNumber":397,"content":"            isLoaded = true"},{"type":"INSERT","lineNumber":398,"content":"            true"},{"type":"INSERT","lineNumber":399,"content":"        } catch (e: Exception) {"},{"type":"INSERT","lineNumber":400,"content":"            android.util.Log.e(\"GLBArrowModel\", \"Fehler beim Laden des GLB-Modells: ${e.message}\")"},{"type":"INSERT","lineNumber":401,"content":"            false"},{"type":"INSERT","lineNumber":402,"content":"        }"},{"type":"DELETE","lineNumber":387,"oldContent":"        "},{"type":"DELETE","lineNumber":388,"oldContent":"        // Zeichne mehrschichtigen 3D-Effekt"},{"type":"DELETE","lineNumber":389,"oldContent":"        canvas.rotate(orientation)"},{"type":"DELETE","lineNumber":390,"oldContent":"        canvas.save()"},{"type":"DELETE","lineNumber":392,"oldContent":"    val arrowSize = 80.dp.toPx() * confidence"},{"type":"DELETE","lineNumber":393,"oldContent":"    size: androidx.compose.ui.geometry.Size"},{"type":"DELETE","lineNumber":394,"oldContent":"    orientation: Float,"},{"type":"DELETE","lineNumber":395,"oldContent":"private fun DrawScope.drawEnhanced3DArrow("},{"type":"DELETE","lineNumber":396,"oldContent":" * Verbesserte 3D-Pfeil-Darstellung mit realistischeren Effekten"},{"type":"DELETE","lineNumber":397,"oldContent":""},{"type":"DELETE","lineNumber":398,"oldContent":"    drawEnhanced3DArrow(position, orientation, confidence, size)"},{"type":"INSERT","lineNumber":405,"content":"    fun isModelLoaded(): Boolean = isLoaded"},{"type":"DELETE","lineNumber":400,"oldContent":"    // Placeholder: In einer echten Implementierung würde hier"},{"type":"DELETE","lineNumber":401,"oldContent":"    size: androidx.compose.ui.geometry.Size"},{"type":"DELETE","lineNumber":402,"oldContent":"    orientation: Float,"},{"type":"DELETE","lineNumber":403,"oldContent":"private fun DrawScope.drawGLBArrow("},{"type":"DELETE","lineNumber":404,"oldContent":" * Zeichnet GLB-basierte 3D-Pfeil (Placeholder für echte GLB-Rendering)"},{"type":"INSERT","lineNumber":407,"content":"    fun getModelData(): ByteArray? = modelData"},{"type":"INSERT","lineNumber":408,"content":"}"},{"type":"DELETE","lineNumber":406,"oldContent":"    return (stabilizedDirection + confidenceVariation) % 360f"},{"type":"DELETE","lineNumber":407,"oldContent":"    val confidenceVariation = (1f - confidence) * 10f * sin(System.currentTimeMillis() / 1000f)"},{"type":"DELETE","lineNumber":408,"oldContent":"    "},{"type":"DELETE","lineNumber":409,"oldContent":"    // Kompensiere Kamerabewegung für stabilere Orientierung"},{"type":"DELETE","lineNumber":412,"oldContent":""},{"type":"DELETE","lineNumber":413,"oldContent":"    return (stabilizedDirection + confidenceVariation) % 360f"},{"type":"DELETE","lineNumber":414,"oldContent":"    val confidenceVariation = (1f - confidence) * 10f * sin(System.currentTimeMillis() / 1000f)"},{"type":"DELETE","lineNumber":415,"oldContent":"    // Füge Confidence-basierte Variation hinzu"},{"type":"DELETE","lineNumber":416,"oldContent":"    val stabilizedDirection = baseDirection - cameraRotation"},{"type":"INSERT","lineNumber":412,"content":"/**"},{"type":"INSERT","lineNumber":413,"content":" * Berechnet stabilisierte 3D-Position für Snapchat-Style AR"},{"type":"INSERT","lineNumber":414,"content":" */"},{"type":"INSERT","lineNumber":415,"content":"private fun calculateStabilized3DPosition("},{"type":"INSERT","lineNumber":416,"content":"    landmark: com.example.arwalking.FeatureLandmark,"},{"type":"INSERT","lineNumber":417,"content":"    screenPosition: PointF?,"},{"type":"INSERT","lineNumber":418,"content":"    screenWidth: Float,"},{"type":"INSERT","lineNumber":419,"content":"    screenHeight: Float,"},{"type":"INSERT","lineNumber":420,"content":"    cameraRotation: Float,"},{"type":"INSERT","lineNumber":421,"content":"    deviceOrientation: Float"},{"type":"INSERT","lineNumber":422,"content":"): Offset {"},{"type":"DELETE","lineNumber":418,"oldContent":"        else -> 0f"},{"type":"DELETE","lineNumber":419,"oldContent":"        landmark.id.contains(\"elevator\") -> 0f    // Geradeaus"},{"type":"DELETE","lineNumber":420,"oldContent":"        landmark.id.contains(\"stairs\") -> 45f     // Diagonal nach oben"},{"type":"DELETE","lineNumber":421,"oldContent":"    val baseDirection = when {"},{"type":"DELETE","lineNumber":422,"oldContent":"): Float {"},{"type":"DELETE","lineNumber":423,"oldContent":"    "},{"type":"DELETE","lineNumber":456,"oldContent":"private fun calculateSmoothArrowOrientation("},{"type":"DELETE","lineNumber":457,"oldContent":" */"},{"type":"INSERT","lineNumber":456,"content":"    // Basis-Richtung basierend auf Landmark-Typ"},{"type":"INSERT","lineNumber":457,"content":"    val baseDirection = when {"},{"type":"DELETE","lineNumber":464,"oldContent":"    "},{"type":"DELETE","lineNumber":465,"oldContent":"    val confidenceVariation = (1f - confidence) * 10f * sin(System.currentTimeMillis() / 1000f)"},{"type":"DELETE","lineNumber":466,"oldContent":"    // Füge Confidence-basierte Variation hinzu"},{"type":"DELETE","lineNumber":467,"oldContent":"    "},{"type":"INSERT","lineNumber":464,"content":"        landmark.name.contains(\"Entry\", ignoreCase = true) ||"},{"type":"INSERT","lineNumber":465,"content":"        landmark.name.contains(\"entrance\", ignoreCase = true) -> 0f    // Geradeaus"},{"type":"INSERT","lineNumber":466,"content":"        landmark.name.contains(\"stairs\", ignoreCase = true) ||"},{"type":"INSERT","lineNumber":467,"content":"        landmark.name.contains(\"Treppe\", ignoreCase = true) -> 45f     // Diagonal nach oben"},{"type":"INSERT","lineNumber":477,"content":"    "},{"type":"INSERT","lineNumber":478,"content":"    // Füge Confidence-basierte Variation hinzu"},{"type":"INSERT","lineNumber":479,"content":"    val confidenceVariation = (1f - confidence) * 10f * sin(System.currentTimeMillis() / 1000f)"},{"type":"INSERT","lineNumber":480,"content":"    "},{"type":"INSERT","lineNumber":481,"content":"    return (stabilizedDirection + confidenceVariation) % 360f"},{"type":"DELETE","lineNumber":478,"oldContent":"    canvas.drawPath(arrowPath, paint)"},{"type":"INSERT","lineNumber":483,"content":""},{"type":"INSERT","lineNumber":484,"content":"/**"},{"type":"INSERT","lineNumber":485,"content":" * Zeichnet GLB-basierte 3D-Pfeil (Placeholder für echte GLB-Rendering)"},{"type":"INSERT","lineNumber":486,"content":" */"},{"type":"INSERT","lineNumber":487,"content":"private fun DrawScope.drawGLBArrow("},{"type":"INSERT","lineNumber":488,"content":"    position: Offset,"},{"type":"INSERT","lineNumber":489,"content":"    orientation: Float,"},{"type":"INSERT","lineNumber":490,"content":"    confidence: Float,"},{"type":"INSERT","lineNumber":491,"content":"    size: androidx.compose.ui.geometry.Size"},{"type":"INSERT","lineNumber":492,"content":") {"},{"type":"INSERT","lineNumber":493,"content":"    // Placeholder: In einer echten Implementierung würde hier"},{"type":"INSERT","lineNumber":494,"content":"    // das GLB-Modell mit einer 3D-Rendering-Engine gerendert"},{"type":"DELETE","lineNumber":480,"oldContent":"    }"},{"type":"DELETE","lineNumber":481,"oldContent":"        close()"},{"type":"DELETE","lineNumber":482,"oldContent":"        lineTo(offsetX - size * 0.15f, offsetY + size * 0.3f)"},{"type":"DELETE","lineNumber":483,"oldContent":"        lineTo(offsetX + size * 0.15f, offsetY + size * 0.3f)"},{"type":"INSERT","lineNumber":496,"content":"    // Für jetzt verwenden wir eine verbesserte 2D-Darstellung"},{"type":"INSERT","lineNumber":497,"content":"    drawEnhanced3DArrow(position, orientation, confidence, size)"},{"type":"DELETE","lineNumber":485,"oldContent":"    canvas.drawPath(arrowPath, paint)"},{"type":"INSERT","lineNumber":499,"content":""},{"type":"INSERT","lineNumber":500,"content":"/**"},{"type":"INSERT","lineNumber":501,"content":" * Verbesserte 3D-Pfeil-Darstellung mit realistischeren Effekten"},{"type":"INSERT","lineNumber":502,"content":" */"},{"type":"INSERT","lineNumber":503,"content":"private fun DrawScope.drawEnhanced3DArrow("},{"type":"INSERT","lineNumber":504,"content":"    position: Offset,"},{"type":"INSERT","lineNumber":505,"content":"    orientation: Float,"},{"type":"INSERT","lineNumber":506,"content":"    confidence: Float,"},{"type":"INSERT","lineNumber":507,"content":"    size: androidx.compose.ui.geometry.Size"},{"type":"INSERT","lineNumber":508,"content":") {"},{"type":"INSERT","lineNumber":509,"content":"    val arrowSize = 80.dp.toPx() * confidence"},{"type":"INSERT","lineNumber":510,"content":"    val arrowColor = getArrowColor(confidence)"},{"type":"INSERT","lineNumber":511,"content":"    "},{"type":"INSERT","lineNumber":512,"content":"    drawIntoCanvas { canvas ->"},{"type":"INSERT","lineNumber":513,"content":"        canvas.save()"},{"type":"INSERT","lineNumber":514,"content":"        canvas.translate(position.x, position.y)"},{"type":"INSERT","lineNumber":515,"content":"        canvas.rotate(orientation)"},{"type":"INSERT","lineNumber":517,"content":"        // Zeichne mehrschichtigen 3D-Effekt"},{"type":"INSERT","lineNumber":518,"content":"        drawLayered3DArrow(canvas.nativeCanvas, arrowSize, arrowColor, confidence)"},{"type":"INSERT","lineNumber":519,"content":"        "},{"type":"INSERT","lineNumber":520,"content":"        canvas.restore()"},{"type":"DELETE","lineNumber":488,"oldContent":"        close()"},{"type":"DELETE","lineNumber":489,"oldContent":"        lineTo(offsetX - size * 0.15f, offsetY + size * 0.3f)"},{"type":"DELETE","lineNumber":490,"oldContent":"    canvas.drawPath(arrowPath, paint)"},{"type":"DELETE","lineNumber":491,"oldContent":"    "},{"type":"DELETE","lineNumber":492,"oldContent":"        lineTo(offsetX - size * 0.15f, offsetY - size * 0.2f)"},{"type":"DELETE","lineNumber":494,"oldContent":"    )"},{"type":"DELETE","lineNumber":495,"oldContent":"        confidence = 1.0f"},{"type":"DELETE","lineNumber":496,"oldContent":"        imageUrl = \"\","},{"type":"DELETE","lineNumber":497,"oldContent":"        position = Position(0.0, 0.0, 0.0),"},{"type":"DELETE","lineNumber":498,"oldContent":"        description = \"Processed landmark\","},{"type":"DELETE","lineNumber":499,"oldContent":"        name = processedLandmark.name,"},{"type":"DELETE","lineNumber":500,"oldContent":"        id = processedLandmark.id,"},{"type":"DELETE","lineNumber":501,"oldContent":"    return FeatureLandmark("},{"type":"DELETE","lineNumber":502,"oldContent":"private fun convertToFeatureLandmark(processedLandmark: ProcessedLandmark): FeatureLandmark {"},{"type":"DELETE","lineNumber":503,"oldContent":" */"},{"type":"DELETE","lineNumber":504,"oldContent":" * Konvertiert ProcessedLandmark zu FeatureLandmark"},{"type":"DELETE","lineNumber":505,"oldContent":"/**"},{"type":"DELETE","lineNumber":507,"oldContent":"}"},{"type":"DELETE","lineNumber":508,"oldContent":"    canvas.drawPath(arrowPath, paint)"},{"type":"DELETE","lineNumber":509,"oldContent":"        close()"},{"type":"DELETE","lineNumber":510,"oldContent":"        lineTo(offsetX - size * 0.15f, offsetY + size * 0.3f)"},{"type":"DELETE","lineNumber":511,"oldContent":"        lineTo(offsetX + size * 0.15f, offsetY + size * 0.3f)"},{"type":"DELETE","lineNumber":512,"oldContent":"        // Pfeilkörper"},{"type":"DELETE","lineNumber":513,"oldContent":"        lineTo(offsetX + size * 0.15f, offsetY - size * 0.2f)"},{"type":"DELETE","lineNumber":514,"oldContent":"        lineTo(offsetX + size * 0.3f, offsetY - size * 0.2f)"},{"type":"DELETE","lineNumber":515,"oldContent":"        moveTo(offsetX, offsetY - size * 0.5f)"},{"type":"DELETE","lineNumber":516,"oldContent":"        // Pfeilspitze"},{"type":"DELETE","lineNumber":517,"oldContent":"    val arrowPath = Path().apply {"},{"type":"DELETE","lineNumber":518,"oldContent":"    }"},{"type":"DELETE","lineNumber":519,"oldContent":"        style = Paint.Style.FILL"},{"type":"DELETE","lineNumber":520,"oldContent":"        isAntiAlias = true"},{"type":"DELETE","lineNumber":521,"oldContent":"        this.color = color.toArgb()"},{"type":"DELETE","lineNumber":522,"oldContent":"    val paint = Paint().apply {"},{"type":"INSERT","lineNumber":524,"content":"/**"},{"type":"INSERT","lineNumber":525,"content":" * Zeichnet mehrschichtigen 3D-Pfeil für realistischeren Effekt"},{"type":"INSERT","lineNumber":526,"content":" */"},{"type":"INSERT","lineNumber":527,"content":"private fun DrawScope.drawLayered3DArrow("},{"type":"INSERT","lineNumber":528,"content":"    canvas: android.graphics.Canvas,"},{"type":"INSERT","lineNumber":529,"content":"    size: Float,"},{"type":"INSERT","lineNumber":530,"content":"    color: Color,"},{"type":"INSERT","lineNumber":531,"content":"    confidence: Float"},{"type":"DELETE","lineNumber":524,"oldContent":"    offsetY: Float = 0f"},{"type":"DELETE","lineNumber":525,"oldContent":"    offsetX: Float = 0f,"},{"type":"DELETE","lineNumber":526,"oldContent":"}"},{"type":"DELETE","lineNumber":527,"oldContent":"    )"},{"type":"DELETE","lineNumber":528,"oldContent":"        confidence = 1.0f"},{"type":"DELETE","lineNumber":529,"oldContent":"        imageUrl = \"\","},{"type":"DELETE","lineNumber":530,"oldContent":"        position = com.example.arwalking.Position(0.0, 0.0, 0.0),"},{"type":"DELETE","lineNumber":531,"oldContent":"        description = \"Processed landmark\","},{"type":"DELETE","lineNumber":532,"oldContent":"        name = processedLandmark.name,"},{"type":"DELETE","lineNumber":533,"oldContent":"        id = processedLandmark.id,"},{"type":"DELETE","lineNumber":534,"oldContent":"    return com.example.arwalking.FeatureLandmark("},{"type":"DELETE","lineNumber":535,"oldContent":"private fun convertToFeatureLandmark(processedLandmark: com.example.arwalking.ProcessedLandmark): com.example.arwalking.FeatureLandmark {"},{"type":"INSERT","lineNumber":533,"content":"    // Basis-Schatten (tiefste Schicht)"},{"type":"INSERT","lineNumber":534,"content":"    drawArrowLayer(canvas, size * 1.1f, Color.Black.copy(alpha = 0.3f), "},{"type":"INSERT","lineNumber":535,"content":"                  offsetX = size * 0.08f, offsetY = size * 0.08f)"},{"type":"INSERT","lineNumber":537,"content":"    // Mittlerer Schatten"},{"type":"INSERT","lineNumber":538,"content":"    drawArrowLayer(canvas, size * 1.05f, Color.Black.copy(alpha = 0.2f),"},{"type":"INSERT","lineNumber":539,"content":"                  offsetX = size * 0.04f, offsetY = size * 0.04f)"},{"type":"INSERT","lineNumber":540,"content":"    "},{"type":"INSERT","lineNumber":541,"content":"    // Hauptkörper"},{"type":"INSERT","lineNumber":542,"content":"    drawArrowLayer(canvas, size, color)"},{"type":"INSERT","lineNumber":543,"content":"    "},{"type":"INSERT","lineNumber":544,"content":"    // Glanz-Highlight (oberste Schicht)"},{"type":"INSERT","lineNumber":545,"content":"    drawArrowLayer(canvas, size * 0.8f, Color.White.copy(alpha = 0.3f * confidence),"},{"type":"INSERT","lineNumber":546,"content":"                  offsetX = -size * 0.02f, offsetY = -size * 0.02f)"},{"type":"INSERT","lineNumber":547,"content":"}"},{"type":"INSERT","lineNumber":548,"content":""},{"type":"INSERT","lineNumber":549,"content":"/**"},{"type":"INSERT","lineNumber":550,"content":" * Zeichnet eine einzelne Pfeil-Schicht"},{"type":"INSERT","lineNumber":551,"content":" */"},{"type":"INSERT","lineNumber":552,"content":"private fun drawArrowLayer("},{"type":"INSERT","lineNumber":553,"content":"    canvas: android.graphics.Canvas,"},{"type":"INSERT","lineNumber":554,"content":"    size: Float,"},{"type":"INSERT","lineNumber":555,"content":"    color: Color,"},{"type":"INSERT","lineNumber":556,"content":"    offsetX: Float = 0f,"},{"type":"INSERT","lineNumber":557,"content":"    offsetY: Float = 0f"},{"type":"INSERT","lineNumber":558,"content":") {"},{"type":"INSERT","lineNumber":559,"content":"    val paint = Paint().apply {"},{"type":"INSERT","lineNumber":560,"content":"        this.color = color.toArgb()"},{"type":"INSERT","lineNumber":561,"content":"        isAntiAlias = true"},{"type":"INSERT","lineNumber":562,"content":"        style = Paint.Style.FILL"},{"type":"INSERT","lineNumber":564,"content":"    "},{"type":"INSERT","lineNumber":565,"content":"    val arrowPath = Path().apply {"},{"type":"INSERT","lineNumber":566,"content":"        // Pfeilspitze"},{"type":"INSERT","lineNumber":567,"content":"        moveTo(offsetX, offsetY - size * 0.5f)"},{"type":"INSERT","lineNumber":568,"content":"        lineTo(offsetX + size * 0.3f, offsetY - size * 0.2f)"},{"type":"INSERT","lineNumber":569,"content":"        lineTo(offsetX + size * 0.15f, offsetY - size * 0.2f)"},{"type":"INSERT","lineNumber":571,"content":"        // Pfeilkörper"},{"type":"INSERT","lineNumber":572,"content":"        lineTo(offsetX + size * 0.15f, offsetY + size * 0.3f)"},{"type":"INSERT","lineNumber":573,"content":"        lineTo(offsetX - size * 0.15f, offsetY + size * 0.3f)"},{"type":"INSERT","lineNumber":574,"content":"        lineTo(offsetX - size * 0.15f, offsetY - size * 0.2f)"},{"type":"INSERT","lineNumber":577,"content":"        close()"},{"type":"INSERT","lineNumber":578,"content":"    }"},{"type":"DELETE","lineNumber":542,"oldContent":"private fun convertToFeatureLandmark(processedLandmark: com.example.arwalking.ProcessedLandmark): com.example.arwalking.FeatureLandmark {"},{"type":"DELETE","lineNumber":543,"oldContent":" */"},{"type":"DELETE","lineNumber":544,"oldContent":" * Konvertiert ProcessedLandmark zu FeatureLandmark"},{"type":"DELETE","lineNumber":545,"oldContent":"/**"},{"type":"INSERT","lineNumber":580,"content":"    canvas.drawPath(arrowPath, paint)"},{"type":"INSERT","lineNumber":581,"content":"}"},{"type":"DELETE","lineNumber":547,"oldContent":"        close()"},{"type":"DELETE","lineNumber":548,"oldContent":"        lineTo(offsetX - size * 0.3f, offsetY - size * 0.2f)"},{"type":"DELETE","lineNumber":550,"oldContent":" * Zeichnet eine einzelne Pfeil-Schicht"},{"type":"INSERT","lineNumber":584,"content":" * Konvertiert ProcessedLandmark zu FeatureLandmark"},{"type":"DELETE","lineNumber":552,"oldContent":"}"},{"type":"DELETE","lineNumber":553,"oldContent":"    )"},{"type":"DELETE","lineNumber":554,"oldContent":"        id = processedLandmark.id,"},{"type":"INSERT","lineNumber":586,"content":"private fun convertToFeatureLandmark(processedLandmark: com.example.arwalking.ProcessedLandmark): com.example.arwalking.FeatureLandmark {"},{"type":"DELETE","lineNumber":556,"oldContent":"    }"},{"type":"DELETE","lineNumber":557,"oldContent":"        "},{"type":"INSERT","lineNumber":588,"content":"        id = processedLandmark.id,"},{"type":"INSERT","lineNumber":589,"content":"        name = processedLandmark.name,"},{"type":"INSERT","lineNumber":590,"content":"        description = \"Processed landmark\","},{"type":"INSERT","lineNumber":591,"content":"        position = com.example.arwalking.Position(0.0, 0.0, 0.0),"},{"type":"INSERT","lineNumber":592,"content":"        imageUrl = \"\","},{"type":"INSERT","lineNumber":593,"content":"        confidence = 1.0f"},{"type":"INSERT","lineNumber":594,"content":"    )"},{"type":"INSERT","lineNumber":595,"content":"}"}]},{"timestamp":1754321494498,"changes":[{"type":"INSERT","lineNumber":33,"content":"@Composable"},{"type":"DELETE","lineNumber":34,"oldContent":"fun AR3DArrowOverlay("},{"type":"MODIFY","lineNumber":42,"content":"    modifier: Modifier = Modifier","oldContent":"        "},{"type":"INSERT","lineNumber":49,"content":"        "},{"type":"DELETE","lineNumber":50,"oldContent":"        // Berechne die Position des Pfeils basierend auf dem Landmark"},{"type":"INSERT","lineNumber":93,"content":"    screenHeight: Float"},{"type":"DELETE","lineNumber":94,"oldContent":"): Offset {"},{"type":"MODIFY","lineNumber":109,"content":"    ","oldContent":"    "},{"type":"MODIFY","lineNumber":165,"content":"    val positionVariation = ((landmark.position?.x ?: 0.0) % 10).toFloat() * 2f - 10f","oldContent":"        style = Paint.Style.FILL"},{"type":"DELETE","lineNumber":171,"oldContent":"        isAntiAlias = true"},{"type":"DELETE","lineNumber":172,"oldContent":"        style = Paint.Style.STROKE"},{"type":"INSERT","lineNumber":171,"content":" * Zeichnet einen 3D-Pfeil auf dem Canvas"},{"type":"INSERT","lineNumber":172,"content":" */"},{"type":"MODIFY","lineNumber":178,"content":") {","oldContent":"        moveTo(0f, -size * 0.5f)"},{"type":"INSERT","lineNumber":240,"content":"        offset(size * 0.05f, size * 0.05f)"},{"type":"DELETE","lineNumber":241,"oldContent":"    }"},{"type":"MODIFY","lineNumber":248,"content":"    ","oldContent":"    // Zeichne Hauptpfeil"},{"type":"DELETE","lineNumber":251,"oldContent":"    canvas.drawPath(arrowPath as androidx.compose.ui.graphics.Path, paint as androidx.compose.ui.graphics.Paint)"},{"type":"DELETE","lineNumber":253,"oldContent":"    "},{"type":"DELETE","lineNumber":256,"oldContent":"    // Zeichne Umriss"},{"type":"INSERT","lineNumber":255,"content":"    canvas.drawPath(arrowPath as androidx.compose.ui.graphics.Path, paint as androidx.compose.ui.graphics.Paint)"},{"type":"INSERT","lineNumber":256,"content":"    "},{"type":"INSERT","lineNumber":257,"content":"    // Zeichne Umriss"},{"type":"INSERT","lineNumber":291,"content":""},{"type":"DELETE","lineNumber":292,"oldContent":"/**"},{"type":"INSERT","lineNumber":295,"content":"@Composable"},{"type":"DELETE","lineNumber":297,"oldContent":"@Composable"},{"type":"MODIFY","lineNumber":308,"content":"    // Animation für pulsierenden Effekt","oldContent":"    // Animation für pulsierenden Effekt"},{"type":"MODIFY","lineNumber":314,"content":"            }","oldContent":"    }"},{"type":"INSERT","lineNumber":383,"content":""},{"type":"DELETE","lineNumber":385,"oldContent":"                        position = stabilizedPosition,"},{"type":"DELETE","lineNumber":387,"oldContent":"                    drawGLBArrow("},{"type":"DELETE","lineNumber":393,"oldContent":"        "},{"type":"DELETE","lineNumber":402,"oldContent":"    // Verwende besten getrackte Landmark"},{"type":"INSERT","lineNumber":403,"content":"    }"},{"type":"INSERT","lineNumber":404,"content":"    "},{"type":"DELETE","lineNumber":407,"oldContent":"    val trackingSystem = remember { ARTrackingSystem() }"},{"type":"INSERT","lineNumber":406,"content":"    "},{"type":"INSERT","lineNumber":411,"content":""},{"type":"DELETE","lineNumber":418,"oldContent":"    "},{"type":"DELETE","lineNumber":424,"oldContent":"/**"},{"type":"DELETE","lineNumber":425,"oldContent":"        landmark.name.contains(\"Prof.\", ignoreCase = true) -> 270f    // Nach links"},{"type":"DELETE","lineNumber":426,"oldContent":"        landmark.name.contains(\"office\", ignoreCase = true) ||"},{"type":"DELETE","lineNumber":427,"oldContent":"        landmark.name.contains(\"Aufzug\", ignoreCase = true) -> 0f    // Geradeaus"},{"type":"DELETE","lineNumber":428,"oldContent":"        landmark.name.contains(\"elevator\", ignoreCase = true) ||"},{"type":"DELETE","lineNumber":429,"oldContent":"        landmark.name.contains(\"Treppe\", ignoreCase = true) -> 45f     // Diagonal nach oben"},{"type":"DELETE","lineNumber":430,"oldContent":"        landmark.name.contains(\"stairs\", ignoreCase = true) ||"},{"type":"DELETE","lineNumber":431,"oldContent":"        landmark.name.contains(\"entrance\", ignoreCase = true) -> 0f    // Geradeaus"},{"type":"DELETE","lineNumber":432,"oldContent":"        landmark.name.contains(\"Entry\", ignoreCase = true) ||"},{"type":"DELETE","lineNumber":433,"oldContent":"        // Allgemeine Typen basierend auf Namen"},{"type":"INSERT","lineNumber":423,"content":"    "},{"type":"INSERT","lineNumber":424,"content":"    if (screenPosition != null) {"},{"type":"INSERT","lineNumber":425,"content":"        // Kompensiere Kamera- und Gerätebewegung für stabilere Positionierung"},{"type":"INSERT","lineNumber":426,"content":"        val stabilizedX = screenPosition.x + "},{"type":"INSERT","lineNumber":427,"content":"            sin(cameraRotation * PI / 180f).toFloat() * 10f"},{"type":"INSERT","lineNumber":428,"content":"        val stabilizedY = screenPosition.y + "},{"type":"INSERT","lineNumber":429,"content":"            cos(deviceOrientation * PI / 180f).toFloat() * 5f"},{"type":"DELETE","lineNumber":435,"oldContent":"        landmark.id == \"PT-1-697\" -> 0f     // Entry - geradeaus"},{"type":"DELETE","lineNumber":436,"oldContent":"        landmark.id == \"PT-1-566\" -> 0f     // Tür - geradeaus"},{"type":"DELETE","lineNumber":437,"oldContent":"        landmark.id == \"PT-1-86\" -> 270f    // Prof. Ludwig Büro - nach links"},{"type":"DELETE","lineNumber":438,"oldContent":"        // Spezifische Landmark-IDs aus der Route"},{"type":"DELETE","lineNumber":439,"oldContent":"    landmark: com.example.arwalking.FeatureLandmark,"},{"type":"DELETE","lineNumber":440,"oldContent":"private fun calculateSmoothArrowOrientation("},{"type":"DELETE","lineNumber":441,"oldContent":" */"},{"type":"DELETE","lineNumber":442,"oldContent":" * Berechnet sanfte Pfeil-Orientierung mit Smooth-Tracking"},{"type":"DELETE","lineNumber":443,"oldContent":"/**"},{"type":"INSERT","lineNumber":431,"content":"        return Offset("},{"type":"INSERT","lineNumber":432,"content":"            x = stabilizedX.coerceIn(0f, screenWidth),"},{"type":"INSERT","lineNumber":433,"content":"            y = stabilizedY.coerceIn(0f, screenHeight)"},{"type":"INSERT","lineNumber":434,"content":"        )"},{"type":"INSERT","lineNumber":435,"content":"    }"},{"type":"DELETE","lineNumber":445,"oldContent":"    val confidenceVariation = (1f - confidence) * 10f * sin(System.currentTimeMillis() / 1000f)"},{"type":"DELETE","lineNumber":446,"oldContent":"    // Füge Confidence-basierte Variation hinzu"},{"type":"INSERT","lineNumber":437,"content":"    // Fallback: Verwende Landmark-Position mit verbesserter Berechnung"},{"type":"INSERT","lineNumber":438,"content":"    val normalizedX = (landmark.position.x.toFloat() % 100) / 100f"},{"type":"INSERT","lineNumber":439,"content":"    val normalizedY = (landmark.position.y.toFloat() % 100) / 100f"},{"type":"DELETE","lineNumber":448,"oldContent":"    val stabilizedDirection = baseDirection - cameraRotation"},{"type":"DELETE","lineNumber":449,"oldContent":"    // Kompensiere Kamerabewegung für stabilere Orientierung"},{"type":"INSERT","lineNumber":441,"content":"    return Offset("},{"type":"INSERT","lineNumber":442,"content":"        x = normalizedX * screenWidth,"},{"type":"INSERT","lineNumber":443,"content":"        y = normalizedY * screenHeight"},{"type":"INSERT","lineNumber":444,"content":"    )"},{"type":"INSERT","lineNumber":445,"content":"}"},{"type":"INSERT","lineNumber":446,"content":""},{"type":"INSERT","lineNumber":447,"content":"/**"},{"type":"INSERT","lineNumber":448,"content":" * Berechnet sanfte Pfeil-Orientierung mit Smooth-Tracking"},{"type":"INSERT","lineNumber":449,"content":" */"},{"type":"DELETE","lineNumber":458,"oldContent":"    val confidenceVariation = (1f - confidence) * 10f * sin(System.currentTimeMillis() / 1000f)"},{"type":"DELETE","lineNumber":459,"oldContent":"    // Füge Confidence-basierte Variation hinzu"},{"type":"DELETE","lineNumber":460,"oldContent":"    "},{"type":"DELETE","lineNumber":461,"oldContent":"    val stabilizedDirection = baseDirection - cameraRotation"},{"type":"DELETE","lineNumber":462,"oldContent":"    // Kompensiere Kamerabewegung für stabilere Orientierung"},{"type":"DELETE","lineNumber":463,"oldContent":"    }"},{"type":"INSERT","lineNumber":458,"content":"        // Spezifische Landmark-IDs aus der Route"},{"type":"INSERT","lineNumber":459,"content":"        landmark.id == \"PT-1-86\" -> 270f    // Prof. Ludwig Büro - nach links"},{"type":"INSERT","lineNumber":460,"content":"        landmark.id == \"PT-1-566\" -> 0f     // Tür - geradeaus"},{"type":"INSERT","lineNumber":461,"content":"        landmark.id == \"PT-1-697\" -> 0f     // Entry - geradeaus"},{"type":"INSERT","lineNumber":462,"content":"        "},{"type":"INSERT","lineNumber":463,"content":"        // Allgemeine Typen basierend auf Namen"},{"type":"INSERT","lineNumber":470,"content":"        landmark.name.contains(\"office\", ignoreCase = true) ||"},{"type":"INSERT","lineNumber":471,"content":"        landmark.name.contains(\"Prof.\", ignoreCase = true) -> 270f    // Nach links"},{"type":"INSERT","lineNumber":472,"content":"        else -> 0f"},{"type":"DELETE","lineNumber":471,"oldContent":"        lineTo(offsetX - size * 0.15f, offsetY + size * 0.3f)"},{"type":"DELETE","lineNumber":472,"oldContent":"        lineTo(offsetX + size * 0.15f, offsetY + size * 0.3f)"},{"type":"DELETE","lineNumber":473,"oldContent":"    }"},{"type":"MODIFY","lineNumber":476,"content":"    val stabilizedDirection = baseDirection - cameraRotation","oldContent":"    canvas.drawPath(arrowPath, paint)"},{"type":"DELETE","lineNumber":478,"oldContent":"        "},{"type":"DELETE","lineNumber":481,"oldContent":"        close()"},{"type":"INSERT","lineNumber":482,"content":"}"},{"type":"DELETE","lineNumber":486,"oldContent":"    // Kompensiere Kamerabewegung für stabilere Orientierung"},{"type":"DELETE","lineNumber":489,"oldContent":"    )"},{"type":"DELETE","lineNumber":491,"oldContent":"        confidence = 1.0f"},{"type":"DELETE","lineNumber":498,"oldContent":"private fun convertToFeatureLandmark(processedLandmark: ProcessedLandmark): FeatureLandmark {"},{"type":"INSERT","lineNumber":495,"content":"    "},{"type":"INSERT","lineNumber":498,"content":"}"},{"type":"DELETE","lineNumber":510,"oldContent":"        moveTo(offsetX, offsetY - size * 0.5f)"},{"type":"INSERT","lineNumber":516,"content":"        "},{"type":"DELETE","lineNumber":524,"oldContent":"        name = processedLandmark.name,"},{"type":"INSERT","lineNumber":521,"content":"    }"},{"type":"INSERT","lineNumber":522,"content":"}"},{"type":"INSERT","lineNumber":523,"content":""},{"type":"INSERT","lineNumber":532,"content":") {"},{"type":"MODIFY","lineNumber":536,"content":"    ","oldContent":"/**"},{"type":"DELETE","lineNumber":538,"oldContent":""},{"type":"DELETE","lineNumber":540,"oldContent":"        close()"},{"type":"DELETE","lineNumber":542,"oldContent":"        lineTo(offsetX - size * 0.3f, offsetY - size * 0.2f)"},{"type":"DELETE","lineNumber":544,"oldContent":"        lineTo(offsetX - size * 0.15f, offsetY - size * 0.2f)"},{"type":"DELETE","lineNumber":546,"oldContent":"        "},{"type":"DELETE","lineNumber":552,"oldContent":"    return com.example.arwalking.FeatureLandmark("},{"type":"DELETE","lineNumber":556,"oldContent":"/**"},{"type":"DELETE","lineNumber":559,"oldContent":"}"},{"type":"DELETE","lineNumber":564,"oldContent":"        position = com.example.arwalking.Position(0.0, 0.0, 0.0),"},{"type":"DELETE","lineNumber":568,"oldContent":"        id = processedLandmark.id,"},{"type":"DELETE","lineNumber":570,"oldContent":"private fun convertToFeatureLandmark(processedLandmark: com.example.arwalking.ProcessedLandmark): com.example.arwalking.FeatureLandmark {"},{"type":"DELETE","lineNumber":572,"oldContent":" * Konvertiert ProcessedLandmark zu FeatureLandmark"},{"type":"DELETE","lineNumber":574,"oldContent":"}"},{"type":"DELETE","lineNumber":576,"oldContent":"    canvas.drawPath(arrowPath, paint)"},{"type":"DELETE","lineNumber":579,"oldContent":"        close()"},{"type":"DELETE","lineNumber":581,"oldContent":"        lineTo(offsetX - size * 0.15f, offsetY - size * 0.2f)"},{"type":"DELETE","lineNumber":583,"oldContent":"        lineTo(offsetX - size * 0.15f, offsetY + size * 0.3f)"},{"type":"DELETE","lineNumber":585,"oldContent":"        lineTo(offsetX + size * 0.15f, offsetY + size * 0.3f)"},{"type":"DELETE","lineNumber":587,"oldContent":"        // Pfeilkörper"},{"type":"INSERT","lineNumber":570,"content":"        "},{"type":"INSERT","lineNumber":571,"content":"        // Pfeilkörper"},{"type":"INSERT","lineNumber":572,"content":"        lineTo(offsetX + size * 0.15f, offsetY + size * 0.3f)"},{"type":"INSERT","lineNumber":573,"content":"        lineTo(offsetX - size * 0.15f, offsetY + size * 0.3f)"},{"type":"INSERT","lineNumber":574,"content":"        lineTo(offsetX - size * 0.15f, offsetY - size * 0.2f)"},{"type":"INSERT","lineNumber":575,"content":"        lineTo(offsetX - size * 0.3f, offsetY - size * 0.2f)"},{"type":"INSERT","lineNumber":576,"content":"        "},{"type":"INSERT","lineNumber":577,"content":"        close()"},{"type":"INSERT","lineNumber":578,"content":"    }"},{"type":"INSERT","lineNumber":579,"content":"    "},{"type":"INSERT","lineNumber":580,"content":"    canvas.drawPath(arrowPath, paint)"},{"type":"INSERT","lineNumber":581,"content":"}"},{"type":"INSERT","lineNumber":582,"content":""},{"type":"INSERT","lineNumber":583,"content":"/**"},{"type":"INSERT","lineNumber":584,"content":" * Konvertiert ProcessedLandmark zu FeatureLandmark"},{"type":"INSERT","lineNumber":585,"content":" */"},{"type":"INSERT","lineNumber":586,"content":"private fun convertToFeatureLandmark(processedLandmark: com.example.arwalking.ProcessedLandmark): com.example.arwalking.FeatureLandmark {"},{"type":"INSERT","lineNumber":587,"content":"    return com.example.arwalking.FeatureLandmark("},{"type":"INSERT","lineNumber":588,"content":"        id = processedLandmark.id,"},{"type":"INSERT","lineNumber":589,"content":"        name = processedLandmark.name,"},{"type":"INSERT","lineNumber":590,"content":"        description = \"Processed landmark\","},{"type":"INSERT","lineNumber":591,"content":"        position = com.example.arwalking.Position(0.0, 0.0, 0.0),"},{"type":"INSERT","lineNumber":592,"content":"        imageUrl = \"\","},{"type":"INSERT","lineNumber":593,"content":"        confidence = 1.0f"},{"type":"INSERT","lineNumber":594,"content":"    )"},{"type":"INSERT","lineNumber":595,"content":"}"}]},{"timestamp":1754321502885,"changes":[{"type":"MODIFY","lineNumber":24,"content":"import com.example.arwalking.ARTrackingSystem","oldContent":"/**"},{"type":"INSERT","lineNumber":36,"content":"    isFeatureMappingEnabled: Boolean,"},{"type":"INSERT","lineNumber":37,"content":"    screenWidth: Float,"},{"type":"DELETE","lineNumber":37,"oldContent":"    modifier: Modifier = Modifier"},{"type":"DELETE","lineNumber":38,"oldContent":") {"},{"type":"MODIFY","lineNumber":108,"content":"    val y = landmark.position?.y?.toFloat() ?: 0f","oldContent":"    return angle % 360f"},{"type":"INSERT","lineNumber":253,"content":"    "},{"type":"INSERT","lineNumber":254,"content":"    // Zeichne Hauptpfeil"},{"type":"DELETE","lineNumber":255,"oldContent":"    "},{"type":"DELETE","lineNumber":257,"oldContent":"    // Zeichne Hauptpfeil"},{"type":"INSERT","lineNumber":307,"content":"    "},{"type":"DELETE","lineNumber":308,"oldContent":"    // Animation für pulsierenden Effekt"},{"type":"DELETE","lineNumber":400,"oldContent":"    }"},{"type":"DELETE","lineNumber":402,"oldContent":"    "},{"type":"INSERT","lineNumber":403,"content":"    }"},{"type":"INSERT","lineNumber":406,"content":"    "},{"type":"MODIFY","lineNumber":411,"content":"","oldContent":"    // Füge Confidence-basierte Variation hinzu"},{"type":"MODIFY","lineNumber":423,"content":"    ","oldContent":"    "},{"type":"INSERT","lineNumber":430,"content":"        "},{"type":"DELETE","lineNumber":434,"oldContent":"    confidence: Float,"},{"type":"INSERT","lineNumber":436,"content":"    "},{"type":"DELETE","lineNumber":437,"oldContent":"    val normalizedX = (landmark.position.x.toFloat() % 100) / 100f"},{"type":"MODIFY","lineNumber":438,"content":"    val normalizedX = ((landmark.position?.x?.toFloat() ?: 0f) % 100) / 100f","oldContent":"    val normalizedY = (landmark.position.y.toFloat() % 100) / 100f"},{"type":"INSERT","lineNumber":439,"content":"    val normalizedY = ((landmark.position?.y?.toFloat() ?: 0f) % 100) / 100f"},{"type":"INSERT","lineNumber":440,"content":"    "},{"type":"DELETE","lineNumber":444,"oldContent":"}"},{"type":"DELETE","lineNumber":447,"oldContent":"    }"},{"type":"DELETE","lineNumber":454,"oldContent":"        landmark.name.contains(\"elevator\", ignoreCase = true) ||"},{"type":"DELETE","lineNumber":455,"oldContent":"}"},{"type":"INSERT","lineNumber":454,"content":"): Float {"},{"type":"INSERT","lineNumber":455,"content":"    "},{"type":"MODIFY","lineNumber":468,"content":"        landmark.name.contains(\"elevator\", ignoreCase = true) ||","oldContent":"    )"},{"type":"DELETE","lineNumber":471,"oldContent":"        confidence = 1.0f"},{"type":"DELETE","lineNumber":474,"oldContent":"        name = processedLandmark.name,"},{"type":"INSERT","lineNumber":473,"content":"    }"},{"type":"INSERT","lineNumber":474,"content":"    "},{"type":"DELETE","lineNumber":480,"oldContent":"}"},{"type":"INSERT","lineNumber":482,"content":"}"},{"type":"DELETE","lineNumber":491,"oldContent":"    "},{"type":"MODIFY","lineNumber":495,"content":"    ","oldContent":"}"},{"type":"INSERT","lineNumber":498,"content":"}"},{"type":"DELETE","lineNumber":512,"oldContent":"        "},{"type":"INSERT","lineNumber":516,"content":"        "},{"type":"DELETE","lineNumber":518,"oldContent":"    }"},{"type":"DELETE","lineNumber":520,"oldContent":"}"},{"type":"DELETE","lineNumber":522,"oldContent":""},{"type":"INSERT","lineNumber":521,"content":"    }"},{"type":"INSERT","lineNumber":522,"content":"}"},{"type":"INSERT","lineNumber":523,"content":""},{"type":"MODIFY","lineNumber":532,"content":") {","oldContent":") {"},{"type":"INSERT","lineNumber":560,"content":"        this.color = color.toArgb()"},{"type":"INSERT","lineNumber":561,"content":"        isAntiAlias = true"},{"type":"INSERT","lineNumber":562,"content":"        style = Paint.Style.FILL"},{"type":"INSERT","lineNumber":563,"content":"    }"},{"type":"INSERT","lineNumber":564,"content":"    "},{"type":"INSERT","lineNumber":565,"content":"    val arrowPath = Path().apply {"},{"type":"INSERT","lineNumber":566,"content":"        // Pfeilspitze"},{"type":"INSERT","lineNumber":567,"content":"        moveTo(offsetX, offsetY - size * 0.5f)"},{"type":"INSERT","lineNumber":568,"content":"        lineTo(offsetX + size * 0.3f, offsetY - size * 0.2f)"},{"type":"INSERT","lineNumber":569,"content":"        lineTo(offsetX + size * 0.15f, offsetY - size * 0.2f)"},{"type":"DELETE","lineNumber":562,"oldContent":"        this.color = color.toArgb()"},{"type":"DELETE","lineNumber":565,"oldContent":"}"},{"type":"DELETE","lineNumber":568,"oldContent":"        confidence = 1.0f"},{"type":"DELETE","lineNumber":571,"oldContent":"        position = com.example.arwalking.Position(0.0, 0.0, 0.0),"},{"type":"DELETE","lineNumber":573,"oldContent":"        description = \"Processed landmark\","},{"type":"DELETE","lineNumber":576,"oldContent":"        id = processedLandmark.id,"},{"type":"DELETE","lineNumber":579,"oldContent":"private fun convertToFeatureLandmark(processedLandmark: com.example.arwalking.ProcessedLandmark): com.example.arwalking.FeatureLandmark {"},{"type":"INSERT","lineNumber":585,"content":" */"},{"type":"INSERT","lineNumber":586,"content":"private fun convertToFeatureLandmark(processedLandmark: com.example.arwalking.ProcessedLandmark): com.example.arwalking.FeatureLandmark {"},{"type":"INSERT","lineNumber":587,"content":"    return com.example.arwalking.FeatureLandmark("},{"type":"INSERT","lineNumber":588,"content":"        id = processedLandmark.id,"},{"type":"INSERT","lineNumber":589,"content":"        name = processedLandmark.name,"},{"type":"INSERT","lineNumber":590,"content":"        description = \"Processed landmark\","},{"type":"INSERT","lineNumber":591,"content":"        position = com.example.arwalking.Position(0.0, 0.0, 0.0),"},{"type":"INSERT","lineNumber":592,"content":"        imageUrl = \"\","},{"type":"INSERT","lineNumber":593,"content":"        confidence = 1.0f"},{"type":"INSERT","lineNumber":594,"content":"    )"},{"type":"INSERT","lineNumber":595,"content":"}"}]},{"timestamp":1754321553843,"changes":[{"type":"DELETE","lineNumber":4,"oldContent":"import android.graphics.Paint"},{"type":"INSERT","lineNumber":7,"content":"import androidx.compose.ui.graphics.nativeCanvas"},{"type":"MODIFY","lineNumber":38,"content":"    screenHeight: Float,","oldContent":"    screenHeight: Float,"},{"type":"MODIFY","lineNumber":170,"content":"/**","oldContent":"        strokeWidth = 3f"},{"type":"MODIFY","lineNumber":255,"content":"    canvas.drawPath(arrowPath as androidx.compose.ui.graphics.Path, paint as androidx.compose.ui.graphics.Paint)","oldContent":"    canvas.drawPath(arrowPath as androidx.compose.ui.graphics.Path, paint as androidx.compose.ui.graphics.Paint)"},{"type":"DELETE","lineNumber":401,"oldContent":"    }"},{"type":"INSERT","lineNumber":403,"content":"    }"},{"type":"MODIFY","lineNumber":406,"content":"    ","oldContent":"    "},{"type":"INSERT","lineNumber":422,"content":"): Offset {"},{"type":"DELETE","lineNumber":423,"oldContent":"    "},{"type":"MODIFY","lineNumber":441,"content":"    return Offset(","oldContent":"    return Offset("},{"type":"MODIFY","lineNumber":445,"content":"}","oldContent":"private fun calculateSmoothArrowOrientation("},{"type":"MODIFY","lineNumber":473,"content":"    }","oldContent":"    }"},{"type":"MODIFY","lineNumber":482,"content":"}","oldContent":"}"},{"type":"MODIFY","lineNumber":495,"content":"    ","oldContent":"    "},{"type":"MODIFY","lineNumber":498,"content":"}","oldContent":"}"},{"type":"MODIFY","lineNumber":516,"content":"        ","oldContent":"        "},{"type":"DELETE","lineNumber":519,"oldContent":"    }"},{"type":"INSERT","lineNumber":520,"content":"        canvas.restore()"},{"type":"INSERT","lineNumber":521,"content":"    }"},{"type":"DELETE","lineNumber":523,"oldContent":"        canvas.restore()"},{"type":"INSERT","lineNumber":531,"content":"    confidence: Float"},{"type":"DELETE","lineNumber":532,"oldContent":") {"},{"type":"DELETE","lineNumber":557,"oldContent":"}"},{"type":"DELETE","lineNumber":558,"oldContent":"    )"},{"type":"DELETE","lineNumber":559,"oldContent":"        imageUrl = \"\","},{"type":"INSERT","lineNumber":557,"content":"    offsetY: Float = 0f"},{"type":"INSERT","lineNumber":558,"content":") {"},{"type":"INSERT","lineNumber":559,"content":"    val paint = Paint().apply {"},{"type":"DELETE","lineNumber":561,"oldContent":"        "},{"type":"DELETE","lineNumber":563,"oldContent":"        // Pfeilkörper"},{"type":"DELETE","lineNumber":566,"oldContent":"        lineTo(offsetX + size * 0.15f, offsetY + size * 0.3f)"},{"type":"DELETE","lineNumber":568,"oldContent":"        lineTo(offsetX - size * 0.15f, offsetY + size * 0.3f)"},{"type":"DELETE","lineNumber":571,"oldContent":"        lineTo(offsetX - size * 0.15f, offsetY - size * 0.2f)"},{"type":"DELETE","lineNumber":573,"oldContent":"        lineTo(offsetX - size * 0.3f, offsetY - size * 0.2f)"},{"type":"INSERT","lineNumber":571,"content":"        // Pfeilkörper"},{"type":"INSERT","lineNumber":572,"content":"        lineTo(offsetX + size * 0.15f, offsetY + size * 0.3f)"},{"type":"INSERT","lineNumber":573,"content":"        lineTo(offsetX - size * 0.15f, offsetY + size * 0.3f)"},{"type":"INSERT","lineNumber":574,"content":"        lineTo(offsetX - size * 0.15f, offsetY - size * 0.2f)"},{"type":"INSERT","lineNumber":575,"content":"        lineTo(offsetX - size * 0.3f, offsetY - size * 0.2f)"},{"type":"INSERT","lineNumber":576,"content":"        "},{"type":"DELETE","lineNumber":582,"oldContent":"    )"},{"type":"DELETE","lineNumber":583,"oldContent":"        imageUrl = \"\","},{"type":"DELETE","lineNumber":584,"oldContent":"        position = com.example.arwalking.Position(0.0, 0.0, 0.0),"},{"type":"DELETE","lineNumber":585,"oldContent":"        description = \"Processed landmark\","},{"type":"DELETE","lineNumber":586,"oldContent":"        name = processedLandmark.name,"},{"type":"DELETE","lineNumber":587,"oldContent":"        id = processedLandmark.id,"},{"type":"INSERT","lineNumber":582,"content":""},{"type":"INSERT","lineNumber":583,"content":"/**"},{"type":"INSERT","lineNumber":584,"content":" * Konvertiert ProcessedLandmark zu FeatureLandmark"},{"type":"DELETE","lineNumber":589,"oldContent":"    return com.example.arwalking.FeatureLandmark("},{"type":"INSERT","lineNumber":587,"content":"    return com.example.arwalking.FeatureLandmark("},{"type":"INSERT","lineNumber":588,"content":"        id = processedLandmark.id,"},{"type":"INSERT","lineNumber":589,"content":"        name = processedLandmark.name,"},{"type":"INSERT","lineNumber":590,"content":"        description = \"Processed landmark\","},{"type":"INSERT","lineNumber":591,"content":"        position = com.example.arwalking.Position(0.0, 0.0, 0.0),"},{"type":"INSERT","lineNumber":592,"content":"        imageUrl = \"\""},{"type":"INSERT","lineNumber":593,"content":"    )"},{"type":"INSERT","lineNumber":594,"content":"}"}]},{"timestamp":1754330320449,"changes":[{"type":"MODIFY","lineNumber":7,"content":"import androidx.compose.ui.graphics.nativeCanvas","oldContent":"import androidx.compose.ui.graphics.nativeCanvas"},{"type":"MODIFY","lineNumber":25,"content":"import com.example.arwalking.TrackedLandmark","oldContent":" * 3D-Pfeil Overlay für AR-Navigation"},{"type":"INSERT","lineNumber":37,"content":"    screenWidth: Float,"},{"type":"DELETE","lineNumber":38,"oldContent":"    screenHeight: Float,"},{"type":"MODIFY","lineNumber":126,"content":"    totalSteps: Int = 3,","oldContent":"    totalSteps: Int = 3"},{"type":"INSERT","lineNumber":127,"content":"    currentInstruction: String? = null"},{"type":"DELETE","lineNumber":128,"oldContent":"    // Berechne Richtung basierend auf Landmark-Typ und Position"},{"type":"DELETE","lineNumber":129,"oldContent":"    val baseAngle = when {"},{"type":"DELETE","lineNumber":130,"oldContent":"        // Prof. Ludwig Büro (PT-1-86) - Ausgang nach links"},{"type":"DELETE","lineNumber":131,"oldContent":"        landmark.id == \"PT-1-86\" -> 270f // Nach links"},{"type":"DELETE","lineNumber":132,"oldContent":"        "},{"type":"DELETE","lineNumber":133,"oldContent":"        // Türen/Eingänge - geradeaus durch (z.B. PT-1-566, PT-1-697)"},{"type":"DELETE","lineNumber":134,"oldContent":"        landmark.id.contains(\"PT-1-566\") || landmark.id.contains(\"PT-1-697\") -> 0f // Geradeaus"},{"type":"DELETE","lineNumber":135,"oldContent":"        "},{"type":"DELETE","lineNumber":136,"oldContent":"        // Allgemeine Türen basierend auf Typ"},{"type":"DELETE","lineNumber":137,"oldContent":"        landmark.name.contains(\"Tür\", ignoreCase = true) || "},{"type":"DELETE","lineNumber":138,"oldContent":"        landmark.name.contains(\"door\", ignoreCase = true) ||"},{"type":"DELETE","lineNumber":139,"oldContent":"        landmark.name.contains(\"Entry\", ignoreCase = true) -> 0f // Geradeaus"},{"type":"DELETE","lineNumber":140,"oldContent":"        "},{"type":"DELETE","lineNumber":141,"oldContent":"        // Büros - nach links"},{"type":"DELETE","lineNumber":142,"oldContent":"        landmark.name.contains(\"Prof.\", ignoreCase = true) ||"},{"type":"DELETE","lineNumber":143,"oldContent":"        landmark.name.contains(\"Office\", ignoreCase = true) -> 270f // Nach links"},{"type":"DELETE","lineNumber":144,"oldContent":"        "},{"type":"DELETE","lineNumber":145,"oldContent":"        // Treppen - nach oben/unten"},{"type":"DELETE","lineNumber":146,"oldContent":"        landmark.name.contains(\"stairs\", ignoreCase = true) ||"},{"type":"DELETE","lineNumber":147,"oldContent":"        landmark.name.contains(\"Treppe\", ignoreCase = true) -> 45f // Diagonal nach oben"},{"type":"DELETE","lineNumber":148,"oldContent":"        "},{"type":"DELETE","lineNumber":149,"oldContent":"        // Aufzüge - geradeaus"},{"type":"DELETE","lineNumber":150,"oldContent":"        landmark.name.contains(\"elevator\", ignoreCase = true) ||"},{"type":"DELETE","lineNumber":151,"oldContent":"        landmark.name.contains(\"Aufzug\", ignoreCase = true) -> 0f // Geradeaus"},{"type":"DELETE","lineNumber":152,"oldContent":"        "},{"type":"DELETE","lineNumber":153,"oldContent":"        else -> {"},{"type":"DELETE","lineNumber":154,"oldContent":"            // Dynamische Berechnung basierend auf Route-Fortschritt"},{"type":"DELETE","lineNumber":155,"oldContent":"            val progress = currentStep.toFloat() / totalSteps.toFloat()"},{"type":"DELETE","lineNumber":156,"oldContent":"            when {"},{"type":"DELETE","lineNumber":157,"oldContent":"                progress < 0.33f -> 270f // Anfang: nach links"},{"type":"DELETE","lineNumber":158,"oldContent":"                progress < 0.66f -> 0f   // Mitte: geradeaus"},{"type":"DELETE","lineNumber":159,"oldContent":"                else -> 90f              // Ende: nach rechts"},{"type":"INSERT","lineNumber":129,"content":"    // Priorität: Verwende Navigationsanweisung wenn verfügbar"},{"type":"INSERT","lineNumber":130,"content":"    val baseAngle = if (currentInstruction != null) {"},{"type":"INSERT","lineNumber":131,"content":"        val lowerInstruction = currentInstruction.lowercase()"},{"type":"INSERT","lineNumber":132,"content":"        when {"},{"type":"INSERT","lineNumber":133,"content":"            lowerInstruction.contains(\"rechts\") || lowerInstruction.contains(\"right\") -> 90f // Nach rechts"},{"type":"INSERT","lineNumber":134,"content":"            lowerInstruction.contains(\"links\") || lowerInstruction.contains(\"left\") -> 270f // Nach links"},{"type":"INSERT","lineNumber":135,"content":"            lowerInstruction.contains(\"tür\") || lowerInstruction.contains(\"door\") || "},{"type":"INSERT","lineNumber":136,"content":"            lowerInstruction.contains(\"eingang\") || lowerInstruction.contains(\"entrance\") ||"},{"type":"INSERT","lineNumber":137,"content":"            lowerInstruction.contains(\"durch\") || lowerInstruction.contains(\"through\") -> 0f // Geradeaus durch Tür"},{"type":"INSERT","lineNumber":138,"content":"            else -> 0f // Standard: geradeaus"},{"type":"INSERT","lineNumber":139,"content":"        }"},{"type":"INSERT","lineNumber":140,"content":"    } else {"},{"type":"INSERT","lineNumber":141,"content":"        // Fallback: Berechne Richtung basierend auf Landmark-Typ und Position"},{"type":"INSERT","lineNumber":142,"content":"        when {"},{"type":"INSERT","lineNumber":143,"content":"            // Prof. Ludwig Büro (PT-1-86) - Ausgang nach links"},{"type":"INSERT","lineNumber":144,"content":"            landmark.id == \"PT-1-86\" -> 270f // Nach links"},{"type":"INSERT","lineNumber":145,"content":"            "},{"type":"INSERT","lineNumber":146,"content":"            // Türen/Eingänge - geradeaus durch (z.B. PT-1-566, PT-1-697)"},{"type":"INSERT","lineNumber":147,"content":"            landmark.id.contains(\"PT-1-566\") || landmark.id.contains(\"PT-1-697\") -> 0f // Geradeaus"},{"type":"INSERT","lineNumber":148,"content":"            "},{"type":"INSERT","lineNumber":149,"content":"            // Allgemeine Türen basierend auf Typ"},{"type":"INSERT","lineNumber":150,"content":"            landmark.name.contains(\"Tür\", ignoreCase = true) || "},{"type":"INSERT","lineNumber":151,"content":"            landmark.name.contains(\"door\", ignoreCase = true) ||"},{"type":"INSERT","lineNumber":152,"content":"            landmark.name.contains(\"Entry\", ignoreCase = true) -> 0f // Geradeaus"},{"type":"INSERT","lineNumber":153,"content":"            "},{"type":"INSERT","lineNumber":154,"content":"            // Büros - nach links"},{"type":"INSERT","lineNumber":155,"content":"            landmark.name.contains(\"Prof.\", ignoreCase = true) ||"},{"type":"INSERT","lineNumber":156,"content":"            landmark.name.contains(\"Office\", ignoreCase = true) -> 270f // Nach links"},{"type":"INSERT","lineNumber":157,"content":"            "},{"type":"INSERT","lineNumber":158,"content":"            // Treppen - nach oben/unten"},{"type":"INSERT","lineNumber":159,"content":"            landmark.name.contains(\"stairs\", ignoreCase = true) ||"},{"type":"INSERT","lineNumber":160,"content":"            landmark.name.contains(\"Treppe\", ignoreCase = true) -> 45f // Diagonal nach oben"},{"type":"INSERT","lineNumber":161,"content":"            "},{"type":"INSERT","lineNumber":162,"content":"            // Aufzüge - geradeaus"},{"type":"INSERT","lineNumber":163,"content":"            landmark.name.contains(\"elevator\", ignoreCase = true) ||"},{"type":"INSERT","lineNumber":164,"content":"            landmark.name.contains(\"Aufzug\", ignoreCase = true) -> 0f // Geradeaus"},{"type":"INSERT","lineNumber":165,"content":"            "},{"type":"INSERT","lineNumber":166,"content":"            else -> {"},{"type":"INSERT","lineNumber":167,"content":"                // Dynamische Berechnung basierend auf Route-Fortschritt"},{"type":"INSERT","lineNumber":168,"content":"                val progress = currentStep.toFloat() / totalSteps.toFloat()"},{"type":"INSERT","lineNumber":169,"content":"                when {"},{"type":"INSERT","lineNumber":170,"content":"                    progress < 0.33f -> 270f // Anfang: nach links"},{"type":"INSERT","lineNumber":171,"content":"                    progress < 0.66f -> 0f   // Mitte: geradeaus"},{"type":"INSERT","lineNumber":172,"content":"                    else -> 90f              // Ende: nach rechts"},{"type":"INSERT","lineNumber":173,"content":"                }"},{"type":"INSERT","lineNumber":268,"content":"    // Zeichne Hauptpfeil"},{"type":"DELETE","lineNumber":255,"oldContent":"    canvas.drawPath(arrowPath as androidx.compose.ui.graphics.Path, paint as androidx.compose.ui.graphics.Paint)"},{"type":"DELETE","lineNumber":402,"oldContent":"    }"},{"type":"INSERT","lineNumber":417,"content":"    }"},{"type":"INSERT","lineNumber":419,"content":"    fun isModelLoaded(): Boolean = isLoaded"},{"type":"DELETE","lineNumber":406,"oldContent":"    "},{"type":"DELETE","lineNumber":409,"oldContent":"    "},{"type":"INSERT","lineNumber":425,"content":""},{"type":"INSERT","lineNumber":454,"content":"    "},{"type":"DELETE","lineNumber":441,"oldContent":"    return Offset("},{"type":"INSERT","lineNumber":486,"content":"        else -> 0f"},{"type":"DELETE","lineNumber":473,"oldContent":"    }"},{"type":"INSERT","lineNumber":495,"content":"    return (stabilizedDirection + confidenceVariation) % 360f"},{"type":"DELETE","lineNumber":482,"oldContent":"}"},{"type":"INSERT","lineNumber":508,"content":"    // das GLB-Modell mit einer 3D-Rendering-Engine gerendert"},{"type":"DELETE","lineNumber":495,"oldContent":"    "},{"type":"INSERT","lineNumber":511,"content":"    drawEnhanced3DArrow(position, orientation, confidence, size)"},{"type":"DELETE","lineNumber":498,"oldContent":"}"},{"type":"INSERT","lineNumber":529,"content":"        canvas.rotate(orientation)"},{"type":"DELETE","lineNumber":516,"oldContent":"        "},{"type":"DELETE","lineNumber":519,"oldContent":"        canvas.restore()"},{"type":"INSERT","lineNumber":534,"content":"        canvas.restore()"},{"type":"INSERT","lineNumber":581,"content":"        moveTo(offsetX, offsetY - size * 0.5f)"},{"type":"INSERT","lineNumber":582,"content":"        lineTo(offsetX + size * 0.3f, offsetY - size * 0.2f)"},{"type":"INSERT","lineNumber":583,"content":"        lineTo(offsetX + size * 0.15f, offsetY - size * 0.2f)"},{"type":"INSERT","lineNumber":584,"content":"        "},{"type":"DELETE","lineNumber":569,"oldContent":"        moveTo(offsetX, offsetY - size * 0.5f)"},{"type":"DELETE","lineNumber":572,"oldContent":"        lineTo(offsetX + size * 0.3f, offsetY - size * 0.2f)"},{"type":"DELETE","lineNumber":574,"oldContent":"        lineTo(offsetX + size * 0.15f, offsetY - size * 0.2f)"},{"type":"DELETE","lineNumber":576,"oldContent":"        "},{"type":"INSERT","lineNumber":599,"content":" */"},{"type":"INSERT","lineNumber":600,"content":"private fun convertToFeatureLandmark(processedLandmark: com.example.arwalking.ProcessedLandmark): com.example.arwalking.FeatureLandmark {"},{"type":"DELETE","lineNumber":587,"oldContent":" */"},{"type":"DELETE","lineNumber":590,"oldContent":"private fun convertToFeatureLandmark(processedLandmark: com.example.arwalking.ProcessedLandmark): com.example.arwalking.FeatureLandmark {"},{"type":"DELETE","lineNumber":592,"oldContent":"}"},{"type":"INSERT","lineNumber":608,"content":"}"}]},{"timestamp":1754330330125,"changes":[{"type":"INSERT","lineNumber":6,"content":"import androidx.compose.foundation.Canvas"},{"type":"DELETE","lineNumber":7,"oldContent":"import androidx.compose.ui.graphics.nativeCanvas"},{"type":"DELETE","lineNumber":161,"oldContent":"            }"},{"type":"DELETE","lineNumber":163,"oldContent":"        }"},{"type":"DELETE","lineNumber":165,"oldContent":"    }"},{"type":"DELETE","lineNumber":167,"oldContent":"    "},{"type":"DELETE","lineNumber":169,"oldContent":"    // Füge leichte Variation basierend auf Position hinzu"},{"type":"DELETE","lineNumber":171,"oldContent":"    val positionVariation = ((landmark.position?.x ?: 0.0) % 10).toFloat() * 2f - 10f"},{"type":"DELETE","lineNumber":173,"oldContent":"    "},{"type":"DELETE","lineNumber":175,"oldContent":"    return (baseAngle + positionVariation) % 360f"},{"type":"DELETE","lineNumber":177,"oldContent":"}"},{"type":"DELETE","lineNumber":179,"oldContent":""},{"type":"DELETE","lineNumber":181,"oldContent":"/**"},{"type":"DELETE","lineNumber":183,"oldContent":" * Zeichnet einen 3D-Pfeil auf dem Canvas"},{"type":"DELETE","lineNumber":185,"oldContent":" */"},{"type":"INSERT","lineNumber":174,"content":"            }"},{"type":"INSERT","lineNumber":175,"content":"        }"},{"type":"INSERT","lineNumber":176,"content":"    }"},{"type":"INSERT","lineNumber":177,"content":"    "},{"type":"INSERT","lineNumber":178,"content":"    // Füge leichte Variation basierend auf Position hinzu"},{"type":"INSERT","lineNumber":179,"content":"    val positionVariation = ((landmark.position?.x ?: 0.0) % 10).toFloat() * 2f - 10f"},{"type":"INSERT","lineNumber":180,"content":"    "},{"type":"INSERT","lineNumber":181,"content":"    return (baseAngle + positionVariation) % 360f"},{"type":"INSERT","lineNumber":182,"content":"}"},{"type":"INSERT","lineNumber":183,"content":""},{"type":"INSERT","lineNumber":184,"content":"/**"},{"type":"INSERT","lineNumber":185,"content":" * Zeichnet einen 3D-Pfeil auf dem Canvas"},{"type":"INSERT","lineNumber":186,"content":" */"},{"type":"INSERT","lineNumber":268,"content":"    // Zeichne Hauptpfeil"},{"type":"DELETE","lineNumber":281,"oldContent":"    // Zeichne Hauptpfeil"},{"type":"MODIFY","lineNumber":317,"content":"    modifier: Modifier = Modifier,","oldContent":"    modifier: Modifier = Modifier"},{"type":"INSERT","lineNumber":318,"content":"    currentInstruction: String? = null"},{"type":"INSERT","lineNumber":418,"content":"    }"},{"type":"INSERT","lineNumber":420,"content":"    fun isModelLoaded(): Boolean = isLoaded"},{"type":"INSERT","lineNumber":426,"content":""},{"type":"DELETE","lineNumber":428,"oldContent":"    }"},{"type":"DELETE","lineNumber":431,"oldContent":"    fun isModelLoaded(): Boolean = isLoaded"},{"type":"DELETE","lineNumber":438,"oldContent":""},{"type":"INSERT","lineNumber":455,"content":"    "},{"type":"DELETE","lineNumber":463,"oldContent":"        imageUrl = \"\","},{"type":"DELETE","lineNumber":464,"oldContent":"        position = Position(0.0, 0.0, 0.0),"},{"type":"INSERT","lineNumber":465,"content":"private fun calculateSmoothArrowOrientation("},{"type":"INSERT","lineNumber":466,"content":"    landmark: com.example.arwalking.FeatureLandmark,"},{"type":"DELETE","lineNumber":467,"oldContent":"    "},{"type":"INSERT","lineNumber":487,"content":"        else -> 0f"},{"type":"INSERT","lineNumber":496,"content":"    return (stabilizedDirection + confidenceVariation) % 360f"},{"type":"DELETE","lineNumber":498,"oldContent":"        else -> 0f"},{"type":"INSERT","lineNumber":509,"content":"    // das GLB-Modell mit einer 3D-Rendering-Engine gerendert"},{"type":"DELETE","lineNumber":508,"oldContent":"    return (stabilizedDirection + confidenceVariation) % 360f"},{"type":"INSERT","lineNumber":512,"content":"    drawEnhanced3DArrow(position, orientation, confidence, size)"},{"type":"DELETE","lineNumber":520,"oldContent":"    // das GLB-Modell mit einer 3D-Rendering-Engine gerendert"},{"type":"DELETE","lineNumber":524,"oldContent":"    drawEnhanced3DArrow(position, orientation, confidence, size)"},{"type":"INSERT","lineNumber":530,"content":"        canvas.rotate(orientation)"},{"type":"INSERT","lineNumber":535,"content":"        canvas.restore()"},{"type":"DELETE","lineNumber":541,"oldContent":"        canvas.rotate(orientation)"},{"type":"DELETE","lineNumber":547,"oldContent":"        canvas.restore()"},{"type":"DELETE","lineNumber":566,"oldContent":"}"},{"type":"DELETE","lineNumber":567,"oldContent":"    )"},{"type":"DELETE","lineNumber":568,"oldContent":"        confidence = 1.0f"},{"type":"DELETE","lineNumber":569,"oldContent":"        imageUrl = \"\","},{"type":"DELETE","lineNumber":570,"oldContent":"        description = \"Processed landmark\","},{"type":"INSERT","lineNumber":567,"content":"private fun drawArrowLayer("},{"type":"INSERT","lineNumber":568,"content":"    canvas: android.graphics.Canvas,"},{"type":"INSERT","lineNumber":569,"content":"    size: Float,"},{"type":"INSERT","lineNumber":570,"content":"    color: Color,"},{"type":"INSERT","lineNumber":571,"content":"    offsetX: Float = 0f,"},{"type":"INSERT","lineNumber":582,"content":"        moveTo(offsetX, offsetY - size * 0.5f)"},{"type":"INSERT","lineNumber":583,"content":"        lineTo(offsetX + size * 0.3f, offsetY - size * 0.2f)"},{"type":"INSERT","lineNumber":584,"content":"        lineTo(offsetX + size * 0.15f, offsetY - size * 0.2f)"},{"type":"INSERT","lineNumber":585,"content":"        "},{"type":"INSERT","lineNumber":593,"content":"    }"},{"type":"INSERT","lineNumber":594,"content":"    "},{"type":"INSERT","lineNumber":595,"content":"    canvas.drawPath(arrowPath, paint)"},{"type":"DELETE","lineNumber":589,"oldContent":"        confidence = 1.0f"},{"type":"DELETE","lineNumber":590,"oldContent":"        imageUrl = \"\","},{"type":"DELETE","lineNumber":591,"oldContent":"        moveTo(offsetX, offsetY - size * 0.5f)"},{"type":"DELETE","lineNumber":592,"oldContent":"        description = \"Processed landmark\","},{"type":"DELETE","lineNumber":593,"oldContent":"        lineTo(offsetX + size * 0.3f, offsetY - size * 0.2f)"},{"type":"DELETE","lineNumber":595,"oldContent":"        lineTo(offsetX + size * 0.15f, offsetY - size * 0.2f)"},{"type":"DELETE","lineNumber":597,"oldContent":"        "},{"type":"INSERT","lineNumber":600,"content":" */"},{"type":"INSERT","lineNumber":601,"content":"private fun convertToFeatureLandmark(processedLandmark: com.example.arwalking.ProcessedLandmark): com.example.arwalking.FeatureLandmark {"},{"type":"DELETE","lineNumber":603,"oldContent":"private fun convertToFeatureLandmark(processedLandmark: com.example.arwalking.ProcessedLandmark): com.example.arwalking.FeatureLandmark {"},{"type":"INSERT","lineNumber":606,"content":"        position = com.example.arwalking.Position(0.0, 0.0, 0.0),"},{"type":"INSERT","lineNumber":607,"content":"        imageUrl = \"\""},{"type":"INSERT","lineNumber":608,"content":"    )"},{"type":"INSERT","lineNumber":609,"content":"}"}]},{"timestamp":1754330343936,"changes":[{"type":"MODIFY","lineNumber":67,"content":"                totalSteps = totalSteps,","oldContent":"                totalSteps = totalSteps"},{"type":"INSERT","lineNumber":68,"content":"                currentInstruction = currentInstruction"},{"type":"DELETE","lineNumber":167,"oldContent":"            }"},{"type":"INSERT","lineNumber":169,"content":"                val progress = currentStep.toFloat() / totalSteps.toFloat()"},{"type":"INSERT","lineNumber":170,"content":"                when {"},{"type":"INSERT","lineNumber":171,"content":"                    progress < 0.33f -> 270f // Anfang: nach links"},{"type":"INSERT","lineNumber":172,"content":"                    progress < 0.66f -> 0f   // Mitte: geradeaus"},{"type":"INSERT","lineNumber":173,"content":"                    else -> 90f              // Ende: nach rechts"},{"type":"INSERT","lineNumber":174,"content":"                }"},{"type":"INSERT","lineNumber":175,"content":"            }"},{"type":"DELETE","lineNumber":171,"oldContent":"                val progress = currentStep.toFloat() / totalSteps.toFloat()"},{"type":"DELETE","lineNumber":174,"oldContent":"                when {"},{"type":"DELETE","lineNumber":177,"oldContent":"                    progress < 0.33f -> 270f // Anfang: nach links"},{"type":"DELETE","lineNumber":180,"oldContent":"                    progress < 0.66f -> 0f   // Mitte: geradeaus"},{"type":"DELETE","lineNumber":183,"oldContent":"                    else -> 90f              // Ende: nach rechts"},{"type":"DELETE","lineNumber":186,"oldContent":"                }"},{"type":"MODIFY","lineNumber":350,"content":"                totalSteps = totalSteps,","oldContent":"                totalSteps = totalSteps"},{"type":"INSERT","lineNumber":351,"content":"                currentInstruction = currentInstruction"},{"type":"DELETE","lineNumber":418,"oldContent":"    "},{"type":"DELETE","lineNumber":421,"oldContent":"    fun getModelData(): ByteArray? = modelData"},{"type":"INSERT","lineNumber":423,"content":"    "},{"type":"INSERT","lineNumber":424,"content":"    fun getModelData(): ByteArray? = modelData"},{"type":"INSERT","lineNumber":428,"content":""},{"type":"DELETE","lineNumber":429,"oldContent":""},{"type":"DELETE","lineNumber":455,"oldContent":"    return Offset("},{"type":"INSERT","lineNumber":458,"content":"    return Offset("},{"type":"DELETE","lineNumber":466,"oldContent":"    confidence: Float,"},{"type":"INSERT","lineNumber":469,"content":"    confidence: Float,"},{"type":"DELETE","lineNumber":484,"oldContent":"}"},{"type":"INSERT","lineNumber":486,"content":"        landmark.name.contains(\"Aufzug\", ignoreCase = true) -> 0f    // Geradeaus"},{"type":"DELETE","lineNumber":487,"oldContent":"    }"},{"type":"INSERT","lineNumber":490,"content":"    }"},{"type":"INSERT","lineNumber":498,"content":"    return (stabilizedDirection + confidenceVariation) % 360f"},{"type":"DELETE","lineNumber":498,"oldContent":"    return (stabilizedDirection + confidenceVariation) % 360f"},{"type":"DELETE","lineNumber":509,"oldContent":"    "},{"type":"INSERT","lineNumber":512,"content":"    "},{"type":"INSERT","lineNumber":514,"content":"    drawEnhanced3DArrow(position, orientation, confidence, size)"},{"type":"DELETE","lineNumber":514,"oldContent":"    drawEnhanced3DArrow(position, orientation, confidence, size)"},{"type":"DELETE","lineNumber":530,"oldContent":"        "},{"type":"INSERT","lineNumber":533,"content":"        "},{"type":"INSERT","lineNumber":537,"content":"        canvas.restore()"},{"type":"DELETE","lineNumber":537,"oldContent":"        canvas.restore()"},{"type":"INSERT","lineNumber":563,"content":"                  offsetX = -size * 0.02f, offsetY = -size * 0.02f)"},{"type":"DELETE","lineNumber":562,"oldContent":"        confidence = 1.0f"},{"type":"DELETE","lineNumber":563,"oldContent":"        imageUrl = \"\","},{"type":"DELETE","lineNumber":564,"oldContent":"        position = com.example.arwalking.Position(0.0, 0.0, 0.0),"},{"type":"DELETE","lineNumber":565,"oldContent":"        name = processedLandmark.name,"},{"type":"DELETE","lineNumber":566,"oldContent":"        id = processedLandmark.id,"},{"type":"INSERT","lineNumber":565,"content":""},{"type":"INSERT","lineNumber":566,"content":"/**"},{"type":"INSERT","lineNumber":567,"content":" * Zeichnet eine einzelne Pfeil-Schicht"},{"type":"INSERT","lineNumber":568,"content":" */"},{"type":"DELETE","lineNumber":582,"oldContent":"        // Pfeilkörper"},{"type":"DELETE","lineNumber":584,"oldContent":"        lineTo(offsetX + size * 0.15f, offsetY + size * 0.3f)"},{"type":"DELETE","lineNumber":586,"oldContent":"        lineTo(offsetX - size * 0.15f, offsetY + size * 0.3f)"},{"type":"MODIFY","lineNumber":588,"content":"        // Pfeilkörper","oldContent":"        lineTo(offsetX - size * 0.15f, offsetY - size * 0.2f)"},{"type":"INSERT","lineNumber":589,"content":"        lineTo(offsetX + size * 0.15f, offsetY + size * 0.3f)"},{"type":"INSERT","lineNumber":590,"content":"        lineTo(offsetX - size * 0.15f, offsetY + size * 0.3f)"},{"type":"INSERT","lineNumber":591,"content":"        lineTo(offsetX - size * 0.15f, offsetY - size * 0.2f)"},{"type":"DELETE","lineNumber":592,"oldContent":"        description = \"Processed landmark\","},{"type":"DELETE","lineNumber":593,"oldContent":"        id = processedLandmark.id,"},{"type":"INSERT","lineNumber":594,"content":"        close()"},{"type":"DELETE","lineNumber":596,"oldContent":""},{"type":"INSERT","lineNumber":598,"content":"}"},{"type":"INSERT","lineNumber":599,"content":""},{"type":"DELETE","lineNumber":600,"oldContent":"    return com.example.arwalking.FeatureLandmark("},{"type":"DELETE","lineNumber":602,"oldContent":"}"},{"type":"DELETE","lineNumber":604,"oldContent":" */"},{"type":"DELETE","lineNumber":605,"oldContent":"}"},{"type":"DELETE","lineNumber":606,"oldContent":"        imageUrl = \"\""},{"type":"INSERT","lineNumber":604,"content":"    return com.example.arwalking.FeatureLandmark("},{"type":"INSERT","lineNumber":605,"content":"        id = processedLandmark.id,"},{"type":"INSERT","lineNumber":606,"content":"        name = processedLandmark.name,"},{"type":"INSERT","lineNumber":607,"content":"        description = \"Processed landmark\","},{"type":"INSERT","lineNumber":609,"content":"        imageUrl = \"\""},{"type":"INSERT","lineNumber":610,"content":"    )"},{"type":"INSERT","lineNumber":611,"content":"}"}]}]},"/Users/florian/Documents/GitHub/ar-walking/app/src/main/java/com/example/arwalking/RouteViewModel.kt":{"filePath":"/Users/florian/Documents/GitHub/ar-walking/app/src/main/java/com/example/arwalking/RouteViewModel.kt","baseContent":"// RouteViewModel.kt (erweitert)\npackage com.example.arwalking\n\nimport RouteData\nimport androidx.lifecycle.ViewModel\nimport androidx.lifecycle.viewModelScope\nimport android.util.Log\nimport android.content.Context\nimport com.google.gson.Gson\nimport kotlinx.coroutines.launch\nimport kotlinx.coroutines.flow.MutableStateFlow\nimport kotlinx.coroutines.flow.StateFlow\nimport kotlinx.coroutines.flow.asStateFlow\n\nclass RouteViewModel : ViewModel() {\n\n    private val TAG = \"RouteViewModel\"\n    \n    // Feature Map Manager\n    private var featureMapManager: FeatureMapManager? = null\n    \n    // State für Feature-Navigation\n    private val _featureNavigationRoute = MutableStateFlow<FeatureNavigationRoute?>(null)\n    val featureNavigationRoute: StateFlow<FeatureNavigationRoute?> = _featureNavigationRoute.asStateFlow()\n    \n    private val _currentMatches = MutableStateFlow<List<FeatureMatchResult>>(emptyList())\n    val currentMatches: StateFlow<List<FeatureMatchResult>> = _currentMatches.asStateFlow()\n    \n    private val _isFeatureMappingEnabled = MutableStateFlow(false)\n    val isFeatureMappingEnabled: StateFlow<Boolean> = _isFeatureMappingEnabled.asStateFlow()\n\n    // Die neue Funktion die das NavigationRoute-Objekt zurückgibt\n    fun loadNavigationRoute(context: Context): NavigationRoute? {\n        return try {\n            Log.i(TAG, \"Route wird geladen...\")\n\n            // JSON laden und parsen (wie vorher)\n            val jsonString = loadJSONFromAsset(context, \"route.json\")\n            val gson = Gson()\n            val routeData = gson.fromJson(jsonString, RouteData::class.java)\n\n            // In NavigationRoute umwandeln\n            convertToNavigationRoute(routeData)\n\n        } catch (e: Exception) {\n            Log.e(TAG, \"Fehler beim Laden der Route: ${e.message}\")\n            null\n        }\n    }\n\n    // Konvertierung von RouteData zu NavigationRoute\n    private fun convertToNavigationRoute(routeData: RouteData): NavigationRoute {\n        val steps = mutableListOf<NavigationStep>()\n        var stepNumber = 1\n\n        routeData.route.path.forEach { pathItem ->\n            pathItem.routeParts.forEach { routePart ->\n                val landmarkIds = routePart.landmarks.map { it.id }\n\n                val step = NavigationStep(\n                    stepNumber = stepNumber,\n                    instruction = routePart.instructionDe,\n                    building = pathItem.xmlName,\n                    landmarkIds = landmarkIds\n                )\n\n                steps.add(step)\n                stepNumber++\n            }\n        }\n\n        return NavigationRoute(\n            totalLength = routeData.route.routeInfo.routeLength,\n            steps = steps\n        )\n    }\n\n    // Optional: Für Debugging - die alte Logging-Funktion angepasst\n    fun logNavigationRoute(navigationRoute: NavigationRoute) {\n        Log.i(TAG, \"=== NAVIGATION ROUTE START ===\")\n        Log.i(TAG, \"Gesamte Routenlänge: ${navigationRoute.totalLength} Meter\")\n        Log.i(TAG, \"Anzahl Schritte: ${navigationRoute.steps.size}\")\n        Log.i(TAG, \"\")\n\n        navigationRoute.steps.forEach { step ->\n            Log.i(TAG, \"Schritt ${step.stepNumber}: ${step.instruction}\")\n            Log.i(TAG, \"  Gebäude: ${step.building}\")\n            if (step.landmarkIds.isNotEmpty()) {\n                Log.i(TAG, \"  Landmark IDs: ${step.landmarkIds.joinToString(\", \")}\")\n            } else {\n                Log.i(TAG, \"  Keine Landmarks\")\n            }\n            Log.i(TAG, \"\")\n        }\n\n        Log.i(TAG, \"=== NAVIGATION ROUTE ENDE ===\")\n    }\n\n    private fun loadJSONFromAsset(context: Context, filename: String): String {\n        return context.assets.open(filename).bufferedReader().use { it.readText() }\n    }\n}","baseTimestamp":1754044850874,"deltas":[{"timestamp":1754319020046,"changes":[{"type":"MODIFY","lineNumber":3,"content":"import android.graphics.Bitmap","oldContent":"import RouteData"},{"type":"MODIFY","lineNumber":30,"content":"    ","oldContent":"    private val _currentMatches = MutableStateFlow<List<FeatureMatchResult>>(emptyList())"},{"type":"MODIFY","lineNumber":53,"content":"    val currentMatches: StateFlow<List<FeatureMatchResult>> = _currentMatches.asStateFlow()","oldContent":"            // In NavigationRoute umwandeln"},{"type":"MODIFY","lineNumber":192,"content":"                ","oldContent":"    "},{"type":"MODIFY","lineNumber":242,"content":"                ","oldContent":"        return storageManager?.loadFullImage(landmarkId)"},{"type":"MODIFY","lineNumber":280,"content":"            null","oldContent":"        val currentStep = _currentNavigationStep.value"},{"type":"INSERT","lineNumber":292,"content":"            }"},{"type":"DELETE","lineNumber":293,"oldContent":"            "},{"type":"DELETE","lineNumber":303,"oldContent":"            try {"},{"type":"DELETE","lineNumber":304,"oldContent":"    override fun onCleared() {"},{"type":"INSERT","lineNumber":303,"content":"            null"},{"type":"INSERT","lineNumber":304,"content":"        }"},{"type":"DELETE","lineNumber":313,"oldContent":"    }"},{"type":"DELETE","lineNumber":314,"oldContent":"            } catch (e: Exception) {"},{"type":"DELETE","lineNumber":315,"oldContent":"                "},{"type":"DELETE","lineNumber":316,"oldContent":"                }"},{"type":"INSERT","lineNumber":313,"content":"        landmarkId: String,"},{"type":"INSERT","lineNumber":314,"content":"        landmarkName: String,"},{"type":"INSERT","lineNumber":315,"content":"        description: String,"},{"type":"INSERT","lineNumber":316,"content":"        onProgress: (String) -> Unit = {}"},{"type":"INSERT","lineNumber":357,"content":"     */"},{"type":"DELETE","lineNumber":358,"oldContent":"    private fun isEmulatorDevice(): Boolean {"},{"type":"DELETE","lineNumber":370,"oldContent":"     * Lädt ein Thumbnail (schnell) - verwendet neues Storage-System"},{"type":"MODIFY","lineNumber":372,"content":"     * Lädt ein Thumbnail (schnell) - verwendet neues Storage-System","oldContent":"     */"},{"type":"INSERT","lineNumber":373,"content":"     */"},{"type":"INSERT","lineNumber":378,"content":"    /**"},{"type":"DELETE","lineNumber":379,"oldContent":"     * Lädt ein Vollbild (mit Cache) - verwendet neues Storage-System"},{"type":"INSERT","lineNumber":385,"content":"    /**"},{"type":"DELETE","lineNumber":387,"oldContent":"    /**"},{"type":"DELETE","lineNumber":394,"oldContent":"        return if (storageManager != null) {"},{"type":"MODIFY","lineNumber":396,"content":"        return if (storageManager != null) {","oldContent":"            val status = runBlocking { storageManager!!.getStorageStatus() }"},{"type":"INSERT","lineNumber":397,"content":"            val status = runBlocking { storageManager!!.getStorageStatus() }"},{"type":"DELETE","lineNumber":406,"oldContent":"        return storageManager?.cleanup()"},{"type":"INSERT","lineNumber":408,"content":"        return storageManager?.cleanup()"},{"type":"DELETE","lineNumber":415,"oldContent":"                Log.i(TAG, \"Lade verfügbare Storage-Daten...\")"},{"type":"INSERT","lineNumber":416,"content":"            try {"},{"type":"INSERT","lineNumber":417,"content":"                Log.i(TAG, \"Lade verfügbare Storage-Daten...\")"},{"type":"DELETE","lineNumber":419,"oldContent":"            try {"},{"type":"INSERT","lineNumber":428,"content":"                "},{"type":"DELETE","lineNumber":429,"oldContent":"            } catch (e: Exception) {"},{"type":"INSERT","lineNumber":440,"content":"        Log.d(TAG, \"Navigationsschritt gesetzt: $step\")"},{"type":"DELETE","lineNumber":441,"oldContent":"    }"},{"type":"INSERT","lineNumber":549,"content":"            } catch (e: Exception) {"},{"type":"DELETE","lineNumber":550,"oldContent":"                Log.e(TAG, \"Fehler beim Laden der Feature-Navigation Route: ${e.message}\")"},{"type":"MODIFY","lineNumber":554,"content":"    ","oldContent":"            }"},{"type":"INSERT","lineNumber":576,"content":"     * Gibt verfügbare Landmarks zurück - verwendet Landmark-IDs aus der Route"},{"type":"DELETE","lineNumber":577,"oldContent":"     */"},{"type":"INSERT","lineNumber":588,"content":"                            FeatureLandmark("},{"type":"DELETE","lineNumber":589,"oldContent":"                                id = landmark, // String aus JSON"},{"type":"MODIFY","lineNumber":634,"content":"     * Gibt die aktuellen Navigationsschritte zurück","oldContent":"     * Gibt die aktuellen Navigationsschritte zurück"},{"type":"DELETE","lineNumber":671,"oldContent":"     * Lädt Landmarks neu für eine spezifische Route"},{"type":"DELETE","lineNumber":672,"oldContent":"}"},{"type":"DELETE","lineNumber":673,"oldContent":"    }"},{"type":"INSERT","lineNumber":671,"content":"     * Lädt Landmarks neu für eine spezifische Route (vereinfacht)"},{"type":"INSERT","lineNumber":672,"content":"     */"},{"type":"INSERT","lineNumber":673,"content":"    private suspend fun reloadLandmarksForRoute(route: com.example.arwalking.data.Route) {"},{"type":"INSERT","lineNumber":674,"content":"        try {"},{"type":"INSERT","lineNumber":675,"content":"            Log.d(TAG, \"reloadLandmarksForRoute called (stub)\")"},{"type":"INSERT","lineNumber":676,"content":"            // Stub implementation - verhindert Crashes"},{"type":"INSERT","lineNumber":677,"content":"        } catch (e: Exception) {"},{"type":"INSERT","lineNumber":678,"content":"            Log.e(TAG, \"Fehler beim Neuladen der Route-Landmarks: ${e.message}\")"},{"type":"DELETE","lineNumber":675,"oldContent":"}"},{"type":"DELETE","lineNumber":676,"oldContent":"}"},{"type":"INSERT","lineNumber":681,"content":"    "},{"type":"INSERT","lineNumber":682,"content":"    /**"},{"type":"INSERT","lineNumber":683,"content":"     * Aktualisiert Landmarks wenn sich die aktuelle Route ändert"},{"type":"INSERT","lineNumber":684,"content":"     */"},{"type":"INSERT","lineNumber":685,"content":"    fun updateLandmarksForCurrentRoute() {"},{"type":"INSERT","lineNumber":686,"content":"        viewModelScope.launch {"},{"type":"INSERT","lineNumber":687,"content":"            val currentRoute = _currentRoute.value"},{"type":"INSERT","lineNumber":688,"content":"            if (currentRoute != null) {"},{"type":"INSERT","lineNumber":689,"content":"                reloadLandmarksForRoute(currentRoute.route)"},{"type":"DELETE","lineNumber":679,"oldContent":"                Log.e(TAG, \"Fehler beim Bereinigen: ${e.message}\")"},{"type":"DELETE","lineNumber":680,"oldContent":"    }"},{"type":"DELETE","lineNumber":681,"oldContent":"            }"},{"type":"DELETE","lineNumber":682,"oldContent":"                Log.e(TAG, \"Fehler beim Bereinigen: ${e.message}\")"},{"type":"DELETE","lineNumber":683,"oldContent":"            } catch (e: Exception) {"},{"type":"DELETE","lineNumber":684,"oldContent":"                Log.i(TAG, \"RouteViewModel bereinigt\")"},{"type":"DELETE","lineNumber":685,"oldContent":"                "},{"type":"DELETE","lineNumber":686,"oldContent":"                landmarkFeatureStorage?.cleanup()"},{"type":"DELETE","lineNumber":687,"oldContent":"                // Bereinige Feature-Storage Cache"},{"type":"DELETE","lineNumber":688,"oldContent":"                "},{"type":"DELETE","lineNumber":689,"oldContent":"                storageManager?.logPerformanceSummary()"},{"type":"DELETE","lineNumber":690,"oldContent":"}"},{"type":"DELETE","lineNumber":691,"oldContent":"    }"},{"type":"DELETE","lineNumber":693,"oldContent":"                // Bereinige Feature-Storage Cache"},{"type":"DELETE","lineNumber":694,"oldContent":"                "},{"type":"DELETE","lineNumber":695,"oldContent":"                storageManager?.logPerformanceSummary()"},{"type":"DELETE","lineNumber":696,"oldContent":"                // Storage-Manager bereinigt sich selbst automatisch"},{"type":"DELETE","lineNumber":697,"oldContent":"            try {"},{"type":"DELETE","lineNumber":698,"oldContent":"        viewModelScope.launch {"},{"type":"DELETE","lineNumber":699,"oldContent":"        super.onCleared()"},{"type":"DELETE","lineNumber":700,"oldContent":"    override fun onCleared() {"},{"type":"INSERT","lineNumber":692,"content":"    }"},{"type":"DELETE","lineNumber":702,"oldContent":"     * Cleanup beim Destroy"},{"type":"DELETE","lineNumber":707,"oldContent":"            }"},{"type":"DELETE","lineNumber":709,"oldContent":"                Log.e(TAG, \"Fehler beim Bereinigen: ${e.message}\")"},{"type":"INSERT","lineNumber":699,"content":"    }"},{"type":"DELETE","lineNumber":711,"oldContent":"                Log.i(TAG, \"RouteViewModel bereinigt\")"},{"type":"DELETE","lineNumber":721,"oldContent":"     * Fehlende Methoden für Navigation.kt"},{"type":"DELETE","lineNumber":723,"oldContent":"     */"},{"type":"DELETE","lineNumber":726,"oldContent":"    fun enableStorageSystemImmediately(context: Context) {"},{"type":"DELETE","lineNumber":727,"oldContent":"        Log.d(TAG, \"enableStorageSystemImmediately called (stub)\")"},{"type":"INSERT","lineNumber":713,"content":"            }"},{"type":"DELETE","lineNumber":730,"oldContent":"        // Stub implementation - verhindert Crashes"},{"type":"INSERT","lineNumber":717,"content":"    }"},{"type":"INSERT","lineNumber":719,"content":"    /**"},{"type":"INSERT","lineNumber":720,"content":"     * Fehlende Methoden für Navigation.kt"},{"type":"INSERT","lineNumber":721,"content":"     */"},{"type":"INSERT","lineNumber":722,"content":"    fun enableStorageSystemImmediately(context: Context) {"},{"type":"INSERT","lineNumber":723,"content":"        Log.d(TAG, \"enableStorageSystemImmediately called (stub)\")"},{"type":"INSERT","lineNumber":724,"content":"        // Stub implementation - verhindert Crashes"},{"type":"INSERT","lineNumber":725,"content":"    }"},{"type":"DELETE","lineNumber":734,"oldContent":""},{"type":"DELETE","lineNumber":736,"oldContent":"    /**"},{"type":"INSERT","lineNumber":730,"content":"    }"},{"type":"INSERT","lineNumber":731,"content":"    "},{"type":"DELETE","lineNumber":745,"oldContent":"    }"},{"type":"DELETE","lineNumber":746,"oldContent":"    "},{"type":"DELETE","lineNumber":759,"oldContent":"            }"},{"type":"DELETE","lineNumber":760,"oldContent":"                // Bereinige Feature-Storage Cache"},{"type":"DELETE","lineNumber":762,"oldContent":"                landmarkFeatureStorage?.cleanup()"},{"type":"DELETE","lineNumber":764,"oldContent":"    }"},{"type":"INSERT","lineNumber":752,"content":"                storageManager?.logPerformanceSummary()"},{"type":"INSERT","lineNumber":754,"content":"                // Bereinige Feature-Storage Cache"},{"type":"INSERT","lineNumber":755,"content":"                landmarkFeatureStorage?.cleanup()"},{"type":"INSERT","lineNumber":756,"content":"                "},{"type":"INSERT","lineNumber":757,"content":"                Log.i(TAG, \"RouteViewModel bereinigt\")"},{"type":"INSERT","lineNumber":758,"content":"            } catch (e: Exception) {"},{"type":"INSERT","lineNumber":759,"content":"                Log.e(TAG, \"Fehler beim Bereinigen: ${e.message}\")"},{"type":"INSERT","lineNumber":760,"content":"            }"},{"type":"INSERT","lineNumber":761,"content":"        }"},{"type":"INSERT","lineNumber":762,"content":"    }"},{"type":"INSERT","lineNumber":763,"content":"}"}]},{"timestamp":1754319553974,"changes":[{"type":"MODIFY","lineNumber":24,"content":"class RouteViewModel : ViewModel() {","oldContent":"    private var featureMapManager: FeatureMapManager? = null"},{"type":"MODIFY","lineNumber":31,"content":"    // Route Repository für JSON-Daten","oldContent":"    val currentMatches: StateFlow<List<FeatureMatchResult>> = _currentMatches.asStateFlow()"},{"type":"MODIFY","lineNumber":38,"content":"    ","oldContent":""},{"type":"MODIFY","lineNumber":54,"content":"    ","oldContent":"            convertToNavigationRoute(routeData)"},{"type":"DELETE","lineNumber":67,"oldContent":"        routeData.route.path.forEach { pathItem ->"},{"type":"DELETE","lineNumber":68,"oldContent":"            pathItem.routeParts.forEach { routePart ->"},{"type":"DELETE","lineNumber":69,"oldContent":"                val landmarkIds = routePart.landmarks.map { it.id }"},{"type":"DELETE","lineNumber":70,"oldContent":""},{"type":"DELETE","lineNumber":71,"oldContent":"                val step = NavigationStep("},{"type":"INSERT","lineNumber":67,"content":"            Log.i(TAG, \"Lade Route aus JSON-Datei...\")"},{"type":"INSERT","lineNumber":68,"content":"            "},{"type":"INSERT","lineNumber":69,"content":"            // Initialisiere RouteRepository falls noch nicht geschehen"},{"type":"INSERT","lineNumber":70,"content":"            if (routeRepository == null) {"},{"type":"INSERT","lineNumber":71,"content":"                routeRepository = RouteRepository(context)"},{"type":"DELETE","lineNumber":73,"oldContent":"                    instruction = routePart.instructionDe,"},{"type":"DELETE","lineNumber":74,"oldContent":"                    building = pathItem.xmlName,"},{"type":"DELETE","lineNumber":75,"oldContent":"                    landmarkIds = landmarkIds"},{"type":"DELETE","lineNumber":76,"oldContent":"                )"},{"type":"DELETE","lineNumber":77,"oldContent":""},{"type":"DELETE","lineNumber":78,"oldContent":"                steps.add(step)"},{"type":"DELETE","lineNumber":79,"oldContent":"                stepNumber++"},{"type":"DELETE","lineNumber":80,"oldContent":"            }"},{"type":"INSERT","lineNumber":73,"content":"            "},{"type":"INSERT","lineNumber":74,"content":"            // Lade Route aus JSON-Datei"},{"type":"INSERT","lineNumber":75,"content":"            viewModelScope.launch {"},{"type":"INSERT","lineNumber":76,"content":"                val routeData = routeRepository?.getRouteFromAssets(\"route.json\")"},{"type":"INSERT","lineNumber":77,"content":"                _currentRoute.value = routeData"},{"type":"INSERT","lineNumber":78,"content":"                "},{"type":"INSERT","lineNumber":79,"content":"                if (routeData != null) {"},{"type":"INSERT","lineNumber":80,"content":"                    Log.i(TAG, \"Route erfolgreich aus JSON geladen\")"},{"type":"MODIFY","lineNumber":84,"content":"                } else {","oldContent":"            totalLength = routeData.route.routeInfo.routeLength,"},{"type":"MODIFY","lineNumber":100,"content":"            null","oldContent":"            if (step.landmarkIds.isNotEmpty()) {"},{"type":"MODIFY","lineNumber":104,"content":"    /**","oldContent":"            }"},{"type":"MODIFY","lineNumber":302,"content":"            Log.e(TAG, \"Fehler beim Laden des Landmark-Thumbnails $landmarkId: ${e.message}\")","oldContent":"                _isFeatureMappingEnabled.value = true"},{"type":"INSERT","lineNumber":371,"content":"    /**"},{"type":"DELETE","lineNumber":373,"oldContent":"    /**"},{"type":"INSERT","lineNumber":395,"content":"    fun getPerformanceInfo(): String {"},{"type":"DELETE","lineNumber":397,"oldContent":"    fun getPerformanceInfo(): String {"},{"type":"MODIFY","lineNumber":408,"content":"        return storageManager?.cleanup()","oldContent":"        return storageManager?.cleanup()"},{"type":"MODIFY","lineNumber":416,"content":"            try {","oldContent":"            try {"},{"type":"DELETE","lineNumber":517,"oldContent":"}"},{"type":"DELETE","lineNumber":518,"oldContent":"        }"},{"type":"DELETE","lineNumber":519,"oldContent":"                Log.e(TAG, \"Fehler beim Bereinigen: ${e.message}\")"},{"type":"DELETE","lineNumber":520,"oldContent":"                Log.i(TAG, \"RouteViewModel bereinigt\")"},{"type":"DELETE","lineNumber":521,"oldContent":"                landmarkFeatureStorage?.cleanup()"},{"type":"INSERT","lineNumber":517,"content":"                        instruction = \"Gehen Sie geradeaus zum Haupteingang\","},{"type":"INSERT","lineNumber":518,"content":"                        building = building,"},{"type":"INSERT","lineNumber":519,"content":"                        targetLandmark = null"},{"type":"INSERT","lineNumber":520,"content":"                    ),"},{"type":"INSERT","lineNumber":521,"content":"                    FeatureNavigationStep("},{"type":"INSERT","lineNumber":522,"content":"                        stepNumber = 2,"},{"type":"INSERT","lineNumber":523,"content":"                        instruction = \"Biegen Sie links ab zur Treppe\","},{"type":"INSERT","lineNumber":524,"content":"                        building = building,"},{"type":"INSERT","lineNumber":525,"content":"                        targetLandmark = null"},{"type":"INSERT","lineNumber":526,"content":"                    ),"},{"type":"INSERT","lineNumber":527,"content":"                    FeatureNavigationStep("},{"type":"INSERT","lineNumber":528,"content":"                        stepNumber = 3,"},{"type":"INSERT","lineNumber":529,"content":"                        instruction = \"Gehen Sie die Treppe hoch zu Stockwerk $floor\","},{"type":"INSERT","lineNumber":530,"content":"                        building = building,"},{"type":"INSERT","lineNumber":531,"content":"                        targetLandmark = null"},{"type":"INSERT","lineNumber":532,"content":"                    ),"},{"type":"INSERT","lineNumber":533,"content":"                    FeatureNavigationStep("},{"type":"INSERT","lineNumber":534,"content":"                        stepNumber = 4,"},{"type":"INSERT","lineNumber":535,"content":"                        instruction = \"Folgen Sie dem Korridor bis zum Ziel\","},{"type":"INSERT","lineNumber":536,"content":"                        building = building,"},{"type":"INSERT","lineNumber":537,"content":"                        targetLandmark = null"},{"type":"INSERT","lineNumber":538,"content":"                    )"},{"type":"INSERT","lineNumber":539,"content":"                )"},{"type":"DELETE","lineNumber":523,"oldContent":"                // Storage-Manager bereinigt sich selbst automatisch"},{"type":"DELETE","lineNumber":524,"oldContent":"        viewModelScope.launch {"},{"type":"DELETE","lineNumber":525,"oldContent":"    override fun onCleared() {"},{"type":"DELETE","lineNumber":526,"oldContent":"     * Cleanup beim Destroy"},{"type":"DELETE","lineNumber":527,"oldContent":""},{"type":"DELETE","lineNumber":528,"oldContent":"        // Stub implementation - verhindert Crashes"},{"type":"DELETE","lineNumber":529,"oldContent":"    fun processFrameForFeatureMatching(mat: org.opencv.core.Mat) {"},{"type":"DELETE","lineNumber":530,"oldContent":"    }"},{"type":"DELETE","lineNumber":531,"oldContent":"        Log.d(TAG, \"getCurrentEndPoint called (stub)\")"},{"type":"DELETE","lineNumber":532,"oldContent":"    "},{"type":"DELETE","lineNumber":533,"oldContent":"        return \"Büro Prof. Dr. Ludwig (PT 3.0.84C)\""},{"type":"DELETE","lineNumber":534,"oldContent":"    fun getCurrentStartPoint(): String {"},{"type":"DELETE","lineNumber":535,"oldContent":"    }"},{"type":"DELETE","lineNumber":536,"oldContent":"        Log.d(TAG, \"startFrameProcessing called (stub)\")"},{"type":"DELETE","lineNumber":537,"oldContent":"    "},{"type":"DELETE","lineNumber":538,"oldContent":"        // Stub implementation - verhindert Crashes"},{"type":"DELETE","lineNumber":539,"oldContent":"    fun enableStorageSystemImmediately(context: Context) {"},{"type":"DELETE","lineNumber":540,"oldContent":"     * Fehlende Methoden für Navigation.kt"},{"type":"DELETE","lineNumber":541,"oldContent":""},{"type":"DELETE","lineNumber":542,"oldContent":"        return landmarkIds.toList()"},{"type":"DELETE","lineNumber":543,"oldContent":"        }"},{"type":"DELETE","lineNumber":544,"oldContent":"                }"},{"type":"DELETE","lineNumber":545,"oldContent":"                for (landmark in routePart.landmarks) {"},{"type":"DELETE","lineNumber":546,"oldContent":"        for (pathItem in currentRoute.route.path) {"},{"type":"DELETE","lineNumber":547,"oldContent":"        "},{"type":"DELETE","lineNumber":548,"oldContent":"    fun getRequiredLandmarkIds(): List<String> {"},{"type":"INSERT","lineNumber":541,"content":"                val featureRoute = FeatureNavigationRoute("},{"type":"INSERT","lineNumber":542,"content":"                    totalLength = 150.0, // 150 Meter"},{"type":"INSERT","lineNumber":543,"content":"                    steps = demoSteps"},{"type":"INSERT","lineNumber":544,"content":"                )"},{"type":"INSERT","lineNumber":545,"content":"                "},{"type":"INSERT","lineNumber":546,"content":"                _featureNavigationRoute.value = featureRoute"},{"type":"INSERT","lineNumber":547,"content":"                Log.i(TAG, \"Feature-Navigation Route geladen: ${demoSteps.size} Schritte, ${featureRoute.totalLength}m\")"},{"type":"INSERT","lineNumber":548,"content":"                "},{"type":"DELETE","lineNumber":552,"oldContent":"    fun getCurrentlyLoadedLandmarkIds(): List<String> {"},{"type":"DELETE","lineNumber":553,"oldContent":"     * Gibt die aktuell geladenen Landmark-IDs zurück (für Debugging)"},{"type":"INSERT","lineNumber":552,"content":"        }"},{"type":"INSERT","lineNumber":553,"content":"    }"},{"type":"INSERT","lineNumber":633,"content":"    /**"},{"type":"DELETE","lineNumber":634,"oldContent":"     * Gibt die aktuellen Navigationsschritte zurück"},{"type":"DELETE","lineNumber":643,"oldContent":"    }"},{"type":"DELETE","lineNumber":644,"oldContent":"}"},{"type":"DELETE","lineNumber":645,"oldContent":"}"},{"type":"DELETE","lineNumber":646,"oldContent":"    }"},{"type":"DELETE","lineNumber":648,"oldContent":"                Log.e(TAG, \"Fehler beim Bereinigen: ${e.message}\")"},{"type":"INSERT","lineNumber":644,"content":"        } catch (e: Exception) {"},{"type":"INSERT","lineNumber":645,"content":"            Log.e(TAG, \"Fehler beim Laden der Navigationsschritte: ${e.message}\")"},{"type":"INSERT","lineNumber":646,"content":"            emptyList()"},{"type":"INSERT","lineNumber":647,"content":"        }"},{"type":"INSERT","lineNumber":649,"content":""},{"type":"INSERT","lineNumber":650,"content":"    /**"},{"type":"INSERT","lineNumber":651,"content":"     * Gibt den aktuellen Navigationsschritt zurück"},{"type":"INSERT","lineNumber":652,"content":"     */"},{"type":"INSERT","lineNumber":653,"content":"    fun getCurrentStep(): NavigationStep? {"},{"type":"INSERT","lineNumber":654,"content":"        return try {"},{"type":"INSERT","lineNumber":655,"content":"            val steps = getCurrentNavigationSteps()"},{"type":"INSERT","lineNumber":656,"content":"            val currentStepNumber = _currentNavigationStep.value"},{"type":"INSERT","lineNumber":657,"content":"            "},{"type":"INSERT","lineNumber":658,"content":"            if (steps.isNotEmpty() && currentStepNumber > 0 && currentStepNumber <= steps.size) {"},{"type":"INSERT","lineNumber":659,"content":"                steps[currentStepNumber - 1] // Convert to 0-based index"},{"type":"INSERT","lineNumber":660,"content":"            } else {"},{"type":"INSERT","lineNumber":661,"content":"                Log.w(TAG, \"Aktueller Schritt nicht verfügbar: $currentStepNumber von ${steps.size}\")"},{"type":"INSERT","lineNumber":662,"content":"                null"},{"type":"DELETE","lineNumber":651,"oldContent":"                Log.e(TAG, \"Fehler beim Bereinigen: ${e.message}\")"},{"type":"DELETE","lineNumber":652,"oldContent":"            } catch (e: Exception) {"},{"type":"DELETE","lineNumber":653,"oldContent":"                Log.i(TAG, \"RouteViewModel bereinigt\")"},{"type":"DELETE","lineNumber":654,"oldContent":"                "},{"type":"DELETE","lineNumber":655,"oldContent":"                landmarkFeatureStorage?.cleanup()"},{"type":"DELETE","lineNumber":656,"oldContent":"                // Bereinige Feature-Storage Cache"},{"type":"DELETE","lineNumber":657,"oldContent":"                "},{"type":"DELETE","lineNumber":658,"oldContent":"                storageManager?.logPerformanceSummary()"},{"type":"DELETE","lineNumber":659,"oldContent":"}"},{"type":"DELETE","lineNumber":660,"oldContent":"    }"},{"type":"INSERT","lineNumber":664,"content":"        } catch (e: Exception) {"},{"type":"INSERT","lineNumber":665,"content":"            Log.e(TAG, \"Fehler beim Laden des aktuellen Schritts: ${e.message}\")"},{"type":"INSERT","lineNumber":666,"content":"            null"},{"type":"DELETE","lineNumber":662,"oldContent":"                // Bereinige Feature-Storage Cache"},{"type":"DELETE","lineNumber":663,"oldContent":"                "},{"type":"DELETE","lineNumber":664,"oldContent":"                storageManager?.logPerformanceSummary()"},{"type":"DELETE","lineNumber":665,"oldContent":"                // Storage-Manager bereinigt sich selbst automatisch"},{"type":"DELETE","lineNumber":666,"oldContent":"            try {"},{"type":"DELETE","lineNumber":667,"oldContent":"        viewModelScope.launch {"},{"type":"DELETE","lineNumber":668,"oldContent":"        super.onCleared()"},{"type":"DELETE","lineNumber":669,"oldContent":"    override fun onCleared() {"},{"type":"DELETE","lineNumber":670,"oldContent":"     */"},{"type":"INSERT","lineNumber":668,"content":"    }"},{"type":"INSERT","lineNumber":669,"content":""},{"type":"INSERT","lineNumber":670,"content":"    /**"},{"type":"DELETE","lineNumber":675,"oldContent":"        }"},{"type":"DELETE","lineNumber":679,"oldContent":"            } catch (e: Exception) {"},{"type":"DELETE","lineNumber":681,"oldContent":"                Log.i(TAG, \"RouteViewModel bereinigt\")"},{"type":"INSERT","lineNumber":679,"content":"        }"},{"type":"INSERT","lineNumber":680,"content":"    }"},{"type":"INSERT","lineNumber":690,"content":"            }"},{"type":"INSERT","lineNumber":691,"content":"        }"},{"type":"DELETE","lineNumber":693,"oldContent":"    }"},{"type":"DELETE","lineNumber":694,"oldContent":"    "},{"type":"MODIFY","lineNumber":698,"content":"        Log.d(TAG, \"getCurrentlyLoadedLandmarkIds called (stub)\")","oldContent":"        return processedLandmarks.map { it.id }"},{"type":"INSERT","lineNumber":699,"content":"        return emptyList()"},{"type":"INSERT","lineNumber":700,"content":"    }"},{"type":"DELETE","lineNumber":702,"oldContent":"            }"},{"type":"DELETE","lineNumber":707,"oldContent":"    }"},{"type":"DELETE","lineNumber":710,"oldContent":"    /**"},{"type":"DELETE","lineNumber":712,"oldContent":"     * Fehlende Methoden für Navigation.kt"},{"type":"DELETE","lineNumber":714,"oldContent":"     */"},{"type":"DELETE","lineNumber":715,"oldContent":"    fun enableStorageSystemImmediately(context: Context) {"},{"type":"DELETE","lineNumber":717,"oldContent":"        Log.d(TAG, \"enableStorageSystemImmediately called (stub)\")"},{"type":"DELETE","lineNumber":718,"oldContent":"        // Stub implementation - verhindert Crashes"},{"type":"DELETE","lineNumber":720,"oldContent":"    }"},{"type":"INSERT","lineNumber":714,"content":"            }"},{"type":"DELETE","lineNumber":724,"oldContent":"    }"},{"type":"DELETE","lineNumber":725,"oldContent":"    "},{"type":"INSERT","lineNumber":718,"content":"    }"},{"type":"INSERT","lineNumber":719,"content":""},{"type":"INSERT","lineNumber":721,"content":"     * Fehlende Methoden für Navigation.kt"},{"type":"INSERT","lineNumber":722,"content":"     */"},{"type":"INSERT","lineNumber":723,"content":"    fun enableStorageSystemImmediately(context: Context) {"},{"type":"INSERT","lineNumber":724,"content":"        Log.d(TAG, \"enableStorageSystemImmediately called (stub)\")"},{"type":"INSERT","lineNumber":725,"content":"        // Stub implementation - verhindert Crashes"},{"type":"INSERT","lineNumber":726,"content":"    }"},{"type":"INSERT","lineNumber":731,"content":"    }"},{"type":"INSERT","lineNumber":732,"content":"    "},{"type":"DELETE","lineNumber":743,"oldContent":"                storageManager?.logPerformanceSummary()"},{"type":"MODIFY","lineNumber":744,"content":"","oldContent":"     */"},{"type":"INSERT","lineNumber":745,"content":"    /**"},{"type":"INSERT","lineNumber":747,"content":"     */"},{"type":"INSERT","lineNumber":748,"content":"    override fun onCleared() {"},{"type":"INSERT","lineNumber":749,"content":"        super.onCleared()"},{"type":"INSERT","lineNumber":750,"content":"        viewModelScope.launch {"},{"type":"INSERT","lineNumber":751,"content":"            try {"},{"type":"INSERT","lineNumber":752,"content":"                // Storage-Manager bereinigt sich selbst automatisch"},{"type":"INSERT","lineNumber":753,"content":"                storageManager?.logPerformanceSummary()"},{"type":"INSERT","lineNumber":754,"content":"                "},{"type":"DELETE","lineNumber":747,"oldContent":"}"},{"type":"DELETE","lineNumber":749,"oldContent":"    }"},{"type":"DELETE","lineNumber":751,"oldContent":"                "},{"type":"DELETE","lineNumber":753,"oldContent":"                // Storage-Manager bereinigt sich selbst automatisch"},{"type":"DELETE","lineNumber":755,"oldContent":"            try {"},{"type":"INSERT","lineNumber":763,"content":"    }"},{"type":"INSERT","lineNumber":764,"content":"}"}]},{"timestamp":1754319834978,"changes":[{"type":"DELETE","lineNumber":56,"oldContent":"        } catch (e: Exception) {"},{"type":"DELETE","lineNumber":57,"oldContent":"            Log.e(TAG, \"Fehler beim Laden der Route: ${e.message}\")"},{"type":"INSERT","lineNumber":56,"content":"    val isFeatureMappingEnabled: StateFlow<Boolean> = _isFeatureMappingEnabled.asStateFlow()"},{"type":"INSERT","lineNumber":57,"content":"    "},{"type":"MODIFY","lineNumber":63,"content":"     * Lädt die Route aus der JSON-Datei","oldContent":"    private fun convertToNavigationRoute(routeData: RouteData): NavigationRoute {"},{"type":"MODIFY","lineNumber":72,"content":"            }","oldContent":"                    stepNumber = stepNumber,"},{"type":"DELETE","lineNumber":102,"oldContent":"            } else {"},{"type":"DELETE","lineNumber":103,"oldContent":"                Log.i(TAG, \"  Keine Landmarks\")"},{"type":"INSERT","lineNumber":102,"content":"    }"},{"type":"INSERT","lineNumber":103,"content":"    "},{"type":"INSERT","lineNumber":407,"content":"    suspend fun cleanup(): CleanupSummary? {"},{"type":"DELETE","lineNumber":408,"oldContent":"        return storageManager?.cleanup()"},{"type":"INSERT","lineNumber":415,"content":"        viewModelScope.launch {"},{"type":"DELETE","lineNumber":416,"oldContent":"            try {"},{"type":"DELETE","lineNumber":503,"oldContent":"            } catch (e: Exception) {"},{"type":"DELETE","lineNumber":504,"oldContent":"                "},{"type":"DELETE","lineNumber":505,"oldContent":"                // Bereinige Feature-Storage Cache"},{"type":"DELETE","lineNumber":506,"oldContent":"                storageManager?.logPerformanceSummary()"},{"type":"INSERT","lineNumber":503,"content":"     * Lädt Feature-Navigation Route für ein bestimmtes Gebäude und Stockwerk"},{"type":"INSERT","lineNumber":504,"content":"     */"},{"type":"INSERT","lineNumber":505,"content":"    fun loadFeatureNavigationRoute(context: Context, building: String, floor: Int) {"},{"type":"INSERT","lineNumber":506,"content":"        viewModelScope.launch {"},{"type":"MODIFY","lineNumber":508,"content":"                Log.i(TAG, \"Lade Feature-Navigation Route für Gebäude: $building, Stockwerk: $floor\")","oldContent":"        super.onCleared()"},{"type":"DELETE","lineNumber":512,"oldContent":"    "},{"type":"DELETE","lineNumber":513,"oldContent":"        // Stub implementation - verhindert Crashes"},{"type":"DELETE","lineNumber":514,"oldContent":"    fun startFrameProcessing() {"},{"type":"DELETE","lineNumber":515,"oldContent":"    }"},{"type":"DELETE","lineNumber":516,"oldContent":"        Log.d(TAG, \"enableStorageSystemImmediately called (stub)\")"},{"type":"INSERT","lineNumber":512,"content":"                "},{"type":"INSERT","lineNumber":513,"content":"                // Fallback: Erstelle eine Demo-Route mit Feature-Navigation"},{"type":"INSERT","lineNumber":514,"content":"                val demoSteps = listOf("},{"type":"INSERT","lineNumber":515,"content":"                    FeatureNavigationStep("},{"type":"INSERT","lineNumber":516,"content":"                        stepNumber = 1,"},{"type":"DELETE","lineNumber":523,"oldContent":"                    landmarkIds.add(landmark) // landmarks ist bereits List<String>"},{"type":"INSERT","lineNumber":540,"content":"                "},{"type":"INSERT","lineNumber":628,"content":"            Log.e(TAG, \"Fehler beim Laden der verfügbaren Landmarks: ${e.message}\")"},{"type":"INSERT","lineNumber":629,"content":"            emptyList()"},{"type":"INSERT","lineNumber":630,"content":"        }"},{"type":"INSERT","lineNumber":632,"content":"    "},{"type":"DELETE","lineNumber":630,"oldContent":"}"},{"type":"DELETE","lineNumber":631,"oldContent":"    /**"},{"type":"DELETE","lineNumber":632,"oldContent":"}"},{"type":"DELETE","lineNumber":633,"oldContent":"    /**"},{"type":"DELETE","lineNumber":635,"oldContent":"                Log.e(TAG, \"Fehler beim Bereinigen: ${e.message}\")"},{"type":"DELETE","lineNumber":636,"oldContent":"    }"},{"type":"INSERT","lineNumber":635,"content":"     */"},{"type":"INSERT","lineNumber":636,"content":"    fun getCurrentNavigationSteps(): List<NavigationStep> {"},{"type":"INSERT","lineNumber":637,"content":"        return try {"},{"type":"INSERT","lineNumber":638,"content":"            val route = _currentRoute.value"},{"type":"INSERT","lineNumber":639,"content":"            if (route != null) {"},{"type":"INSERT","lineNumber":640,"content":"                convertToNavigationRoute(route).steps"},{"type":"INSERT","lineNumber":641,"content":"            } else {"},{"type":"INSERT","lineNumber":642,"content":"                emptyList()"},{"type":"DELETE","lineNumber":638,"oldContent":"                Log.e(TAG, \"Fehler beim Bereinigen: ${e.message}\")"},{"type":"DELETE","lineNumber":639,"oldContent":"            } catch (e: Exception) {"},{"type":"DELETE","lineNumber":640,"oldContent":"                Log.i(TAG, \"RouteViewModel bereinigt\")"},{"type":"DELETE","lineNumber":641,"oldContent":"                "},{"type":"DELETE","lineNumber":642,"oldContent":"                landmarkFeatureStorage?.cleanup()"},{"type":"DELETE","lineNumber":649,"oldContent":"                // Bereinige Feature-Storage Cache"},{"type":"DELETE","lineNumber":651,"oldContent":"                "},{"type":"MODIFY","lineNumber":663,"content":"            }","oldContent":"        }"},{"type":"INSERT","lineNumber":667,"content":"        }"},{"type":"INSERT","lineNumber":678,"content":"            Log.e(TAG, \"Fehler beim Neuladen der Route-Landmarks: ${e.message}\")"},{"type":"DELETE","lineNumber":680,"oldContent":"            Log.e(TAG, \"Fehler beim Neuladen der Route-Landmarks: ${e.message}\")"},{"type":"MODIFY","lineNumber":690,"content":"            }","oldContent":"            }"},{"type":"INSERT","lineNumber":697,"content":"    fun getCurrentlyLoadedLandmarkIds(): List<String> {"},{"type":"DELETE","lineNumber":699,"oldContent":"        return processedLandmarks.map { it.id }"},{"type":"DELETE","lineNumber":711,"oldContent":"            }"},{"type":"INSERT","lineNumber":712,"content":"                    landmarkIds.add(landmark) // landmarks ist bereits List<String>"},{"type":"INSERT","lineNumber":713,"content":"                }"},{"type":"INSERT","lineNumber":714,"content":"            }"},{"type":"INSERT","lineNumber":715,"content":"        }"},{"type":"INSERT","lineNumber":716,"content":"        "},{"type":"INSERT","lineNumber":717,"content":"        return landmarkIds.toList()"},{"type":"DELETE","lineNumber":715,"oldContent":"                    landmarkIds.add(landmark) // landmarks ist bereits List<String>"},{"type":"INSERT","lineNumber":720,"content":"    /**"},{"type":"DELETE","lineNumber":717,"oldContent":"                }"},{"type":"DELETE","lineNumber":719,"oldContent":"        }"},{"type":"DELETE","lineNumber":721,"oldContent":"        "},{"type":"DELETE","lineNumber":725,"oldContent":"        return landmarkIds.toList()"},{"type":"DELETE","lineNumber":726,"oldContent":"                landmarkFeatureStorage?.cleanup()"},{"type":"MODIFY","lineNumber":731,"content":"    }","oldContent":"    }"},{"type":"MODIFY","lineNumber":740,"content":"        return \"Haupteingang\"","oldContent":"}"},{"type":"DELETE","lineNumber":742,"oldContent":"                // Storage-Manager bereinigt sich selbst automatisch"},{"type":"DELETE","lineNumber":743,"oldContent":"}"},{"type":"INSERT","lineNumber":742,"content":"    "},{"type":"INSERT","lineNumber":743,"content":"    fun setCurrentNavigationStep(step: Int) {"},{"type":"INSERT","lineNumber":744,"content":"        Log.d(TAG, \"setCurrentNavigationStep called (stub): $step\")"},{"type":"INSERT","lineNumber":745,"content":"        _currentNavigationStep.value = step"},{"type":"INSERT","lineNumber":746,"content":"    }"},{"type":"INSERT","lineNumber":747,"content":"    "},{"type":"INSERT","lineNumber":748,"content":"    fun getCurrentStep(): NavigationStep? {"},{"type":"INSERT","lineNumber":749,"content":"        Log.d(TAG, \"getCurrentStep called (stub)\")"},{"type":"INSERT","lineNumber":750,"content":"        val steps = getCurrentNavigationSteps()"},{"type":"INSERT","lineNumber":751,"content":"        val currentStepNumber = _currentNavigationStep.value"},{"type":"INSERT","lineNumber":752,"content":"        return steps.find { it.stepNumber == currentStepNumber }"},{"type":"INSERT","lineNumber":753,"content":"    }"},{"type":"INSERT","lineNumber":754,"content":"    "},{"type":"INSERT","lineNumber":756,"content":""},{"type":"DELETE","lineNumber":746,"oldContent":"        }"},{"type":"DELETE","lineNumber":747,"oldContent":"                // Bereinige Feature-Storage Cache"},{"type":"INSERT","lineNumber":758,"content":"     * Cleanup beim Destroy"},{"type":"DELETE","lineNumber":750,"oldContent":"                landmarkFeatureStorage?.cleanup()"},{"type":"DELETE","lineNumber":753,"oldContent":"                "},{"type":"DELETE","lineNumber":756,"oldContent":"                Log.i(TAG, \"RouteViewModel bereinigt\")"},{"type":"INSERT","lineNumber":767,"content":"                // Bereinige Feature-Storage Cache"},{"type":"INSERT","lineNumber":768,"content":"                landmarkFeatureStorage?.cleanup()"},{"type":"INSERT","lineNumber":769,"content":"                "},{"type":"INSERT","lineNumber":770,"content":"                Log.i(TAG, \"RouteViewModel bereinigt\")"},{"type":"INSERT","lineNumber":771,"content":"            } catch (e: Exception) {"},{"type":"INSERT","lineNumber":772,"content":"                Log.e(TAG, \"Fehler beim Bereinigen: ${e.message}\")"},{"type":"INSERT","lineNumber":773,"content":"            }"},{"type":"INSERT","lineNumber":774,"content":"        }"},{"type":"INSERT","lineNumber":776,"content":"}"}]},{"timestamp":1754319978425,"changes":[{"type":"INSERT","lineNumber":32,"content":"    private var routeRepository: RouteRepository? = null"},{"type":"DELETE","lineNumber":33,"oldContent":"    "},{"type":"MODIFY","lineNumber":55,"content":"    private val _isFeatureMappingEnabled = MutableStateFlow(false)","oldContent":""},{"type":"MODIFY","lineNumber":101,"content":"        }","oldContent":"                Log.i(TAG, \"  Landmark IDs: ${step.landmarkIds.joinToString(\", \")}\")"},{"type":"DELETE","lineNumber":435,"oldContent":"    /**"},{"type":"DELETE","lineNumber":436,"oldContent":"     * Setzt den aktuellen Navigationsschritt"},{"type":"DELETE","lineNumber":437,"oldContent":"     */"},{"type":"DELETE","lineNumber":438,"oldContent":"    fun setCurrentNavigationStep(step: Int) {"},{"type":"DELETE","lineNumber":439,"oldContent":"        _currentNavigationStep.value = step"},{"type":"DELETE","lineNumber":440,"oldContent":"        Log.d(TAG, \"Navigationsschritt gesetzt: $step\")"},{"type":"DELETE","lineNumber":441,"oldContent":"    }"},{"type":"INSERT","lineNumber":435,"content":""},{"type":"DELETE","lineNumber":493,"oldContent":"    }"},{"type":"INSERT","lineNumber":487,"content":"            } else {"},{"type":"DELETE","lineNumber":507,"oldContent":"    fun enableStorageSystemImmediately(context: Context) {"},{"type":"INSERT","lineNumber":501,"content":"            try {"},{"type":"DELETE","lineNumber":539,"oldContent":"                "},{"type":"INSERT","lineNumber":534,"content":"                "},{"type":"DELETE","lineNumber":619,"oldContent":"        }"},{"type":"DELETE","lineNumber":620,"oldContent":"}"},{"type":"DELETE","lineNumber":621,"oldContent":"    /**"},{"type":"DELETE","lineNumber":622,"oldContent":"}"},{"type":"DELETE","lineNumber":623,"oldContent":"    }"},{"type":"DELETE","lineNumber":625,"oldContent":"                Log.e(TAG, \"Fehler beim Bereinigen: ${e.message}\")"},{"type":"DELETE","lineNumber":626,"oldContent":"    }"},{"type":"INSERT","lineNumber":614,"content":"            "},{"type":"INSERT","lineNumber":615,"content":"            Log.d(TAG, \"Verfügbare Landmarks: ${routeLandmarks.size}\")"},{"type":"INSERT","lineNumber":616,"content":"            routeLandmarks.forEach { landmark ->"},{"type":"INSERT","lineNumber":617,"content":"                Log.d(TAG, \"- ${landmark.id}: ${landmark.name}\")"},{"type":"INSERT","lineNumber":619,"content":"            "},{"type":"INSERT","lineNumber":620,"content":"            routeLandmarks"},{"type":"INSERT","lineNumber":621,"content":"        } catch (e: Exception) {"},{"type":"DELETE","lineNumber":629,"oldContent":"                Log.e(TAG, \"Fehler beim Bereinigen: ${e.message}\")"},{"type":"DELETE","lineNumber":631,"oldContent":"            } catch (e: Exception) {"},{"type":"INSERT","lineNumber":625,"content":"    }"},{"type":"INSERT","lineNumber":627,"content":"    /**"},{"type":"MODIFY","lineNumber":637,"content":"            }","oldContent":"}"},{"type":"DELETE","lineNumber":648,"oldContent":"    override fun onCleared() {"},{"type":"INSERT","lineNumber":642,"content":"    }"},{"type":"DELETE","lineNumber":662,"oldContent":"            }"},{"type":"INSERT","lineNumber":657,"content":"            }"},{"type":"DELETE","lineNumber":666,"oldContent":"        }"},{"type":"INSERT","lineNumber":661,"content":"        }"},{"type":"INSERT","lineNumber":683,"content":"                reloadLandmarksForRoute(currentRoute.route)"},{"type":"DELETE","lineNumber":690,"oldContent":"            }"},{"type":"DELETE","lineNumber":693,"oldContent":"                "},{"type":"INSERT","lineNumber":687,"content":"    "},{"type":"DELETE","lineNumber":711,"oldContent":"                    landmarkIds.add(landmark) // landmarks ist bereits List<String>"},{"type":"INSERT","lineNumber":706,"content":"                    landmarkIds.add(landmark) // landmarks ist bereits List<String>"},{"type":"DELETE","lineNumber":714,"oldContent":"    }"},{"type":"DELETE","lineNumber":716,"oldContent":""},{"type":"DELETE","lineNumber":719,"oldContent":"     * Fehlende Methoden für Navigation.kt"},{"type":"DELETE","lineNumber":721,"oldContent":"     */"},{"type":"INSERT","lineNumber":712,"content":"    }"},{"type":"INSERT","lineNumber":713,"content":""},{"type":"INSERT","lineNumber":715,"content":"     * Fehlende Methoden für Navigation.kt"},{"type":"INSERT","lineNumber":716,"content":"     */"},{"type":"INSERT","lineNumber":724,"content":"        // Stub implementation - verhindert Crashes"},{"type":"DELETE","lineNumber":731,"oldContent":"    }"},{"type":"DELETE","lineNumber":735,"oldContent":"}"},{"type":"DELETE","lineNumber":736,"oldContent":"                "},{"type":"DELETE","lineNumber":737,"oldContent":"                // Storage-Manager bereinigt sich selbst automatisch"},{"type":"DELETE","lineNumber":738,"oldContent":"            try {"},{"type":"INSERT","lineNumber":729,"content":"        return \"Büro Prof. Dr. Ludwig (PT 3.0.84C)\""},{"type":"INSERT","lineNumber":731,"content":"    "},{"type":"INSERT","lineNumber":732,"content":"    fun getCurrentEndPoint(): String {"},{"type":"INSERT","lineNumber":733,"content":"        Log.d(TAG, \"getCurrentEndPoint called (stub)\")"},{"type":"DELETE","lineNumber":741,"oldContent":"            }"},{"type":"INSERT","lineNumber":735,"content":"    }"},{"type":"DELETE","lineNumber":745,"oldContent":""},{"type":"DELETE","lineNumber":747,"oldContent":"    /**"},{"type":"DELETE","lineNumber":751,"oldContent":"     */"},{"type":"DELETE","lineNumber":753,"oldContent":"    override fun onCleared() {"},{"type":"DELETE","lineNumber":756,"oldContent":"        super.onCleared()"},{"type":"DELETE","lineNumber":758,"oldContent":"        viewModelScope.launch {"},{"type":"DELETE","lineNumber":761,"oldContent":"            try {"},{"type":"DELETE","lineNumber":762,"oldContent":"                // Storage-Manager bereinigt sich selbst automatisch"},{"type":"DELETE","lineNumber":764,"oldContent":"        }"},{"type":"INSERT","lineNumber":750,"content":""},{"type":"INSERT","lineNumber":751,"content":"    /**"},{"type":"DELETE","lineNumber":766,"oldContent":"            }"},{"type":"DELETE","lineNumber":767,"oldContent":"                Log.e(TAG, \"Fehler beim Bereinigen: ${e.message}\")"},{"type":"DELETE","lineNumber":768,"oldContent":"            } catch (e: Exception) {"},{"type":"DELETE","lineNumber":769,"oldContent":"                Log.i(TAG, \"RouteViewModel bereinigt\")"},{"type":"INSERT","lineNumber":753,"content":"     */"},{"type":"INSERT","lineNumber":754,"content":"    override fun onCleared() {"},{"type":"INSERT","lineNumber":755,"content":"        super.onCleared()"},{"type":"INSERT","lineNumber":756,"content":"        viewModelScope.launch {"},{"type":"INSERT","lineNumber":757,"content":"            try {"},{"type":"INSERT","lineNumber":758,"content":"                // Storage-Manager bereinigt sich selbst automatisch"},{"type":"INSERT","lineNumber":759,"content":"                storageManager?.logPerformanceSummary()"},{"type":"DELETE","lineNumber":771,"oldContent":"                landmarkFeatureStorage?.cleanup()"},{"type":"INSERT","lineNumber":762,"content":"                landmarkFeatureStorage?.cleanup()"},{"type":"INSERT","lineNumber":763,"content":"                "},{"type":"INSERT","lineNumber":764,"content":"                Log.i(TAG, \"RouteViewModel bereinigt\")"},{"type":"INSERT","lineNumber":765,"content":"            } catch (e: Exception) {"},{"type":"INSERT","lineNumber":766,"content":"                Log.e(TAG, \"Fehler beim Bereinigen: ${e.message}\")"},{"type":"INSERT","lineNumber":767,"content":"            }"},{"type":"INSERT","lineNumber":768,"content":"        }"},{"type":"INSERT","lineNumber":769,"content":"    }"},{"type":"INSERT","lineNumber":770,"content":"}"}]},{"timestamp":1754319994231,"changes":[{"type":"INSERT","lineNumber":4,"content":"import android.util.Log"},{"type":"DELETE","lineNumber":6,"oldContent":"import android.util.Log"},{"type":"DELETE","lineNumber":65,"oldContent":"        var stepNumber = 1"},{"type":"DELETE","lineNumber":66,"oldContent":""},{"type":"INSERT","lineNumber":65,"content":"    fun loadNavigationRoute(context: Context): NavigationRoute? {"},{"type":"INSERT","lineNumber":66,"content":"        return try {"},{"type":"DELETE","lineNumber":98,"oldContent":"            Log.i(TAG, \"Schritt ${step.stepNumber}: ${step.instruction}\")"},{"type":"DELETE","lineNumber":99,"oldContent":"            Log.i(TAG, \"  Gebäude: ${step.building}\")"},{"type":"INSERT","lineNumber":98,"content":"        } catch (e: Exception) {"},{"type":"INSERT","lineNumber":99,"content":"            Log.e(TAG, \"Fehler beim Laden der Route: ${e.message}\")"},{"type":"DELETE","lineNumber":481,"oldContent":"            } else {"},{"type":"INSERT","lineNumber":487,"content":"            } else {"},{"type":"DELETE","lineNumber":495,"oldContent":"            try {"},{"type":"INSERT","lineNumber":501,"content":"            try {"},{"type":"DELETE","lineNumber":528,"oldContent":"                "},{"type":"INSERT","lineNumber":534,"content":"                "},{"type":"DELETE","lineNumber":606,"oldContent":"}"},{"type":"DELETE","lineNumber":607,"oldContent":"    /**"},{"type":"INSERT","lineNumber":606,"content":"                                position = Position(0.0, 0.0, 0.0),"},{"type":"INSERT","lineNumber":607,"content":"                                imageUrl = \"\","},{"type":"INSERT","lineNumber":608,"content":"                                confidence = 1.0f"},{"type":"INSERT","lineNumber":609,"content":"                            )"},{"type":"INSERT","lineNumber":610,"content":"                        )"},{"type":"INSERT","lineNumber":611,"content":"                    }"},{"type":"INSERT","lineNumber":612,"content":"                }"},{"type":"INSERT","lineNumber":613,"content":"            }"},{"type":"DELETE","lineNumber":609,"oldContent":"}"},{"type":"DELETE","lineNumber":611,"oldContent":"    }"},{"type":"DELETE","lineNumber":613,"oldContent":"            }"},{"type":"DELETE","lineNumber":615,"oldContent":"                Log.e(TAG, \"Fehler beim Bereinigen: ${e.message}\")"},{"type":"DELETE","lineNumber":616,"oldContent":"    }"},{"type":"INSERT","lineNumber":618,"content":"            }"},{"type":"DELETE","lineNumber":620,"oldContent":"                landmarkFeatureStorage?.cleanup()"},{"type":"DELETE","lineNumber":621,"oldContent":"    }"},{"type":"DELETE","lineNumber":622,"oldContent":"    /**"},{"type":"DELETE","lineNumber":623,"oldContent":"                storageManager?.logPerformanceSummary()"},{"type":"INSERT","lineNumber":625,"content":"    }"},{"type":"INSERT","lineNumber":627,"content":"    /**"},{"type":"DELETE","lineNumber":631,"oldContent":"            }"},{"type":"DELETE","lineNumber":632,"oldContent":"        viewModelScope.launch {"},{"type":"INSERT","lineNumber":631,"content":"        return try {"},{"type":"MODIFY","lineNumber":637,"content":"            }","oldContent":"    }"},{"type":"DELETE","lineNumber":643,"oldContent":""},{"type":"DELETE","lineNumber":644,"oldContent":"    /**"},{"type":"DELETE","lineNumber":645,"oldContent":"     * Gibt den aktuellen Navigationsschritt zurück"},{"type":"DELETE","lineNumber":646,"oldContent":"     */"},{"type":"DELETE","lineNumber":647,"oldContent":"    fun getCurrentStep(): NavigationStep? {"},{"type":"DELETE","lineNumber":648,"oldContent":"        return try {"},{"type":"DELETE","lineNumber":649,"oldContent":"            val steps = getCurrentNavigationSteps()"},{"type":"DELETE","lineNumber":650,"oldContent":"            val currentStepNumber = _currentNavigationStep.value"},{"type":"DELETE","lineNumber":651,"oldContent":"            }"},{"type":"DELETE","lineNumber":652,"oldContent":"            "},{"type":"DELETE","lineNumber":653,"oldContent":"            if (steps.isNotEmpty() && currentStepNumber > 0 && currentStepNumber <= steps.size) {"},{"type":"DELETE","lineNumber":654,"oldContent":"                steps[currentStepNumber - 1] // Convert to 0-based index"},{"type":"DELETE","lineNumber":655,"oldContent":"            } else {"},{"type":"DELETE","lineNumber":656,"oldContent":"        }"},{"type":"DELETE","lineNumber":657,"oldContent":"                Log.w(TAG, \"Aktueller Schritt nicht verfügbar: $currentStepNumber von ${steps.size}\")"},{"type":"DELETE","lineNumber":658,"oldContent":"                null"},{"type":"DELETE","lineNumber":659,"oldContent":"        } catch (e: Exception) {"},{"type":"DELETE","lineNumber":660,"oldContent":"            Log.e(TAG, \"Fehler beim Laden des aktuellen Schritts: ${e.message}\")"},{"type":"DELETE","lineNumber":661,"oldContent":"            null"},{"type":"INSERT","lineNumber":644,"content":""},{"type":"INSERT","lineNumber":645,"content":""},{"type":"DELETE","lineNumber":677,"oldContent":"                reloadLandmarksForRoute(currentRoute.route)"},{"type":"DELETE","lineNumber":682,"oldContent":"    "},{"type":"INSERT","lineNumber":665,"content":"                reloadLandmarksForRoute(currentRoute.route)"},{"type":"INSERT","lineNumber":669,"content":"    "},{"type":"DELETE","lineNumber":700,"oldContent":"                    landmarkIds.add(landmark) // landmarks ist bereits List<String>"},{"type":"DELETE","lineNumber":706,"oldContent":"    }"},{"type":"DELETE","lineNumber":708,"oldContent":""},{"type":"INSERT","lineNumber":688,"content":"                    landmarkIds.add(landmark) // landmarks ist bereits List<String>"},{"type":"DELETE","lineNumber":710,"oldContent":"     * Fehlende Methoden für Navigation.kt"},{"type":"DELETE","lineNumber":712,"oldContent":"     */"},{"type":"INSERT","lineNumber":694,"content":"    }"},{"type":"INSERT","lineNumber":695,"content":""},{"type":"INSERT","lineNumber":697,"content":"     * Fehlende Methoden für Navigation.kt"},{"type":"INSERT","lineNumber":698,"content":"     */"},{"type":"DELETE","lineNumber":718,"oldContent":"        // Stub implementation - verhindert Crashes"},{"type":"DELETE","lineNumber":724,"oldContent":"        return \"Büro Prof. Dr. Ludwig (PT 3.0.84C)\""},{"type":"INSERT","lineNumber":706,"content":"        // Stub implementation - verhindert Crashes"},{"type":"DELETE","lineNumber":728,"oldContent":"    fun getCurrentEndPoint(): String {"},{"type":"INSERT","lineNumber":709,"content":"    fun getCurrentStartPoint(): String {"},{"type":"INSERT","lineNumber":710,"content":"        Log.d(TAG, \"getCurrentStartPoint called (stub)\")"},{"type":"INSERT","lineNumber":711,"content":"        return \"Büro Prof. Dr. Ludwig (PT 3.0.84C)\""},{"type":"INSERT","lineNumber":712,"content":"    }"},{"type":"INSERT","lineNumber":714,"content":"    fun getCurrentEndPoint(): String {"},{"type":"DELETE","lineNumber":731,"oldContent":"    }"},{"type":"DELETE","lineNumber":732,"oldContent":"                "},{"type":"DELETE","lineNumber":733,"oldContent":"    }"},{"type":"DELETE","lineNumber":734,"oldContent":"            }"},{"type":"INSERT","lineNumber":717,"content":"    }"},{"type":"DELETE","lineNumber":742,"oldContent":""},{"type":"DELETE","lineNumber":744,"oldContent":"    /**"},{"type":"INSERT","lineNumber":726,"content":"        val steps = getCurrentNavigationSteps()"},{"type":"INSERT","lineNumber":727,"content":"        val currentStepNumber = _currentNavigationStep.value"},{"type":"INSERT","lineNumber":728,"content":"        return steps.find { it.stepNumber == currentStepNumber }"},{"type":"INSERT","lineNumber":729,"content":"    }"},{"type":"INSERT","lineNumber":730,"content":"    "},{"type":"INSERT","lineNumber":731,"content":""},{"type":"INSERT","lineNumber":732,"content":""},{"type":"INSERT","lineNumber":733,"content":"    /**"},{"type":"INSERT","lineNumber":734,"content":"     * Cleanup beim Destroy"},{"type":"DELETE","lineNumber":748,"oldContent":"        val steps = getCurrentNavigationSteps()"},{"type":"DELETE","lineNumber":750,"oldContent":"        val currentStepNumber = _currentNavigationStep.value"},{"type":"DELETE","lineNumber":753,"oldContent":"        return steps.find { it.stepNumber == currentStepNumber }"},{"type":"DELETE","lineNumber":756,"oldContent":"    }"},{"type":"DELETE","lineNumber":757,"oldContent":"    "},{"type":"INSERT","lineNumber":742,"content":"                "},{"type":"INSERT","lineNumber":743,"content":"                // Bereinige Feature-Storage Cache"},{"type":"DELETE","lineNumber":760,"oldContent":""},{"type":"DELETE","lineNumber":763,"oldContent":"     * Cleanup beim Destroy"},{"type":"DELETE","lineNumber":769,"oldContent":"                landmarkFeatureStorage?.cleanup()"}]},{"timestamp":1754321415007,"changes":[{"type":"MODIFY","lineNumber":26,"content":"    private val TAG = \"RouteViewModel\"","oldContent":"    // State für Feature-Navigation"},{"type":"MODIFY","lineNumber":487,"content":"            } else {","oldContent":"            } else {"},{"type":"MODIFY","lineNumber":501,"content":"            try {","oldContent":"            try {"},{"type":"DELETE","lineNumber":512,"oldContent":"                        building = building,"},{"type":"DELETE","lineNumber":513,"oldContent":"                        targetLandmark = null"},{"type":"INSERT","lineNumber":512,"content":"                        landmarks = emptyList()"},{"type":"DELETE","lineNumber":518,"oldContent":"                        building = building,"},{"type":"DELETE","lineNumber":519,"oldContent":"                        targetLandmark = null"},{"type":"INSERT","lineNumber":517,"content":"                        landmarks = emptyList()"},{"type":"DELETE","lineNumber":524,"oldContent":"                        building = building,"},{"type":"DELETE","lineNumber":525,"oldContent":"                        targetLandmark = null"},{"type":"INSERT","lineNumber":522,"content":"                        landmarks = emptyList()"},{"type":"DELETE","lineNumber":530,"oldContent":"                        building = building,"},{"type":"DELETE","lineNumber":531,"oldContent":"                        targetLandmark = null"},{"type":"INSERT","lineNumber":527,"content":"                        landmarks = emptyList()"},{"type":"DELETE","lineNumber":533,"oldContent":"                "},{"type":"INSERT","lineNumber":530,"content":"                "},{"type":"DELETE","lineNumber":536,"oldContent":"                    totalLength = 150.0, // 150 Meter"},{"type":"INSERT","lineNumber":532,"content":"                    id = \"demo_route\","},{"type":"INSERT","lineNumber":533,"content":"                    name = \"Demo Route\","},{"type":"DELETE","lineNumber":559,"oldContent":"}"},{"type":"DELETE","lineNumber":560,"oldContent":""},{"type":"DELETE","lineNumber":561,"oldContent":"    }"},{"type":"DELETE","lineNumber":562,"oldContent":"            emptyList()"},{"type":"DELETE","lineNumber":563,"oldContent":"        } catch (e: Exception) {"},{"type":"INSERT","lineNumber":556,"content":"                Log.e(TAG, \"Fehler beim Feature-Matching: ${e.message}\")"},{"type":"INSERT","lineNumber":557,"content":"                _currentMatches.value = emptyList()"},{"type":"DELETE","lineNumber":565,"oldContent":"            } else {"},{"type":"DELETE","lineNumber":566,"oldContent":"            if (route != null) {"},{"type":"INSERT","lineNumber":559,"content":"        }"},{"type":"INSERT","lineNumber":560,"content":"    }"},{"type":"INSERT","lineNumber":561,"content":"    "},{"type":"INSERT","lineNumber":564,"content":""},{"type":"INSERT","lineNumber":565,"content":"    "},{"type":"DELETE","lineNumber":603,"oldContent":"}"},{"type":"DELETE","lineNumber":604,"oldContent":"            }"},{"type":"DELETE","lineNumber":605,"oldContent":"    }"},{"type":"INSERT","lineNumber":600,"content":"                                id = landmarkInfo.id, // Exakte ID aus Dateiname"},{"type":"INSERT","lineNumber":601,"content":"                                name = landmarkInfo.filename.substringBeforeLast('.'),"},{"type":"INSERT","lineNumber":602,"content":"                                description = \"Verfügbares Landmark\","},{"type":"DELETE","lineNumber":609,"oldContent":"            "},{"type":"DELETE","lineNumber":612,"oldContent":"            Log.d(TAG, \"Verfügbare Landmarks: ${routeLandmarks.size}\")"},{"type":"DELETE","lineNumber":615,"oldContent":"            routeLandmarks.forEach { landmark ->"},{"type":"DELETE","lineNumber":617,"oldContent":"                Log.d(TAG, \"- ${landmark.id}: ${landmark.name}\")"},{"type":"INSERT","lineNumber":612,"content":"            Log.d(TAG, \"Verfügbare Landmarks: ${routeLandmarks.size}\")"},{"type":"INSERT","lineNumber":613,"content":"            routeLandmarks.forEach { landmark ->"},{"type":"INSERT","lineNumber":614,"content":"                Log.d(TAG, \"- ${landmark.id}: ${landmark.name}\")"},{"type":"INSERT","lineNumber":616,"content":"            "},{"type":"DELETE","lineNumber":623,"oldContent":"    }"},{"type":"DELETE","lineNumber":626,"oldContent":"    /**"},{"type":"INSERT","lineNumber":622,"content":"    }"},{"type":"INSERT","lineNumber":624,"content":"    /**"},{"type":"DELETE","lineNumber":635,"oldContent":"    }"},{"type":"DELETE","lineNumber":636,"oldContent":"            }"},{"type":"INSERT","lineNumber":632,"content":"            } else {"},{"type":"INSERT","lineNumber":634,"content":"            }"},{"type":"INSERT","lineNumber":639,"content":"    }"},{"type":"DELETE","lineNumber":644,"oldContent":"    }"},{"type":"DELETE","lineNumber":647,"oldContent":"                reloadLandmarksForRoute(currentRoute.route)"},{"type":"DELETE","lineNumber":652,"oldContent":"    "},{"type":"INSERT","lineNumber":662,"content":"                reloadLandmarksForRoute(currentRoute.route)"},{"type":"DELETE","lineNumber":670,"oldContent":"                    landmarkIds.add(landmark) // landmarks ist bereits List<String>"},{"type":"INSERT","lineNumber":666,"content":"    "},{"type":"DELETE","lineNumber":678,"oldContent":"    }"},{"type":"DELETE","lineNumber":679,"oldContent":""},{"type":"DELETE","lineNumber":682,"oldContent":"     * Fehlende Methoden für Navigation.kt"},{"type":"DELETE","lineNumber":685,"oldContent":"     */"},{"type":"DELETE","lineNumber":692,"oldContent":"        // Stub implementation - verhindert Crashes"},{"type":"DELETE","lineNumber":694,"oldContent":"    fun getCurrentStartPoint(): String {"},{"type":"INSERT","lineNumber":685,"content":"                    landmarkIds.add(landmark) // landmarks ist bereits List<String>"},{"type":"DELETE","lineNumber":696,"oldContent":"        Log.d(TAG, \"getCurrentStartPoint called (stub)\")"},{"type":"DELETE","lineNumber":697,"oldContent":"        return \"Büro Prof. Dr. Ludwig (PT 3.0.84C)\""},{"type":"DELETE","lineNumber":699,"oldContent":"    }"},{"type":"DELETE","lineNumber":701,"oldContent":"    fun getCurrentEndPoint(): String {"},{"type":"DELETE","lineNumber":704,"oldContent":"    /**"},{"type":"INSERT","lineNumber":692,"content":""},{"type":"INSERT","lineNumber":693,"content":"    /**"},{"type":"INSERT","lineNumber":694,"content":"     * Fehlende Methoden für Navigation.kt"},{"type":"INSERT","lineNumber":695,"content":"     */"},{"type":"DELETE","lineNumber":710,"oldContent":"}"},{"type":"INSERT","lineNumber":700,"content":"    "},{"type":"INSERT","lineNumber":701,"content":"    fun startFrameProcessing() {"},{"type":"INSERT","lineNumber":702,"content":"        Log.d(TAG, \"startFrameProcessing called (stub)\")"},{"type":"INSERT","lineNumber":703,"content":"        // Stub implementation - verhindert Crashes"},{"type":"DELETE","lineNumber":712,"oldContent":"                "},{"type":"DELETE","lineNumber":713,"oldContent":"        val steps = getCurrentNavigationSteps()"},{"type":"DELETE","lineNumber":714,"oldContent":"    }"},{"type":"DELETE","lineNumber":715,"oldContent":"        val currentStepNumber = _currentNavigationStep.value"},{"type":"DELETE","lineNumber":717,"oldContent":"        return steps.find { it.stepNumber == currentStepNumber }"},{"type":"INSERT","lineNumber":706,"content":"    fun getCurrentStartPoint(): String {"},{"type":"INSERT","lineNumber":707,"content":"        Log.d(TAG, \"getCurrentStartPoint called (stub)\")"},{"type":"INSERT","lineNumber":708,"content":"        return \"Büro Prof. Dr. Ludwig (PT 3.0.84C)\""},{"type":"DELETE","lineNumber":720,"oldContent":"    "},{"type":"INSERT","lineNumber":711,"content":"    fun getCurrentEndPoint(): String {"},{"type":"DELETE","lineNumber":722,"oldContent":""},{"type":"DELETE","lineNumber":723,"oldContent":""},{"type":"DELETE","lineNumber":724,"oldContent":"    /**"},{"type":"DELETE","lineNumber":725,"oldContent":"     * Cleanup beim Destroy"},{"type":"INSERT","lineNumber":714,"content":"    }"},{"type":"DELETE","lineNumber":733,"oldContent":"                "},{"type":"DELETE","lineNumber":734,"oldContent":"                // Bereinige Feature-Storage Cache"},{"type":"INSERT","lineNumber":723,"content":"        val steps = getCurrentNavigationSteps()"},{"type":"INSERT","lineNumber":724,"content":"        val currentStepNumber = _currentNavigationStep.value"},{"type":"INSERT","lineNumber":725,"content":"        return steps.find { it.stepNumber == currentStepNumber }"},{"type":"INSERT","lineNumber":726,"content":"    }"},{"type":"INSERT","lineNumber":727,"content":"    "},{"type":"INSERT","lineNumber":728,"content":""},{"type":"INSERT","lineNumber":729,"content":""},{"type":"INSERT","lineNumber":730,"content":"    /**"},{"type":"INSERT","lineNumber":731,"content":"     * Cleanup beim Destroy"},{"type":"INSERT","lineNumber":739,"content":"                "},{"type":"INSERT","lineNumber":740,"content":"                // Bereinige Feature-Storage Cache"},{"type":"INSERT","lineNumber":749,"content":"}"}]},{"timestamp":1754321425478,"changes":[{"type":"MODIFY","lineNumber":7,"content":"import kotlinx.coroutines.flow.MutableStateFlow","oldContent":"import android.content.Context"},{"type":"MODIFY","lineNumber":64,"content":"     */","oldContent":"        val steps = mutableListOf<NavigationStep>()"},{"type":"INSERT","lineNumber":486,"content":"                result is SaveResult.Success"},{"type":"DELETE","lineNumber":487,"oldContent":"            } else {"},{"type":"INSERT","lineNumber":500,"content":"        viewModelScope.launch {"},{"type":"DELETE","lineNumber":501,"oldContent":"            try {"},{"type":"MODIFY","lineNumber":517,"content":"                        landmarks = emptyList()","oldContent":"                        landmarks = emptyList()"},{"type":"DELETE","lineNumber":520,"oldContent":"                        landmarks = emptyList()"},{"type":"MODIFY","lineNumber":523,"content":"                    ),","oldContent":"                    ),"},{"type":"DELETE","lineNumber":528,"oldContent":"                "},{"type":"DELETE","lineNumber":529,"oldContent":"                    id = \"demo_route\","},{"type":"INSERT","lineNumber":527,"content":"                        landmarks = emptyList()"},{"type":"DELETE","lineNumber":531,"oldContent":"                    name = \"Demo Route\","},{"type":"INSERT","lineNumber":530,"content":"                "},{"type":"INSERT","lineNumber":532,"content":"                    id = \"demo_route\","},{"type":"INSERT","lineNumber":533,"content":"                    name = \"Demo Route\","},{"type":"MODIFY","lineNumber":538,"content":"                Log.i(TAG, \"Feature-Navigation Route geladen: ${demoSteps.size} Schritte\")","oldContent":"                Log.i(TAG, \"Feature-Navigation Route geladen: ${demoSteps.size} Schritte, ${featureRoute.totalLength}m\")"},{"type":"DELETE","lineNumber":553,"oldContent":"                Log.e(TAG, \"Fehler beim Feature-Matching: ${e.message}\")"},{"type":"INSERT","lineNumber":555,"content":"            } catch (e: Exception) {"},{"type":"INSERT","lineNumber":556,"content":"                Log.e(TAG, \"Fehler beim Feature-Matching: ${e.message}\")"},{"type":"DELETE","lineNumber":557,"oldContent":"        } catch (e: Exception) {"},{"type":"INSERT","lineNumber":558,"content":"            }"},{"type":"DELETE","lineNumber":562,"oldContent":"     * Gibt die aktuellen Navigationsschritte zurück"},{"type":"INSERT","lineNumber":597,"content":"                    if (routeLandmarks.none { it.id == landmarkInfo.id }) {"},{"type":"INSERT","lineNumber":598,"content":"                        routeLandmarks.add("},{"type":"INSERT","lineNumber":599,"content":"                            FeatureLandmark("},{"type":"DELETE","lineNumber":598,"oldContent":"    }"},{"type":"DELETE","lineNumber":600,"oldContent":"            }"},{"type":"DELETE","lineNumber":602,"oldContent":"    }"},{"type":"DELETE","lineNumber":608,"oldContent":"            Log.d(TAG, \"Verfügbare Landmarks: ${routeLandmarks.size}\")"},{"type":"DELETE","lineNumber":609,"oldContent":"            routeLandmarks.forEach { landmark ->"},{"type":"DELETE","lineNumber":611,"oldContent":"                Log.d(TAG, \"- ${landmark.id}: ${landmark.name}\")"},{"type":"DELETE","lineNumber":613,"oldContent":"            "},{"type":"INSERT","lineNumber":612,"content":"            Log.d(TAG, \"Verfügbare Landmarks: ${routeLandmarks.size}\")"},{"type":"INSERT","lineNumber":613,"content":"            routeLandmarks.forEach { landmark ->"},{"type":"INSERT","lineNumber":614,"content":"                Log.d(TAG, \"- ${landmark.id}: ${landmark.name}\")"},{"type":"INSERT","lineNumber":616,"content":"            "},{"type":"DELETE","lineNumber":619,"oldContent":"    }"},{"type":"DELETE","lineNumber":621,"oldContent":"    /**"},{"type":"INSERT","lineNumber":622,"content":"    }"},{"type":"INSERT","lineNumber":624,"content":"    /**"},{"type":"DELETE","lineNumber":629,"oldContent":"            } else {"},{"type":"MODIFY","lineNumber":632,"content":"            } else {","oldContent":"            }"},{"type":"INSERT","lineNumber":634,"content":"            }"},{"type":"DELETE","lineNumber":636,"oldContent":"    }"},{"type":"INSERT","lineNumber":639,"content":"    }"},{"type":"DELETE","lineNumber":657,"oldContent":"                reloadLandmarksForRoute(currentRoute.route)"},{"type":"MODIFY","lineNumber":662,"content":"                reloadLandmarksForRoute(currentRoute.route)","oldContent":"    "},{"type":"INSERT","lineNumber":666,"content":"    "},{"type":"DELETE","lineNumber":678,"oldContent":"                    landmarkIds.add(landmark) // landmarks ist bereits List<String>"},{"type":"INSERT","lineNumber":684,"content":"                routePart.landmarks?.forEach { landmark ->"},{"type":"INSERT","lineNumber":685,"content":"                    landmarkIds.add(landmark) // landmarks ist bereits List<String>"},{"type":"INSERT","lineNumber":686,"content":"                }"},{"type":"INSERT","lineNumber":687,"content":"            }"},{"type":"INSERT","lineNumber":688,"content":"        }"},{"type":"INSERT","lineNumber":689,"content":"        "},{"type":"INSERT","lineNumber":690,"content":"        return landmarkIds.toList()"},{"type":"INSERT","lineNumber":691,"content":"    }"},{"type":"DELETE","lineNumber":687,"oldContent":"                routePart.landmarks?.forEach { landmark ->"},{"type":"DELETE","lineNumber":690,"oldContent":"                }"},{"type":"DELETE","lineNumber":691,"oldContent":"            }"},{"type":"INSERT","lineNumber":696,"content":"    fun enableStorageSystemImmediately(context: Context) {"},{"type":"INSERT","lineNumber":697,"content":"        Log.d(TAG, \"enableStorageSystemImmediately called (stub)\")"},{"type":"INSERT","lineNumber":698,"content":"        // Stub implementation - verhindert Crashes"},{"type":"INSERT","lineNumber":699,"content":"    }"},{"type":"DELETE","lineNumber":693,"oldContent":"        }"},{"type":"DELETE","lineNumber":696,"oldContent":"        "},{"type":"DELETE","lineNumber":698,"oldContent":"        return landmarkIds.toList()"},{"type":"INSERT","lineNumber":705,"content":"    "},{"type":"DELETE","lineNumber":701,"oldContent":"    fun enableStorageSystemImmediately(context: Context) {"},{"type":"DELETE","lineNumber":703,"oldContent":"        Log.d(TAG, \"enableStorageSystemImmediately called (stub)\")"},{"type":"DELETE","lineNumber":705,"oldContent":"        // Stub implementation - verhindert Crashes"},{"type":"INSERT","lineNumber":710,"content":"    "},{"type":"DELETE","lineNumber":708,"oldContent":"                // Storage-Manager bereinigt sich selbst automatisch"},{"type":"INSERT","lineNumber":712,"content":"        Log.d(TAG, \"getCurrentEndPoint called (stub)\")"},{"type":"INSERT","lineNumber":713,"content":"        return \"Haupteingang\""},{"type":"INSERT","lineNumber":716,"content":"    fun setCurrentNavigationStep(step: Int) {"},{"type":"INSERT","lineNumber":717,"content":"        Log.d(TAG, \"setCurrentNavigationStep called (stub): $step\")"},{"type":"INSERT","lineNumber":718,"content":"        _currentNavigationStep.value = step"},{"type":"DELETE","lineNumber":713,"oldContent":"        Log.d(TAG, \"getCurrentEndPoint called (stub)\")"},{"type":"INSERT","lineNumber":721,"content":"    fun getCurrentStep(): NavigationStep? {"},{"type":"INSERT","lineNumber":722,"content":"        Log.d(TAG, \"getCurrentStep called (stub)\")"},{"type":"DELETE","lineNumber":718,"oldContent":"        return \"Haupteingang\""},{"type":"DELETE","lineNumber":720,"oldContent":"    "},{"type":"DELETE","lineNumber":722,"oldContent":"    fun setCurrentNavigationStep(step: Int) {"},{"type":"DELETE","lineNumber":724,"oldContent":"        Log.d(TAG, \"setCurrentNavigationStep called (stub): $step\")"},{"type":"DELETE","lineNumber":726,"oldContent":"        _currentNavigationStep.value = step"},{"type":"DELETE","lineNumber":728,"oldContent":"    }"},{"type":"DELETE","lineNumber":729,"oldContent":"    "},{"type":"DELETE","lineNumber":730,"oldContent":"    fun getCurrentStep(): NavigationStep? {"},{"type":"DELETE","lineNumber":731,"oldContent":"        Log.d(TAG, \"getCurrentStep called (stub)\")"},{"type":"DELETE","lineNumber":734,"oldContent":"                "},{"type":"DELETE","lineNumber":736,"oldContent":"                // Bereinige Feature-Storage Cache"},{"type":"INSERT","lineNumber":739,"content":"                "},{"type":"INSERT","lineNumber":740,"content":"                // Bereinige Feature-Storage Cache"},{"type":"DELETE","lineNumber":746,"oldContent":"}"},{"type":"INSERT","lineNumber":749,"content":"}"}]},{"timestamp":1754321441007,"changes":[{"type":"MODIFY","lineNumber":12,"content":"import kotlinx.coroutines.runBlocking","oldContent":"import kotlinx.coroutines.flow.asStateFlow"},{"type":"MODIFY","lineNumber":15,"content":"import com.example.arwalking.storage.SaveResult","oldContent":"    private val TAG = \"RouteViewModel\""},{"type":"DELETE","lineNumber":33,"oldContent":""},{"type":"DELETE","lineNumber":34,"oldContent":"        return try {"},{"type":"DELETE","lineNumber":35,"oldContent":""},{"type":"DELETE","lineNumber":36,"oldContent":"            val jsonString = loadJSONFromAsset(context, \"route.json\")"},{"type":"DELETE","lineNumber":37,"oldContent":"            val routeData = gson.fromJson(jsonString, RouteData::class.java)"},{"type":"DELETE","lineNumber":39,"oldContent":"            convertToNavigationRoute(routeData)"},{"type":"INSERT","lineNumber":34,"content":"    // Feature Matching System"},{"type":"INSERT","lineNumber":35,"content":"    private var featureMatchingEngine: FeatureMatchingEngine? = null"},{"type":"INSERT","lineNumber":36,"content":"    private var landmarkFeatureStorage: LandmarkFeatureStorage? = null"},{"type":"INSERT","lineNumber":37,"content":"    private var arTrackingSystem: ARTrackingSystem? = null"},{"type":"INSERT","lineNumber":38,"content":"    "},{"type":"INSERT","lineNumber":39,"content":"    // Verarbeitete Landmarks für schnelles Matching"},{"type":"MODIFY","lineNumber":105,"content":"     * Loggt Informationen über die geladene NavigationRoute","oldContent":"        }"},{"type":"DELETE","lineNumber":107,"oldContent":"            }"},{"type":"DELETE","lineNumber":108,"oldContent":"                Log.e(TAG, \"Fehler beim Bereinigen: ${e.message}\")"},{"type":"DELETE","lineNumber":109,"oldContent":"                Log.i(TAG, \"RouteViewModel bereinigt\")"},{"type":"DELETE","lineNumber":110,"oldContent":"                landmarkFeatureStorage?.cleanup()"},{"type":"DELETE","lineNumber":111,"oldContent":"                // Bereinige Feature-Storage Cache"},{"type":"DELETE","lineNumber":112,"oldContent":"                "},{"type":"DELETE","lineNumber":113,"oldContent":"                storageManager?.logPerformanceSummary()"},{"type":"DELETE","lineNumber":114,"oldContent":"                // Storage-Manager bereinigt sich selbst automatisch"},{"type":"DELETE","lineNumber":115,"oldContent":"            try {"},{"type":"DELETE","lineNumber":116,"oldContent":"        viewModelScope.launch {"},{"type":"DELETE","lineNumber":117,"oldContent":"    override fun onCleared() {"},{"type":"DELETE","lineNumber":118,"oldContent":"     * Cleanup beim Destroy"},{"type":"INSERT","lineNumber":107,"content":"    fun logNavigationRoute(navigationRoute: NavigationRoute) {"},{"type":"INSERT","lineNumber":108,"content":"        Log.i(TAG, \"=== Navigation Route Details ===\")"},{"type":"INSERT","lineNumber":109,"content":"        Log.i(TAG, \"Route ID: ${navigationRoute.id}\")"},{"type":"INSERT","lineNumber":110,"content":"        Log.i(TAG, \"Route Name: ${navigationRoute.name}\")"},{"type":"INSERT","lineNumber":111,"content":"        Log.i(TAG, \"Route Description: ${navigationRoute.description}\")"},{"type":"INSERT","lineNumber":112,"content":"        Log.i(TAG, \"Anzahl Schritte: ${navigationRoute.steps.size}\")"},{"type":"INSERT","lineNumber":113,"content":"        "},{"type":"INSERT","lineNumber":114,"content":"        navigationRoute.steps.forEachIndexed { index, step ->"},{"type":"INSERT","lineNumber":115,"content":"            Log.d(TAG, \"Schritt ${index + 1}: ${step.instruction}\")"},{"type":"INSERT","lineNumber":116,"content":"            Log.d(TAG, \"  - Building: ${step.building}\")"},{"type":"INSERT","lineNumber":117,"content":"            Log.d(TAG, \"  - Floor: ${step.floor}\")"},{"type":"INSERT","lineNumber":118,"content":"            Log.d(TAG, \"  - Distance: ${step.distance}m\")"},{"type":"DELETE","lineNumber":129,"oldContent":"        return \"Haupteingang\""},{"type":"DELETE","lineNumber":130,"oldContent":"        Log.d(TAG, \"getCurrentEndPoint called (stub)\")"},{"type":"INSERT","lineNumber":129,"content":"    private fun convertToNavigationRoute(routeData: RouteData): NavigationRoute {"},{"type":"INSERT","lineNumber":130,"content":"        val steps = mutableListOf<NavigationStep>()"},{"type":"DELETE","lineNumber":133,"oldContent":"    "},{"type":"DELETE","lineNumber":134,"oldContent":"    }"},{"type":"DELETE","lineNumber":135,"oldContent":"        return \"Büro Prof. Dr. Ludwig (PT 3.0.84C)\""},{"type":"DELETE","lineNumber":136,"oldContent":"        Log.d(TAG, \"getCurrentStartPoint called (stub)\")"},{"type":"DELETE","lineNumber":137,"oldContent":"    "},{"type":"DELETE","lineNumber":138,"oldContent":"        // Stub implementation - verhindert Crashes"},{"type":"DELETE","lineNumber":139,"oldContent":"    fun startFrameProcessing() {"},{"type":"DELETE","lineNumber":140,"oldContent":"    "},{"type":"DELETE","lineNumber":141,"oldContent":"        // Stub implementation - verhindert Crashes"},{"type":"DELETE","lineNumber":142,"oldContent":"    fun enableStorageSystemImmediately(context: Context) {"},{"type":"DELETE","lineNumber":143,"oldContent":"     * Fehlende Methoden für Navigation.kt"},{"type":"DELETE","lineNumber":144,"oldContent":""},{"type":"DELETE","lineNumber":145,"oldContent":"    }"},{"type":"DELETE","lineNumber":146,"oldContent":"        "},{"type":"INSERT","lineNumber":133,"content":"        // Durchlaufe alle PathItems und RouteParts"},{"type":"INSERT","lineNumber":134,"content":"        routeData.route.path.forEach { pathItem ->"},{"type":"INSERT","lineNumber":135,"content":"            pathItem.routeParts.forEach { routePart ->"},{"type":"INSERT","lineNumber":136,"content":"                // Verwende die deutsche Anweisung als primäre Anweisung"},{"type":"INSERT","lineNumber":137,"content":"                val instruction = routePart.instructionDe ?: routePart.instruction ?: \"Folgen Sie der Route\""},{"type":"INSERT","lineNumber":138,"content":"                "},{"type":"INSERT","lineNumber":139,"content":"                // Extrahiere Stockwerk aus levelInfo falls verfügbar"},{"type":"INSERT","lineNumber":140,"content":"                val floor = pathItem.levelInfo?.storey?.toIntOrNull() ?: 0"},{"type":"INSERT","lineNumber":141,"content":"                "},{"type":"INSERT","lineNumber":142,"content":"                steps.add("},{"type":"INSERT","lineNumber":143,"content":"                    NavigationStep("},{"type":"INSERT","lineNumber":144,"content":"                        stepNumber = stepNumber++,"},{"type":"INSERT","lineNumber":145,"content":"                        instruction = instruction,"},{"type":"INSERT","lineNumber":146,"content":"                        building = pathItem.xmlName,"},{"type":"DELETE","lineNumber":149,"oldContent":"            for (routePart in pathItem.routeParts) {"},{"type":"DELETE","lineNumber":150,"oldContent":"        val landmarkIds = mutableSetOf<String>()"},{"type":"DELETE","lineNumber":151,"oldContent":"        val currentRoute = _currentRoute.value ?: return emptyList()"},{"type":"INSERT","lineNumber":149,"content":"                        distance = routePart.distance ?: 0.0,"},{"type":"INSERT","lineNumber":150,"content":"                        estimatedTime = routePart.duration ?: 60"},{"type":"INSERT","lineNumber":151,"content":"                    )"},{"type":"DELETE","lineNumber":321,"oldContent":"                _isFeatureMappingEnabled.value = true"},{"type":"DELETE","lineNumber":322,"oldContent":"                }"},{"type":"DELETE","lineNumber":323,"oldContent":"     */"},{"type":"DELETE","lineNumber":324,"oldContent":"     * Aktiviert Storage-System sofort"},{"type":"DELETE","lineNumber":325,"oldContent":"    /**"},{"type":"DELETE","lineNumber":326,"oldContent":"    "},{"type":"DELETE","lineNumber":327,"oldContent":""},{"type":"DELETE","lineNumber":328,"oldContent":"    "},{"type":"DELETE","lineNumber":329,"oldContent":"    }"},{"type":"DELETE","lineNumber":330,"oldContent":"        }"},{"type":"DELETE","lineNumber":331,"oldContent":"            false"},{"type":"INSERT","lineNumber":321,"content":"            if (storageManager != null) {"},{"type":"INSERT","lineNumber":322,"content":"                val saveResult = storageManager!!.saveImage("},{"type":"INSERT","lineNumber":323,"content":"                    bitmap = bitmap,"},{"type":"INSERT","lineNumber":324,"content":"                    landmarkId = landmarkId,"},{"type":"INSERT","lineNumber":325,"content":"                    landmarkName = landmarkName,"},{"type":"INSERT","lineNumber":326,"content":"                    description = description,"},{"type":"INSERT","lineNumber":327,"content":"                    category = \"Training\""},{"type":"INSERT","lineNumber":328,"content":"                )"},{"type":"INSERT","lineNumber":329,"content":"                "},{"type":"INSERT","lineNumber":330,"content":"                when (saveResult) {"},{"type":"INSERT","lineNumber":331,"content":"                    is SaveResult.Success -> {"},{"type":"DELETE","lineNumber":344,"oldContent":"                                position = Position("},{"type":"DELETE","lineNumber":345,"oldContent":"                                description = \"Landmark ${landmark.type ?: \"\"}\","},{"type":"DELETE","lineNumber":346,"oldContent":"                                id = landmark.id, // Exakte ID aus JSON (z.B. \"PT-1-566\")"},{"type":"DELETE","lineNumber":347,"oldContent":"                            FeatureLandmark("},{"type":"DELETE","lineNumber":348,"oldContent":"                        val landmarkName = landmark.nameDe ?: landmark.nameEn ?: landmark.id"},{"type":"DELETE","lineNumber":349,"oldContent":"                        // Verwende die Landmark-ID genau wie sie in der JSON steht (z.B. \"PT-1-566\")"},{"type":"DELETE","lineNumber":350,"oldContent":"                pathItem.routeParts.forEach { routePart ->"},{"type":"DELETE","lineNumber":351,"oldContent":"            // Sammle alle Landmark-IDs aus der aktuellen Route"},{"type":"DELETE","lineNumber":352,"oldContent":"            val routeLandmarks = mutableListOf<FeatureLandmark>()"},{"type":"INSERT","lineNumber":344,"content":"            "},{"type":"INSERT","lineNumber":345,"content":"        } catch (e: Exception) {"},{"type":"INSERT","lineNumber":346,"content":"            Log.e(TAG, \"Fehler beim Hinzufügen des Landmarks: ${e.message}\")"},{"type":"INSERT","lineNumber":347,"content":"            false"},{"type":"INSERT","lineNumber":348,"content":"        }"},{"type":"INSERT","lineNumber":349,"content":"    }"},{"type":"INSERT","lineNumber":350,"content":"    "},{"type":"INSERT","lineNumber":353,"content":""},{"type":"INSERT","lineNumber":354,"content":"    "},{"type":"MODIFY","lineNumber":448,"content":"     */","oldContent":"                Log.d(TAG, \"- ${landmark.id}: ${landmark.name}\")"},{"type":"DELETE","lineNumber":472,"oldContent":"            "},{"type":"DELETE","lineNumber":473,"oldContent":"            }"},{"type":"DELETE","lineNumber":474,"oldContent":"                    }"},{"type":"DELETE","lineNumber":475,"oldContent":"                        )"},{"type":"DELETE","lineNumber":476,"oldContent":"                            )"},{"type":"INSERT","lineNumber":472,"content":"        name: String,"},{"type":"INSERT","lineNumber":473,"content":"        description: String,"},{"type":"INSERT","lineNumber":474,"content":"        bitmap: Bitmap"},{"type":"INSERT","lineNumber":475,"content":"    ): Boolean {"},{"type":"INSERT","lineNumber":476,"content":"        return try {"},{"type":"DELETE","lineNumber":479,"oldContent":"                                ),"},{"type":"DELETE","lineNumber":480,"oldContent":"                                    0.0"},{"type":"DELETE","lineNumber":481,"oldContent":"                                    landmark.y?.toDoubleOrNull() ?: 0.0,"},{"type":"INSERT","lineNumber":479,"content":"                val result = storageManager!!.saveImage("},{"type":"INSERT","lineNumber":480,"content":"                    bitmap = bitmap,"},{"type":"INSERT","lineNumber":481,"content":"                    landmarkId = landmarkId,"},{"type":"INSERT","lineNumber":492,"content":"            false"},{"type":"INSERT","lineNumber":493,"content":"        }"},{"type":"INSERT","lineNumber":494,"content":"    }"},{"type":"INSERT","lineNumber":495,"content":"    "},{"type":"DELETE","lineNumber":493,"oldContent":"                                description = \"Verfügbares Landmark\","},{"type":"DELETE","lineNumber":494,"oldContent":"                                name = landmarkInfo.filename.substringBeforeLast('.'),"},{"type":"DELETE","lineNumber":495,"oldContent":"                                id = landmarkInfo.id, // Exakte ID aus Dateiname"},{"type":"DELETE","lineNumber":496,"oldContent":"                            FeatureLandmark("},{"type":"INSERT","lineNumber":516,"content":"                        instruction = \"Biegen Sie links ab zur Treppe\","},{"type":"DELETE","lineNumber":517,"oldContent":"                        landmarks = emptyList()"},{"type":"MODIFY","lineNumber":523,"content":"                    ),","oldContent":"                    ),"},{"type":"DELETE","lineNumber":526,"oldContent":"                        landmarks = emptyList()"},{"type":"DELETE","lineNumber":528,"oldContent":"                "},{"type":"INSERT","lineNumber":527,"content":"                        landmarks = emptyList()"},{"type":"DELETE","lineNumber":530,"oldContent":"                    id = \"demo_route\","},{"type":"DELETE","lineNumber":532,"oldContent":"                    name = \"Demo Route\","},{"type":"INSERT","lineNumber":530,"content":"                "},{"type":"INSERT","lineNumber":532,"content":"                    id = \"demo_route\","},{"type":"INSERT","lineNumber":533,"content":"                    name = \"Demo Route\","},{"type":"MODIFY","lineNumber":551,"content":"            try {","oldContent":"                pathItem.routeParts.forEach { routePart ->"},{"type":"MODIFY","lineNumber":555,"content":"            } catch (e: Exception) {","oldContent":"            } catch (e: Exception) {"},{"type":"DELETE","lineNumber":584,"oldContent":""},{"type":"DELETE","lineNumber":585,"oldContent":"    "},{"type":"DELETE","lineNumber":586,"oldContent":"    }"},{"type":"DELETE","lineNumber":587,"oldContent":"        return \"Haupteingang\""},{"type":"DELETE","lineNumber":588,"oldContent":"        Log.d(TAG, \"getCurrentEndPoint called (stub)\")"},{"type":"DELETE","lineNumber":589,"oldContent":"    fun getCurrentEndPoint(): String {"},{"type":"DELETE","lineNumber":590,"oldContent":"    "},{"type":"DELETE","lineNumber":591,"oldContent":"        return \"Büro Prof. Dr. Ludwig (PT 3.0.84C)\""},{"type":"DELETE","lineNumber":592,"oldContent":"        Log.d(TAG, \"getCurrentStartPoint called (stub)\")"},{"type":"DELETE","lineNumber":593,"oldContent":"    fun getCurrentStartPoint(): String {"},{"type":"DELETE","lineNumber":594,"oldContent":"    "},{"type":"DELETE","lineNumber":595,"oldContent":"    fun startFrameProcessing() {"},{"type":"DELETE","lineNumber":596,"oldContent":"     * Gibt die aktuellen Navigationsschritte zurück"},{"type":"INSERT","lineNumber":584,"content":"                                imageUrl = \"\""},{"type":"INSERT","lineNumber":585,"content":"                            )"},{"type":"INSERT","lineNumber":586,"content":"                        )"},{"type":"INSERT","lineNumber":587,"content":"                    }"},{"type":"INSERT","lineNumber":588,"content":"                }"},{"type":"INSERT","lineNumber":589,"content":"            }"},{"type":"INSERT","lineNumber":590,"content":"            "},{"type":"INSERT","lineNumber":591,"content":"            // Zusätzlich: Lade verfügbare Bilder aus dem Storage-System"},{"type":"INSERT","lineNumber":592,"content":"            if (storageManager != null) {"},{"type":"INSERT","lineNumber":593,"content":"                val landmarkInfos = runBlocking { storageManager!!.getAvailableProjectLandmarks() }"},{"type":"INSERT","lineNumber":594,"content":"                landmarkInfos.forEach { landmarkInfo ->"},{"type":"INSERT","lineNumber":595,"content":"                    // Füge nur hinzu, wenn nicht bereits in der Route vorhanden"},{"type":"MODIFY","lineNumber":599,"content":"                                id = landmarkInfo.id, // Exakte ID aus Dateiname","oldContent":"                                id = landmarkInfo.id, // Exakte ID aus Dateiname"},{"type":"MODIFY","lineNumber":609,"content":"            }","oldContent":"            Log.d(TAG, \"Verfügbare Landmarks: ${routeLandmarks.size}\")"},{"type":"INSERT","lineNumber":610,"content":"            "},{"type":"INSERT","lineNumber":611,"content":"            Log.d(TAG, \"Verfügbare Landmarks: ${routeLandmarks.size}\")"},{"type":"DELETE","lineNumber":615,"oldContent":"            "},{"type":"DELETE","lineNumber":616,"oldContent":"            }"},{"type":"DELETE","lineNumber":620,"oldContent":"    }"},{"type":"DELETE","lineNumber":623,"oldContent":"    /**"},{"type":"INSERT","lineNumber":621,"content":"    }"},{"type":"INSERT","lineNumber":623,"content":"    /**"},{"type":"DELETE","lineNumber":631,"oldContent":"            } else {"},{"type":"DELETE","lineNumber":633,"oldContent":"            }"},{"type":"INSERT","lineNumber":631,"content":"            } else {"},{"type":"INSERT","lineNumber":633,"content":"            }"},{"type":"MODIFY","lineNumber":638,"content":"    }","oldContent":"    }"},{"type":"MODIFY","lineNumber":661,"content":"                reloadLandmarksForRoute(currentRoute.route)","oldContent":"                reloadLandmarksForRoute(currentRoute.route)"},{"type":"DELETE","lineNumber":665,"oldContent":"    "},{"type":"DELETE","lineNumber":667,"oldContent":"                "},{"type":"DELETE","lineNumber":668,"oldContent":"                storageManager?.logPerformanceSummary()"},{"type":"DELETE","lineNumber":669,"oldContent":"                // Storage-Manager bereinigt sich selbst automatisch"},{"type":"INSERT","lineNumber":665,"content":"    "},{"type":"INSERT","lineNumber":666,"content":"    /**"},{"type":"INSERT","lineNumber":667,"content":"     * Gibt die aktuell geladenen Landmark-IDs zurück (für Debugging)"},{"type":"INSERT","lineNumber":668,"content":"     */"},{"type":"DELETE","lineNumber":674,"oldContent":"        super.onCleared()"},{"type":"DELETE","lineNumber":675,"oldContent":"    override fun onCleared() {"},{"type":"INSERT","lineNumber":673,"content":"    "},{"type":"INSERT","lineNumber":675,"content":"     * Gibt die Landmark-IDs zurück, die in der aktuellen Route benötigt werden"},{"type":"DELETE","lineNumber":678,"oldContent":"    }"},{"type":"DELETE","lineNumber":679,"oldContent":"    }"},{"type":"DELETE","lineNumber":680,"oldContent":"        Log.d(TAG, \"enableStorageSystemImmediately called (stub)\")"},{"type":"DELETE","lineNumber":681,"oldContent":"    fun enableStorageSystemImmediately(context: Context) {"},{"type":"DELETE","lineNumber":682,"oldContent":"     * Fehlende Methoden für Navigation.kt"},{"type":"INSERT","lineNumber":677,"content":"    fun getRequiredLandmarkIds(): List<String> {"},{"type":"INSERT","lineNumber":678,"content":"        val currentRoute = _currentRoute.value ?: return emptyList()"},{"type":"INSERT","lineNumber":679,"content":"        "},{"type":"INSERT","lineNumber":680,"content":"        val landmarkIds = mutableSetOf<String>()"},{"type":"INSERT","lineNumber":681,"content":"        for (pathItem in currentRoute.route.path) {"},{"type":"INSERT","lineNumber":682,"content":"            for (routePart in pathItem.routeParts) {"},{"type":"DELETE","lineNumber":684,"oldContent":"    }"},{"type":"DELETE","lineNumber":686,"oldContent":""},{"type":"DELETE","lineNumber":688,"oldContent":"    /**"},{"type":"DELETE","lineNumber":691,"oldContent":"     * Fehlende Methoden für Navigation.kt"},{"type":"DELETE","lineNumber":693,"oldContent":"     */"},{"type":"INSERT","lineNumber":691,"content":""},{"type":"INSERT","lineNumber":692,"content":"    /**"},{"type":"INSERT","lineNumber":693,"content":"     * Fehlende Methoden für Navigation.kt"},{"type":"INSERT","lineNumber":694,"content":"     */"},{"type":"INSERT","lineNumber":695,"content":"    fun enableStorageSystemImmediately(context: Context) {"},{"type":"INSERT","lineNumber":696,"content":"        Log.d(TAG, \"enableStorageSystemImmediately called (stub)\")"},{"type":"INSERT","lineNumber":697,"content":"        // Stub implementation - verhindert Crashes"},{"type":"INSERT","lineNumber":698,"content":"    }"},{"type":"DELETE","lineNumber":699,"oldContent":"    fun enableStorageSystemImmediately(context: Context) {"},{"type":"DELETE","lineNumber":700,"oldContent":"        Log.d(TAG, \"enableStorageSystemImmediately called (stub)\")"},{"type":"DELETE","lineNumber":702,"oldContent":"        // Stub implementation - verhindert Crashes"},{"type":"MODIFY","lineNumber":704,"content":"    ","oldContent":"    }"},{"type":"MODIFY","lineNumber":709,"content":"    ","oldContent":"    "},{"type":"INSERT","lineNumber":711,"content":"        Log.d(TAG, \"getCurrentEndPoint called (stub)\")"},{"type":"INSERT","lineNumber":712,"content":"        return \"Haupteingang\""},{"type":"DELETE","lineNumber":713,"oldContent":"    "},{"type":"DELETE","lineNumber":714,"oldContent":"    }"},{"type":"MODIFY","lineNumber":715,"content":"    fun setCurrentNavigationStep(step: Int) {","oldContent":"        Log.d(TAG, \"getCurrentEndPoint called (stub)\")"},{"type":"INSERT","lineNumber":716,"content":"        Log.d(TAG, \"setCurrentNavigationStep called (stub): $step\")"},{"type":"DELETE","lineNumber":717,"oldContent":"        return \"Haupteingang\""},{"type":"INSERT","lineNumber":718,"content":"    }"},{"type":"INSERT","lineNumber":719,"content":"    "},{"type":"INSERT","lineNumber":720,"content":"    fun getCurrentStep(): NavigationStep? {"},{"type":"INSERT","lineNumber":721,"content":"        Log.d(TAG, \"getCurrentStep called (stub)\")"},{"type":"DELETE","lineNumber":720,"oldContent":"    fun setCurrentNavigationStep(step: Int) {"},{"type":"DELETE","lineNumber":722,"oldContent":"        Log.d(TAG, \"setCurrentNavigationStep called (stub): $step\")"},{"type":"DELETE","lineNumber":724,"oldContent":"        _currentNavigationStep.value = step"},{"type":"DELETE","lineNumber":726,"oldContent":"    fun getCurrentStep(): NavigationStep? {"},{"type":"DELETE","lineNumber":728,"oldContent":"        Log.d(TAG, \"getCurrentStep called (stub)\")"},{"type":"DELETE","lineNumber":732,"oldContent":"                // Bereinige Feature-Storage Cache"},{"type":"INSERT","lineNumber":731,"content":"     */"},{"type":"INSERT","lineNumber":732,"content":"    override fun onCleared() {"},{"type":"INSERT","lineNumber":733,"content":"        super.onCleared()"},{"type":"INSERT","lineNumber":734,"content":"        viewModelScope.launch {"},{"type":"INSERT","lineNumber":735,"content":"            try {"},{"type":"INSERT","lineNumber":736,"content":"                // Storage-Manager bereinigt sich selbst automatisch"},{"type":"INSERT","lineNumber":737,"content":"                storageManager?.logPerformanceSummary()"},{"type":"INSERT","lineNumber":740,"content":"                landmarkFeatureStorage?.cleanup()"},{"type":"INSERT","lineNumber":741,"content":"                "},{"type":"INSERT","lineNumber":742,"content":"                Log.i(TAG, \"RouteViewModel bereinigt\")"},{"type":"INSERT","lineNumber":743,"content":"            } catch (e: Exception) {"},{"type":"INSERT","lineNumber":744,"content":"                Log.e(TAG, \"Fehler beim Bereinigen: ${e.message}\")"},{"type":"INSERT","lineNumber":745,"content":"            }"},{"type":"INSERT","lineNumber":746,"content":"        }"},{"type":"INSERT","lineNumber":747,"content":"    }"},{"type":"INSERT","lineNumber":748,"content":"}"}]},{"timestamp":1754321471836,"changes":[{"type":"DELETE","lineNumber":18,"oldContent":"    private val TAG = \"RouteViewModel\""},{"type":"DELETE","lineNumber":19,"oldContent":"    "},{"type":"DELETE","lineNumber":20,"oldContent":"    private var featureMapManager: FeatureMapManager? = null"},{"type":"INSERT","lineNumber":18,"content":"import com.example.arwalking.data.RouteData"},{"type":"INSERT","lineNumber":19,"content":""},{"type":"INSERT","lineNumber":20,"content":"/**"},{"type":"INSERT","lineNumber":33,"content":"    "},{"type":"DELETE","lineNumber":38,"oldContent":"    "},{"type":"DELETE","lineNumber":46,"oldContent":"            convertToNavigationRoute(routeData)"},{"type":"DELETE","lineNumber":47,"oldContent":""},{"type":"DELETE","lineNumber":48,"oldContent":"            Log.e(TAG, \"Fehler beim Laden der Route: ${e.message}\")"},{"type":"DELETE","lineNumber":49,"oldContent":"            null"},{"type":"DELETE","lineNumber":50,"oldContent":"    }"},{"type":"DELETE","lineNumber":51,"oldContent":""},{"type":"DELETE","lineNumber":52,"oldContent":"    private fun convertToNavigationRoute(routeData: RouteData): NavigationRoute {"},{"type":"INSERT","lineNumber":46,"content":"    val currentRoute: StateFlow<RouteData?> = _currentRoute.asStateFlow()"},{"type":"INSERT","lineNumber":47,"content":"    "},{"type":"INSERT","lineNumber":48,"content":"    // State für Feature-Navigation"},{"type":"INSERT","lineNumber":49,"content":"    private val _featureNavigationRoute = MutableStateFlow<FeatureNavigationRoute?>(null)"},{"type":"INSERT","lineNumber":50,"content":"    val featureNavigationRoute: StateFlow<FeatureNavigationRoute?> = _featureNavigationRoute.asStateFlow()"},{"type":"INSERT","lineNumber":51,"content":"    "},{"type":"INSERT","lineNumber":52,"content":"    private val _currentMatches = MutableStateFlow<List<FeatureMatchResult>>(emptyList())"},{"type":"MODIFY","lineNumber":106,"content":"     */","oldContent":"                                name = landmarkName,"},{"type":"DELETE","lineNumber":125,"oldContent":"    }"},{"type":"DELETE","lineNumber":126,"oldContent":"        return _currentRoute.value?.route?.path?.lastOrNull()?.xmlName ?: \"Unbekanntes Ziel\""},{"type":"INSERT","lineNumber":125,"content":"    "},{"type":"INSERT","lineNumber":126,"content":"    /**"},{"type":"MODIFY","lineNumber":132,"content":"        ","oldContent":"    }"},{"type":"DELETE","lineNumber":178,"oldContent":"                        Log.d(TAG, \"Bestes Match: ${bestMatch.landmark.name} (${(bestMatch.confidence * 100).toInt()}%, ${bestMatch.matchCount} Features)\")"},{"type":"DELETE","lineNumber":179,"oldContent":"                    if (bestMatch != null) {"},{"type":"DELETE","lineNumber":180,"oldContent":"                    "},{"type":"DELETE","lineNumber":181,"oldContent":"                if (matches.isNotEmpty()) {"},{"type":"DELETE","lineNumber":182,"oldContent":"                _currentMatches.value = featureMatchResults"},{"type":"INSERT","lineNumber":178,"content":"                "},{"type":"INSERT","lineNumber":179,"content":"                // Feature-Matching System initialisieren"},{"type":"INSERT","lineNumber":180,"content":"                featureMatchingEngine = FeatureMatchingEngine()"},{"type":"INSERT","lineNumber":181,"content":"                landmarkFeatureStorage = LandmarkFeatureStorage(context)"},{"type":"INSERT","lineNumber":182,"content":"                arTrackingSystem = ARTrackingSystem()"},{"type":"INSERT","lineNumber":183,"content":"                "},{"type":"INSERT","lineNumber":184,"content":"                // Importiere Landmarks aus Assets falls noch nicht vorhanden"},{"type":"INSERT","lineNumber":185,"content":"                val importedCount = landmarkFeatureStorage!!.importLandmarksFromAssets()"},{"type":"INSERT","lineNumber":186,"content":"                if (importedCount > 0) {"},{"type":"INSERT","lineNumber":187,"content":"                    Log.i(TAG, \"$importedCount Landmarks aus Assets importiert\")"},{"type":"DELETE","lineNumber":184,"oldContent":"                        screenPosition = tracked.position"},{"type":"DELETE","lineNumber":185,"oldContent":"                        distance = null,"},{"type":"DELETE","lineNumber":186,"oldContent":"                        confidence = tracked.confidence,"},{"type":"DELETE","lineNumber":187,"oldContent":"                        landmark = tracked.landmark,"},{"type":"DELETE","lineNumber":188,"oldContent":"                    FeatureMatchResult("},{"type":"DELETE","lineNumber":189,"oldContent":"                // Konvertiere TrackedLandmarks zurück zu FeatureMatchResults für UI-Kompatibilität"},{"type":"MODIFY","lineNumber":190,"content":"                // Lade route-spezifische Landmarks falls Route verfügbar ist","oldContent":"                val trackedLandmarks = arTrackingSystem?.updateTracking(matches) ?: emptyList()"},{"type":"INSERT","lineNumber":191,"content":"                processedLandmarks.clear()"},{"type":"DELETE","lineNumber":193,"oldContent":"            try {"},{"type":"DELETE","lineNumber":194,"oldContent":"     */"},{"type":"DELETE","lineNumber":195,"oldContent":"    /**"},{"type":"DELETE","lineNumber":196,"oldContent":"        }"},{"type":"DELETE","lineNumber":197,"oldContent":"            false"},{"type":"DELETE","lineNumber":198,"oldContent":"        } catch (e: Exception) {"},{"type":"DELETE","lineNumber":199,"oldContent":"                        // Erstelle FeatureLandmark"},{"type":"DELETE","lineNumber":200,"oldContent":"                    "},{"type":"DELETE","lineNumber":201,"oldContent":"                    val features = featureMatchingEngine!!.extractFeatures(bitmap)"},{"type":"DELETE","lineNumber":202,"oldContent":"                if (result is SaveResult.Success) {"},{"type":"INSERT","lineNumber":193,"content":"                val currentRoute = _currentRoute.value"},{"type":"INSERT","lineNumber":194,"content":"                if (currentRoute != null) {"},{"type":"INSERT","lineNumber":195,"content":"                    // Lade nur die Landmarks, die in der aktuellen Route verwendet werden"},{"type":"INSERT","lineNumber":196,"content":"                    processedLandmarks.addAll(landmarkFeatureStorage!!.loadRouteSpecificLandmarks(currentRoute.route))"},{"type":"INSERT","lineNumber":197,"content":"                    Log.i(TAG, \"${processedLandmarks.size} route-spezifische Landmarks für Feature-Matching geladen\")"},{"type":"INSERT","lineNumber":198,"content":"                } else {"},{"type":"INSERT","lineNumber":199,"content":"                    // Fallback: Lade alle verfügbaren Landmarks"},{"type":"INSERT","lineNumber":200,"content":"                    processedLandmarks.addAll(landmarkFeatureStorage!!.loadAllLandmarks())"},{"type":"INSERT","lineNumber":201,"content":"                    Log.i(TAG, \"${processedLandmarks.size} Landmarks für Feature-Matching geladen (alle verfügbaren)\")"},{"type":"INSERT","lineNumber":202,"content":"                }"},{"type":"DELETE","lineNumber":204,"oldContent":"     * Erstellt einen neuen Landmark mit Feature-Extraktion"},{"type":"DELETE","lineNumber":205,"oldContent":"    /**"},{"type":"DELETE","lineNumber":206,"oldContent":"    }"},{"type":"DELETE","lineNumber":207,"oldContent":"     * Gibt Performance-Informationen zurück"},{"type":"DELETE","lineNumber":208,"oldContent":"    }"},{"type":"DELETE","lineNumber":209,"oldContent":"    "},{"type":"DELETE","lineNumber":210,"oldContent":"    suspend fun loadFullImage(landmarkId: String): android.graphics.Bitmap? {"},{"type":"INSERT","lineNumber":204,"content":"                // Prüfe verfügbare Bilder im Projektverzeichnis"},{"type":"INSERT","lineNumber":205,"content":"                val availableLandmarks = storageManager!!.getAvailableProjectLandmarks()"},{"type":"INSERT","lineNumber":206,"content":"                Log.i(TAG, \"Verfügbare Landmark-Bilder: ${availableLandmarks.size}\")"},{"type":"INSERT","lineNumber":208,"content":"                availableLandmarks.take(5).forEach { landmark ->"},{"type":"INSERT","lineNumber":209,"content":"                    Log.d(TAG, \"- ${landmark.id} (${landmark.filename})\")"},{"type":"INSERT","lineNumber":210,"content":"                }"},{"type":"INSERT","lineNumber":211,"content":"                "},{"type":"DELETE","lineNumber":238,"oldContent":"}"},{"type":"MODIFY","lineNumber":238,"content":"                ","oldContent":""},{"type":"INSERT","lineNumber":239,"content":"                if (storageManager == null) {"},{"type":"MODIFY","lineNumber":317,"content":"    ): Boolean {","oldContent":"            _currentNavigationStep.value = currentStep - 1"},{"type":"DELETE","lineNumber":334,"oldContent":"    }"},{"type":"DELETE","lineNumber":335,"oldContent":"    /**"},{"type":"DELETE","lineNumber":336,"oldContent":"                                    landmark.x?.toDoubleOrNull() ?: 0.0,"},{"type":"DELETE","lineNumber":337,"oldContent":"                                position = Position("},{"type":"DELETE","lineNumber":338,"oldContent":"                                description = \"Landmark ${landmark.type ?: \"\"}\","},{"type":"DELETE","lineNumber":339,"oldContent":"                                name = landmarkName,"},{"type":"DELETE","lineNumber":340,"oldContent":"                            FeatureLandmark("},{"type":"INSERT","lineNumber":334,"content":"                    }"},{"type":"INSERT","lineNumber":335,"content":"                    is SaveResult.Error -> {"},{"type":"INSERT","lineNumber":336,"content":"                        Log.e(TAG, \"Fehler beim lokalen Speichern: ${saveResult.message}\")"},{"type":"INSERT","lineNumber":337,"content":"                        false"},{"type":"INSERT","lineNumber":338,"content":"                    }"},{"type":"INSERT","lineNumber":339,"content":"                }"},{"type":"INSERT","lineNumber":340,"content":"            } else {"},{"type":"INSERT","lineNumber":352,"content":"    "},{"type":"DELETE","lineNumber":354,"oldContent":"    "},{"type":"DELETE","lineNumber":380,"oldContent":"            }"},{"type":"DELETE","lineNumber":381,"oldContent":"                }"},{"type":"DELETE","lineNumber":382,"oldContent":"                    }"},{"type":"DELETE","lineNumber":383,"oldContent":"                        )"},{"type":"DELETE","lineNumber":384,"oldContent":"                            )"},{"type":"INSERT","lineNumber":380,"content":"     */"},{"type":"INSERT","lineNumber":381,"content":"    suspend fun loadFullImage(landmarkId: String): android.graphics.Bitmap? {"},{"type":"INSERT","lineNumber":382,"content":"        return storageManager?.loadFullImage(landmarkId)"},{"type":"INSERT","lineNumber":383,"content":"    }"},{"type":"INSERT","lineNumber":384,"content":"    "},{"type":"DELETE","lineNumber":389,"oldContent":"                                    landmark.y?.toDoubleOrNull() ?: 0.0,"},{"type":"DELETE","lineNumber":390,"oldContent":"                // Führe echtes Feature-Matching durch"},{"type":"DELETE","lineNumber":391,"oldContent":"    fun processFrameForFeatureMatching(frame: org.opencv.core.Mat) {"},{"type":"DELETE","lineNumber":392,"oldContent":"     */"},{"type":"INSERT","lineNumber":389,"content":"        return storageManager?.deleteLandmark(landmarkId) ?: false"},{"type":"INSERT","lineNumber":390,"content":"    }"},{"type":"INSERT","lineNumber":391,"content":"    "},{"type":"INSERT","lineNumber":392,"content":"    /**"},{"type":"DELETE","lineNumber":400,"oldContent":"    "},{"type":"DELETE","lineNumber":401,"oldContent":"    }"},{"type":"INSERT","lineNumber":400,"content":"            \"Storage-System nicht verfügbar\""},{"type":"DELETE","lineNumber":403,"oldContent":"     * Setzt den aktuellen Navigationsschritt"},{"type":"DELETE","lineNumber":404,"oldContent":"}"},{"type":"INSERT","lineNumber":402,"content":"    }"},{"type":"INSERT","lineNumber":403,"content":"    "},{"type":"INSERT","lineNumber":404,"content":"    /**"},{"type":"INSERT","lineNumber":432,"content":"        }"},{"type":"DELETE","lineNumber":433,"oldContent":"            }"},{"type":"MODIFY","lineNumber":434,"content":"    ","oldContent":"                Log.e(TAG, \"Fehler beim Bereinigen: ${e.message}\")"},{"type":"DELETE","lineNumber":444,"oldContent":"                        val landmarkName = landmark.nameDe ?: landmark.nameEn ?: landmark.id"},{"type":"DELETE","lineNumber":445,"oldContent":"                        // Verwende die Landmark-ID genau wie sie in der JSON steht (z.B. \"PT-1-566\")"},{"type":"DELETE","lineNumber":446,"oldContent":"                    routePart.landmarks.forEach { landmark ->"},{"type":"DELETE","lineNumber":447,"oldContent":"                pathItem.routeParts.forEach { routePart ->"},{"type":"DELETE","lineNumber":448,"oldContent":"     */"},{"type":"DELETE","lineNumber":449,"oldContent":"            // Sammle alle Landmark-IDs aus der aktuellen Route"},{"type":"DELETE","lineNumber":450,"oldContent":"        viewModelScope.launch {"},{"type":"DELETE","lineNumber":451,"oldContent":"            }"},{"type":"DELETE","lineNumber":452,"oldContent":"                Log.d(TAG, \"Route loading stub for $building, floor $floor\")"},{"type":"DELETE","lineNumber":453,"oldContent":"                // Stub - echte Route laden würde hier implementiert werden"},{"type":"DELETE","lineNumber":454,"oldContent":"        } catch (e: Exception) {"},{"type":"DELETE","lineNumber":455,"oldContent":"                result is SaveResult.Success"},{"type":"DELETE","lineNumber":456,"oldContent":"}"},{"type":"INSERT","lineNumber":444,"content":"    }"},{"type":"INSERT","lineNumber":445,"content":"    "},{"type":"INSERT","lineNumber":447,"content":"     * Geht zum vorherigen Navigationsschritt"},{"type":"INSERT","lineNumber":448,"content":"     */"},{"type":"INSERT","lineNumber":449,"content":"    fun previousNavigationStep() {"},{"type":"INSERT","lineNumber":450,"content":"        val currentStep = _currentNavigationStep.value"},{"type":"INSERT","lineNumber":451,"content":"        if (currentStep > 1) {"},{"type":"INSERT","lineNumber":452,"content":"            _currentNavigationStep.value = currentStep - 1"},{"type":"INSERT","lineNumber":453,"content":"            Log.d(TAG, \"Vorheriger Navigationsschritt: ${currentStep - 1}\")"},{"type":"DELETE","lineNumber":459,"oldContent":"                // Bereinige Feature-Storage Cache"},{"type":"DELETE","lineNumber":460,"oldContent":"                "},{"type":"DELETE","lineNumber":461,"oldContent":"                storageManager?.logPerformanceSummary()"},{"type":"INSERT","lineNumber":455,"content":"    }"},{"type":"INSERT","lineNumber":456,"content":"    "},{"type":"INSERT","lineNumber":457,"content":"    /**"},{"type":"INSERT","lineNumber":458,"content":"     * Konvertiert Bitmap zu Base64 String"},{"type":"INSERT","lineNumber":459,"content":"     */"},{"type":"INSERT","lineNumber":460,"content":"    private fun bitmapToBase64(bitmap: Bitmap): String {"},{"type":"INSERT","lineNumber":461,"content":"        val byteArrayOutputStream = ByteArrayOutputStream()"},{"type":"DELETE","lineNumber":463,"oldContent":"            try {"},{"type":"DELETE","lineNumber":464,"oldContent":"        viewModelScope.launch {"},{"type":"DELETE","lineNumber":465,"oldContent":"        super.onCleared()"},{"type":"DELETE","lineNumber":466,"oldContent":"    override fun onCleared() {"},{"type":"INSERT","lineNumber":463,"content":"        val byteArray = byteArrayOutputStream.toByteArray()"},{"type":"INSERT","lineNumber":464,"content":"        return android.util.Base64.encodeToString(byteArray, android.util.Base64.DEFAULT)"},{"type":"INSERT","lineNumber":465,"content":"    }"},{"type":"INSERT","lineNumber":466,"content":"    "},{"type":"INSERT","lineNumber":467,"content":"    /**"},{"type":"INSERT","lineNumber":468,"content":"     * Erstellt einen neuen Landmark (vereinfacht)"},{"type":"DELETE","lineNumber":468,"oldContent":"     * Cleanup beim Destroy"},{"type":"DELETE","lineNumber":469,"oldContent":"     * Gibt die aktuellen Navigationsschritte zurück"},{"type":"DELETE","lineNumber":470,"oldContent":"                                    landmark.x?.toDoubleOrNull() ?: 0.0,"},{"type":"DELETE","lineNumber":471,"oldContent":"                                position = Position("},{"type":"INSERT","lineNumber":470,"content":"    suspend fun createLandmark("},{"type":"INSERT","lineNumber":471,"content":"        landmarkId: String,"},{"type":"DELETE","lineNumber":477,"oldContent":"                        val landmarkName = landmark.nameDe ?: landmark.nameEn ?: landmark.id"},{"type":"DELETE","lineNumber":478,"oldContent":"                        // Verwende die Landmark-ID genau wie sie in der JSON steht (z.B. \"PT-1-566\")"},{"type":"INSERT","lineNumber":477,"content":"            Log.d(TAG, \"createLandmark called (stub): $landmarkId\")"},{"type":"INSERT","lineNumber":478,"content":"            if (storageManager != null) {"},{"type":"DELETE","lineNumber":482,"oldContent":"            // Sammle alle Landmark-IDs aus der aktuellen Route"},{"type":"DELETE","lineNumber":483,"oldContent":"                _currentMatches.value = emptyList()"},{"type":"DELETE","lineNumber":484,"oldContent":"                // Stub implementation - verhindert Crashes"},{"type":"INSERT","lineNumber":482,"content":"                    landmarkName = name,"},{"type":"INSERT","lineNumber":483,"content":"                    description = description,"},{"type":"INSERT","lineNumber":484,"content":"                    category = \"Manual\""},{"type":"MODIFY","lineNumber":488,"content":"                false","oldContent":"}"},{"type":"DELETE","lineNumber":490,"oldContent":"    }"},{"type":"DELETE","lineNumber":491,"oldContent":"            }"},{"type":"INSERT","lineNumber":490,"content":"        } catch (e: Exception) {"},{"type":"INSERT","lineNumber":491,"content":"            Log.e(TAG, \"Fehler beim Erstellen des Landmarks: ${e.message}\")"},{"type":"DELETE","lineNumber":493,"oldContent":"                Log.e(TAG, \"Fehler beim Bereinigen: ${e.message}\")"},{"type":"INSERT","lineNumber":496,"content":"    /**"},{"type":"DELETE","lineNumber":504,"oldContent":"     */"},{"type":"DELETE","lineNumber":505,"oldContent":"    /**"},{"type":"INSERT","lineNumber":504,"content":"                // Stub - echte Route laden würde hier implementiert werden"},{"type":"INSERT","lineNumber":505,"content":"                Log.d(TAG, \"Route loading stub for $building, floor $floor\")"},{"type":"INSERT","lineNumber":522,"content":"                        landmarks = emptyList()"},{"type":"DELETE","lineNumber":523,"oldContent":"                    ),"},{"type":"MODIFY","lineNumber":527,"content":"                        landmarks = emptyList()","oldContent":"                        landmarks = emptyList()"},{"type":"MODIFY","lineNumber":530,"content":"                ","oldContent":"                "},{"type":"INSERT","lineNumber":531,"content":"                val featureRoute = FeatureNavigationRoute("},{"type":"DELETE","lineNumber":533,"oldContent":"                val featureRoute = FeatureNavigationRoute("},{"type":"MODIFY","lineNumber":542,"content":"            }","oldContent":"                                position = Position("},{"type":"DELETE","lineNumber":546,"oldContent":"                        routeLandmarks.add("},{"type":"DELETE","lineNumber":547,"oldContent":"                        val landmarkName = landmark.nameDe ?: landmark.nameEn ?: landmark.id"},{"type":"INSERT","lineNumber":546,"content":"    /**"},{"type":"INSERT","lineNumber":547,"content":"     * Verarbeitet einen Kamera-Frame (vereinfacht)"},{"type":"MODIFY","lineNumber":550,"content":"        viewModelScope.launch {","oldContent":"                    routePart.landmarks.forEach { landmark ->"},{"type":"DELETE","lineNumber":552,"oldContent":"            // Sammle alle Landmark-IDs aus der aktuellen Route"},{"type":"DELETE","lineNumber":553,"oldContent":"}"},{"type":"INSERT","lineNumber":552,"content":"                Log.d(TAG, \"processFrameForFeatureMatching called (stub)\")"},{"type":"INSERT","lineNumber":553,"content":"                // Stub implementation - verhindert Crashes"},{"type":"INSERT","lineNumber":554,"content":"                _currentMatches.value = emptyList()"},{"type":"DELETE","lineNumber":555,"oldContent":"            } catch (e: Exception) {"},{"type":"MODIFY","lineNumber":557,"content":"                _currentMatches.value = emptyList()","oldContent":"    }"},{"type":"DELETE","lineNumber":573,"oldContent":"    "},{"type":"DELETE","lineNumber":574,"oldContent":"     * Gibt die aktuellen Navigationsschritte zurück"},{"type":"DELETE","lineNumber":575,"oldContent":"}"},{"type":"INSERT","lineNumber":573,"content":"            // Sammle alle Landmark-IDs aus der aktuellen Route"},{"type":"INSERT","lineNumber":574,"content":"            _currentRoute.value?.route?.path?.forEach { pathItem ->"},{"type":"INSERT","lineNumber":575,"content":"                pathItem.routeParts.forEach { routePart ->"},{"type":"MODIFY","lineNumber":578,"content":"                        routeLandmarks.add(","oldContent":"                Log.e(TAG, \"Fehler beim Bereinigen: ${e.message}\")"},{"type":"DELETE","lineNumber":597,"oldContent":"                                id = landmarkInfo.id, // Exakte ID aus Dateiname"},{"type":"DELETE","lineNumber":598,"oldContent":"                                id = landmarkInfo.id, // Exakte ID aus Dateiname"},{"type":"INSERT","lineNumber":597,"content":"                        routeLandmarks.add("},{"type":"INSERT","lineNumber":599,"content":"                                id = landmarkInfo.id, // Exakte ID aus Dateiname"},{"type":"DELETE","lineNumber":603,"oldContent":"                                imageUrl = \"\","},{"type":"DELETE","lineNumber":604,"oldContent":"                                confidence = 1.0f"},{"type":"INSERT","lineNumber":603,"content":"                                imageUrl = \"\""},{"type":"INSERT","lineNumber":607,"content":"                }"},{"type":"DELETE","lineNumber":610,"oldContent":"                }"},{"type":"DELETE","lineNumber":619,"oldContent":"    }"},{"type":"DELETE","lineNumber":622,"oldContent":"    /**"},{"type":"INSERT","lineNumber":620,"content":"    }"},{"type":"INSERT","lineNumber":622,"content":"    /**"},{"type":"DELETE","lineNumber":630,"oldContent":"            } else {"},{"type":"DELETE","lineNumber":632,"oldContent":"            }"},{"type":"INSERT","lineNumber":630,"content":"            } else {"},{"type":"INSERT","lineNumber":632,"content":"            }"},{"type":"MODIFY","lineNumber":637,"content":"    }","oldContent":"    }"},{"type":"DELETE","lineNumber":653,"oldContent":"}"},{"type":"DELETE","lineNumber":654,"oldContent":"    }"},{"type":"DELETE","lineNumber":655,"oldContent":"                "},{"type":"DELETE","lineNumber":656,"oldContent":"                storageManager?.logPerformanceSummary()"},{"type":"DELETE","lineNumber":657,"oldContent":"                // Storage-Manager bereinigt sich selbst automatisch"},{"type":"DELETE","lineNumber":658,"oldContent":"            try {"},{"type":"INSERT","lineNumber":652,"content":"    "},{"type":"INSERT","lineNumber":653,"content":"    /**"},{"type":"INSERT","lineNumber":654,"content":"     * Aktualisiert Landmarks wenn sich die aktuelle Route ändert"},{"type":"INSERT","lineNumber":655,"content":"     */"},{"type":"INSERT","lineNumber":656,"content":"    fun updateLandmarksForCurrentRoute() {"},{"type":"INSERT","lineNumber":658,"content":"            val currentRoute = _currentRoute.value"},{"type":"INSERT","lineNumber":659,"content":"            if (currentRoute != null) {"},{"type":"DELETE","lineNumber":661,"oldContent":"        super.onCleared()"},{"type":"INSERT","lineNumber":663,"content":"    }"},{"type":"DELETE","lineNumber":666,"oldContent":"     */"},{"type":"MODIFY","lineNumber":672,"content":"    ","oldContent":"    "},{"type":"INSERT","lineNumber":673,"content":"    /**"},{"type":"DELETE","lineNumber":675,"oldContent":"            }"},{"type":"MODIFY","lineNumber":676,"content":"    fun getRequiredLandmarkIds(): List<String> {","oldContent":"    fun getRequiredLandmarkIds(): List<String> {"},{"type":"INSERT","lineNumber":687,"content":"        "},{"type":"INSERT","lineNumber":688,"content":"        return landmarkIds.toList()"},{"type":"INSERT","lineNumber":689,"content":"    }"},{"type":"DELETE","lineNumber":690,"oldContent":"        "},{"type":"DELETE","lineNumber":693,"oldContent":"        return landmarkIds.toList()"},{"type":"DELETE","lineNumber":695,"oldContent":"    }"},{"type":"DELETE","lineNumber":697,"oldContent":"    "},{"type":"DELETE","lineNumber":699,"oldContent":"    fun startFrameProcessing() {"},{"type":"INSERT","lineNumber":698,"content":"    "},{"type":"INSERT","lineNumber":699,"content":"    fun startFrameProcessing() {"},{"type":"INSERT","lineNumber":707,"content":"    }"},{"type":"DELETE","lineNumber":709,"oldContent":"    "},{"type":"MODIFY","lineNumber":712,"content":"    }","oldContent":"    }"},{"type":"DELETE","lineNumber":717,"oldContent":"                Log.e(TAG, \"Fehler beim Bereinigen: ${e.message}\")"},{"type":"INSERT","lineNumber":716,"content":"        _currentNavigationStep.value = step"},{"type":"DELETE","lineNumber":719,"oldContent":"        val steps = getCurrentNavigationSteps()"},{"type":"MODIFY","lineNumber":721,"content":"        val steps = getCurrentNavigationSteps()","oldContent":"        val currentStepNumber = _currentNavigationStep.value"},{"type":"INSERT","lineNumber":722,"content":"        val currentStepNumber = _currentNavigationStep.value"},{"type":"MODIFY","lineNumber":730,"content":"     */","oldContent":"     */"},{"type":"DELETE","lineNumber":734,"oldContent":"}"},{"type":"DELETE","lineNumber":736,"oldContent":"    }"},{"type":"DELETE","lineNumber":738,"oldContent":"        }"},{"type":"DELETE","lineNumber":740,"oldContent":"            }"},{"type":"DELETE","lineNumber":742,"oldContent":"                Log.e(TAG, \"Fehler beim Bereinigen: ${e.message}\")"},{"type":"DELETE","lineNumber":743,"oldContent":"            } catch (e: Exception) {"},{"type":"DELETE","lineNumber":744,"oldContent":"                Log.i(TAG, \"RouteViewModel bereinigt\")"},{"type":"INSERT","lineNumber":737,"content":"                "},{"type":"INSERT","lineNumber":738,"content":"                // Bereinige Feature-Storage Cache"},{"type":"INSERT","lineNumber":741,"content":"                Log.i(TAG, \"RouteViewModel bereinigt\")"},{"type":"INSERT","lineNumber":742,"content":"            } catch (e: Exception) {"},{"type":"INSERT","lineNumber":743,"content":"                Log.e(TAG, \"Fehler beim Bereinigen: ${e.message}\")"},{"type":"INSERT","lineNumber":744,"content":"            }"},{"type":"INSERT","lineNumber":745,"content":"        }"},{"type":"INSERT","lineNumber":746,"content":"    }"},{"type":"INSERT","lineNumber":747,"content":"}"}]},{"timestamp":1754333713120,"changes":[{"type":"MODIFY","lineNumber":17,"content":"import com.example.arwalking.data.RouteRepository","oldContent":"    private val TAG = \"RouteViewModel\""},{"type":"DELETE","lineNumber":40,"oldContent":"            val routeData = gson.fromJson(jsonString, RouteData::class.java)"},{"type":"DELETE","lineNumber":41,"oldContent":"            // In NavigationRoute umwandeln"},{"type":"INSERT","lineNumber":40,"content":"    private var processedLandmarks = mutableListOf<ProcessedLandmark>()"},{"type":"INSERT","lineNumber":41,"content":"    "},{"type":"DELETE","lineNumber":121,"oldContent":"     */"},{"type":"DELETE","lineNumber":122,"oldContent":"     * Gibt die aktuellen Navigationsschritte zurück"},{"type":"INSERT","lineNumber":121,"content":"        }"},{"type":"INSERT","lineNumber":122,"content":"        "},{"type":"INSERT","lineNumber":123,"content":"        Log.i(TAG, \"=== Ende Route Details ===\")"},{"type":"DELETE","lineNumber":124,"oldContent":"            emptyList()"},{"type":"MODIFY","lineNumber":128,"content":"     */","oldContent":"            routeLandmarks"},{"type":"MODIFY","lineNumber":148,"content":"                        landmarks = routePart.landmarks ?: emptyList(),","oldContent":"                    if (routeLandmarks.none { it.id == landmarkInfo.id }) {"},{"type":"DELETE","lineNumber":156,"oldContent":"            }"},{"type":"DELETE","lineNumber":157,"oldContent":"                }"},{"type":"DELETE","lineNumber":158,"oldContent":"                        )"},{"type":"DELETE","lineNumber":159,"oldContent":"                            )"},{"type":"DELETE","lineNumber":160,"oldContent":"                                imageUrl = \"\","},{"type":"DELETE","lineNumber":161,"oldContent":"                                    0.0"},{"type":"DELETE","lineNumber":162,"oldContent":"                "},{"type":"DELETE","lineNumber":163,"oldContent":"                // Führe echtes Feature-Matching durch"},{"type":"DELETE","lineNumber":164,"oldContent":"            try {"},{"type":"DELETE","lineNumber":165,"oldContent":"     */"},{"type":"INSERT","lineNumber":156,"content":"        return NavigationRoute("},{"type":"INSERT","lineNumber":157,"content":"            id = \"route_${System.currentTimeMillis()}\","},{"type":"INSERT","lineNumber":158,"content":"            name = \"Navigation Route\","},{"type":"INSERT","lineNumber":159,"content":"            description = \"Generated from route data\","},{"type":"INSERT","lineNumber":160,"content":"            totalLength = steps.sumOf { it.distance },"},{"type":"INSERT","lineNumber":161,"content":"            steps = steps,"},{"type":"INSERT","lineNumber":162,"content":"            estimatedTime = steps.sumOf { it.estimatedTime }"},{"type":"INSERT","lineNumber":163,"content":"        )"},{"type":"INSERT","lineNumber":164,"content":"    }"},{"type":"INSERT","lineNumber":166,"content":""},{"type":"DELETE","lineNumber":184,"oldContent":"    "},{"type":"INSERT","lineNumber":188,"content":"                }"},{"type":"INSERT","lineNumber":189,"content":"                "},{"type":"DELETE","lineNumber":191,"oldContent":"        return storageManager?.deleteLandmark(landmarkId) ?: false"},{"type":"MODIFY","lineNumber":203,"content":"                ","oldContent":"                Log.i(TAG, \"Feature-Storage: ${storageStats.landmarkCount} Landmarks, ${\"%.1f\".format(storageStats.getTotalSizeMB())} MB\")"},{"type":"INSERT","lineNumber":207,"content":"                "},{"type":"DELETE","lineNumber":211,"oldContent":"                "},{"type":"DELETE","lineNumber":213,"oldContent":"    }"},{"type":"DELETE","lineNumber":214,"oldContent":"        }"},{"type":"DELETE","lineNumber":215,"oldContent":"                                    landmark.x?.toDoubleOrNull() ?: 0.0,"},{"type":"DELETE","lineNumber":216,"oldContent":"                                description = \"Landmark ${landmark.type ?: \"\"}\","},{"type":"DELETE","lineNumber":217,"oldContent":"                                id = landmark.id, // Exakte ID aus JSON (z.B. \"PT-1-566\")"},{"type":"DELETE","lineNumber":218,"oldContent":"                            FeatureLandmark("},{"type":"DELETE","lineNumber":219,"oldContent":"                        val landmarkName = landmark.nameDe ?: landmark.nameEn ?: landmark.id"},{"type":"DELETE","lineNumber":220,"oldContent":"                        // Verwende die Landmark-ID genau wie sie in der JSON steht (z.B. \"PT-1-566\")"},{"type":"DELETE","lineNumber":221,"oldContent":"                pathItem.routeParts.forEach { routePart ->"},{"type":"INSERT","lineNumber":213,"content":"                _isFeatureMappingEnabled.value = processedLandmarks.isNotEmpty()"},{"type":"INSERT","lineNumber":214,"content":"                "},{"type":"INSERT","lineNumber":215,"content":"                Log.i(TAG, \"Feature-Matching System erfolgreich initialisiert\")"},{"type":"INSERT","lineNumber":216,"content":"                "},{"type":"INSERT","lineNumber":217,"content":"                // Logge Storage-Status"},{"type":"INSERT","lineNumber":218,"content":"                val status = storageManager!!.getStorageStatus()"},{"type":"INSERT","lineNumber":219,"content":"                Log.i(TAG, \"Storage-Status: ${status.getHealthStatus()}\")"},{"type":"INSERT","lineNumber":220,"content":"                "},{"type":"INSERT","lineNumber":221,"content":"                val storageStats = landmarkFeatureStorage!!.getStorageStats()"},{"type":"DELETE","lineNumber":231,"oldContent":"    fun getAvailableLandmarks(): List<FeatureLandmark> {"},{"type":"DELETE","lineNumber":232,"oldContent":"     */"},{"type":"DELETE","lineNumber":233,"oldContent":"     * Gibt verfügbare Landmarks zurück - verwendet Landmark-IDs aus der Route"},{"type":"DELETE","lineNumber":235,"oldContent":"    "},{"type":"DELETE","lineNumber":236,"oldContent":"    }"},{"type":"DELETE","lineNumber":237,"oldContent":"        return _currentRoute.value?.route?.path?.lastOrNull()?.xmlName ?: \"Unbekanntes Ziel\""},{"type":"DELETE","lineNumber":238,"oldContent":"                "},{"type":"INSERT","lineNumber":232,"content":"     * Lädt verfügbare Landmarks aus dem Projektverzeichnis"},{"type":"INSERT","lineNumber":234,"content":"    fun loadAvailableLandmarks(context: Context) {"},{"type":"INSERT","lineNumber":235,"content":"        viewModelScope.launch {"},{"type":"INSERT","lineNumber":236,"content":"            try {"},{"type":"INSERT","lineNumber":237,"content":"                Log.i(TAG, \"Lade verfügbare Landmarks aus Projektverzeichnis...\")"},{"type":"INSERT","lineNumber":238,"content":"                "},{"type":"INSERT","lineNumber":239,"content":"                if (storageManager == null) {"},{"type":"MODIFY","lineNumber":308,"content":"     * Fügt einen neuen Landmark hinzu (nur lokale Speicherung)","oldContent":"        }"},{"type":"MODIFY","lineNumber":332,"content":"                        Log.i(TAG, \"Landmark erfolgreich lokal gespeichert: $landmarkId\")","oldContent":"            // Sammle alle Landmark-IDs aus der aktuellen Route"},{"type":"DELETE","lineNumber":342,"oldContent":"     */"},{"type":"DELETE","lineNumber":343,"oldContent":"    }"},{"type":"INSERT","lineNumber":342,"content":"                false"},{"type":"INSERT","lineNumber":343,"content":"            }"},{"type":"MODIFY","lineNumber":377,"content":"    ","oldContent":"                        routeLandmarks.add("},{"type":"INSERT","lineNumber":401,"content":"        }"},{"type":"DELETE","lineNumber":402,"oldContent":"            try {"},{"type":"MODIFY","lineNumber":433,"content":"    }","oldContent":"                "},{"type":"DELETE","lineNumber":437,"oldContent":"    }"},{"type":"DELETE","lineNumber":438,"oldContent":"        return \"Haupteingang\""},{"type":"DELETE","lineNumber":439,"oldContent":"        Log.d(TAG, \"getCurrentEndPoint called (stub)\")"},{"type":"INSERT","lineNumber":437,"content":"    /**"},{"type":"INSERT","lineNumber":438,"content":"     * Geht zum nächsten Navigationsschritt"},{"type":"INSERT","lineNumber":439,"content":"     */"},{"type":"DELETE","lineNumber":442,"oldContent":"     * Gibt die aktuellen Navigationsschritte zurück"},{"type":"DELETE","lineNumber":443,"oldContent":"                                    landmark.x?.toDoubleOrNull() ?: 0.0,"},{"type":"INSERT","lineNumber":442,"content":"        _currentNavigationStep.value = currentStep + 1"},{"type":"INSERT","lineNumber":443,"content":"        Log.d(TAG, \"Nächster Navigationsschritt: ${currentStep + 1}\")"},{"type":"INSERT","lineNumber":446,"content":"    /**"},{"type":"INSERT","lineNumber":454,"content":"        }"},{"type":"DELETE","lineNumber":456,"oldContent":"                Log.e(TAG, \"Fehler beim Laden der Feature-Navigation Route: ${e.message}\")"},{"type":"DELETE","lineNumber":458,"oldContent":"}"},{"type":"MODIFY","lineNumber":462,"content":"        bitmap.compress(Bitmap.CompressFormat.JPEG, 85, byteArrayOutputStream)","oldContent":"                landmarkFeatureStorage?.cleanup()"},{"type":"DELETE","lineNumber":468,"oldContent":"     * Cleanup beim Destroy"},{"type":"INSERT","lineNumber":469,"content":"     */"},{"type":"MODIFY","lineNumber":485,"content":"                )","oldContent":"        return try {"},{"type":"MODIFY","lineNumber":489,"content":"            }","oldContent":""},{"type":"MODIFY","lineNumber":496,"content":"    /**","oldContent":"    /**"},{"type":"MODIFY","lineNumber":503,"content":"                ","oldContent":"        super.onCleared()"},{"type":"INSERT","lineNumber":526,"content":"                        instruction = \"Folgen Sie dem Korridor bis zum Ziel\","},{"type":"DELETE","lineNumber":527,"oldContent":"                        landmarks = emptyList()"},{"type":"INSERT","lineNumber":529,"content":"                )"},{"type":"DELETE","lineNumber":530,"oldContent":"                "},{"type":"MODIFY","lineNumber":541,"content":"                Log.e(TAG, \"Fehler beim Laden der Feature-Navigation Route: ${e.message}\")","oldContent":"    "},{"type":"MODIFY","lineNumber":547,"content":"     * Verarbeitet einen Kamera-Frame und simuliert Feature-Matching","oldContent":"     * Verarbeitet einen Kamera-Frame (vereinfacht)"},{"type":"MODIFY","lineNumber":549,"content":"    fun processFrameForFeatureMatching(frame: org.opencv.core.Mat) {","oldContent":"                    landmarkIds.add(landmark) // landmarks ist bereits List<String>"},{"type":"DELETE","lineNumber":552,"oldContent":"                Log.d(TAG, \"processFrameForFeatureMatching called (stub)\")"},{"type":"DELETE","lineNumber":553,"oldContent":"                // Stub implementation - verhindert Crashes"},{"type":"DELETE","lineNumber":554,"oldContent":"                _currentMatches.value = emptyList()"},{"type":"INSERT","lineNumber":552,"content":"                Log.d(TAG, \"processFrameForFeatureMatching called\")"},{"type":"INSERT","lineNumber":553,"content":"                "},{"type":"INSERT","lineNumber":554,"content":"                // Simuliere Feature-Matching basierend auf aktueller Route und Schritt"},{"type":"INSERT","lineNumber":555,"content":"                val currentRoute = _currentRoute.value"},{"type":"INSERT","lineNumber":556,"content":"                val currentStep = _currentNavigationStep.value"},{"type":"INSERT","lineNumber":557,"content":"                "},{"type":"INSERT","lineNumber":558,"content":"                if (currentRoute != null && _isFeatureMappingEnabled.value) {"},{"type":"INSERT","lineNumber":559,"content":"                    val simulatedMatches = generateSimulatedMatches(currentRoute, currentStep)"},{"type":"INSERT","lineNumber":560,"content":"                    _currentMatches.value = simulatedMatches"},{"type":"INSERT","lineNumber":561,"content":"                    Log.d(TAG, \"Generated ${simulatedMatches.size} simulated matches\")"},{"type":"INSERT","lineNumber":562,"content":"                } else {"},{"type":"INSERT","lineNumber":563,"content":"                    _currentMatches.value = emptyList()"},{"type":"INSERT","lineNumber":564,"content":"                }"},{"type":"DELETE","lineNumber":562,"oldContent":""},{"type":"INSERT","lineNumber":572,"content":"    /**"},{"type":"INSERT","lineNumber":573,"content":"     * Generiert simulierte Feature-Matches basierend auf der aktuellen Route"},{"type":"INSERT","lineNumber":574,"content":"     */"},{"type":"INSERT","lineNumber":575,"content":"    private fun generateSimulatedMatches(route: RouteData, currentStep: Int): List<FeatureMatchResult> {"},{"type":"INSERT","lineNumber":576,"content":"        val matches = mutableListOf<FeatureMatchResult>()"},{"type":"INSERT","lineNumber":577,"content":"        "},{"type":"INSERT","lineNumber":578,"content":"        try {"},{"type":"INSERT","lineNumber":579,"content":"            val steps = getCurrentNavigationSteps()"},{"type":"INSERT","lineNumber":580,"content":"            if (currentStep > 0 && currentStep <= steps.size) {"},{"type":"INSERT","lineNumber":581,"content":"                val step = steps[currentStep - 1]"},{"type":"INSERT","lineNumber":582,"content":"                "},{"type":"INSERT","lineNumber":583,"content":"                // Simuliere Matches für Landmarken im aktuellen Schritt"},{"type":"INSERT","lineNumber":584,"content":"                step.landmarks.take(3).forEachIndexed { index, landmarkId ->"},{"type":"INSERT","lineNumber":585,"content":"                    val confidence = when (index) {"},{"type":"INSERT","lineNumber":586,"content":"                        0 -> 0.85f + (Math.random() * 0.1f).toFloat() // Beste Match"},{"type":"INSERT","lineNumber":587,"content":"                        1 -> 0.75f + (Math.random() * 0.1f).toFloat() // Gute Match"},{"type":"INSERT","lineNumber":588,"content":"                        else -> 0.65f + (Math.random() * 0.1f).toFloat() // Okay Match"},{"type":"INSERT","lineNumber":589,"content":"                    }"},{"type":"INSERT","lineNumber":590,"content":"                    "},{"type":"INSERT","lineNumber":591,"content":"                    val landmark = ProcessedLandmark("},{"type":"INSERT","lineNumber":592,"content":"                        id = landmarkId,"},{"type":"INSERT","lineNumber":593,"content":"                        name = getLandmarkDisplayName(landmarkId)"},{"type":"INSERT","lineNumber":594,"content":"                    )"},{"type":"INSERT","lineNumber":595,"content":"                    "},{"type":"INSERT","lineNumber":596,"content":"                    matches.add("},{"type":"INSERT","lineNumber":597,"content":"                        FeatureMatchResult("},{"type":"INSERT","lineNumber":598,"content":"                            landmarkId = landmarkId,"},{"type":"INSERT","lineNumber":599,"content":"                            confidence = confidence,"},{"type":"INSERT","lineNumber":600,"content":"                            landmark = landmark,"},{"type":"INSERT","lineNumber":601,"content":"                            matchCount = (50 + Math.random() * 100).toInt(),"},{"type":"INSERT","lineNumber":602,"content":"                            distance = (5f + Math.random() * 20f).toFloat(),"},{"type":"INSERT","lineNumber":603,"content":"                            angle = (Math.random() * 360f).toFloat(),"},{"type":"INSERT","lineNumber":604,"content":"                            screenPosition = android.graphics.PointF("},{"type":"INSERT","lineNumber":605,"content":"                                (200f + Math.random() * 400f).toFloat(),"},{"type":"INSERT","lineNumber":606,"content":"                                (300f + Math.random() * 200f).toFloat()"},{"type":"INSERT","lineNumber":607,"content":"                            )"},{"type":"INSERT","lineNumber":608,"content":"                        )"},{"type":"INSERT","lineNumber":609,"content":"                    )"},{"type":"INSERT","lineNumber":610,"content":"                }"},{"type":"INSERT","lineNumber":611,"content":"            }"},{"type":"INSERT","lineNumber":612,"content":"        } catch (e: Exception) {"},{"type":"INSERT","lineNumber":613,"content":"            Log.e(TAG, \"Fehler beim Generieren simulierter Matches: ${e.message}\")"},{"type":"INSERT","lineNumber":614,"content":"        }"},{"type":"INSERT","lineNumber":615,"content":"        "},{"type":"INSERT","lineNumber":616,"content":"        return matches"},{"type":"INSERT","lineNumber":617,"content":"    }"},{"type":"INSERT","lineNumber":620,"content":"     * Gibt einen benutzerfreundlichen Namen für eine Landmark-ID zurück"},{"type":"INSERT","lineNumber":621,"content":"     */"},{"type":"INSERT","lineNumber":622,"content":"    private fun getLandmarkDisplayName(landmarkId: String): String {"},{"type":"INSERT","lineNumber":623,"content":"        return when {"},{"type":"INSERT","lineNumber":624,"content":"            landmarkId.contains(\"PT-1-86\") -> \"Prof. Ludwig Büro\""},{"type":"INSERT","lineNumber":625,"content":"            landmarkId.contains(\"PT-1-566\") -> \"Haupteingang PT\""},{"type":"INSERT","lineNumber":626,"content":"            landmarkId.contains(\"PT-1-697\") -> \"Tür Raum 697\""},{"type":"INSERT","lineNumber":627,"content":"            landmarkId.contains(\"door\") -> \"Tür\""},{"type":"INSERT","lineNumber":628,"content":"            landmarkId.contains(\"entrance\") -> \"Eingang\""},{"type":"INSERT","lineNumber":629,"content":"            landmarkId.contains(\"stairs\") -> \"Treppe\""},{"type":"INSERT","lineNumber":630,"content":"            landmarkId.contains(\"elevator\") -> \"Aufzug\""},{"type":"INSERT","lineNumber":631,"content":"            else -> \"Landmark $landmarkId\""},{"type":"INSERT","lineNumber":632,"content":"        }"},{"type":"INSERT","lineNumber":633,"content":"    }"},{"type":"DELETE","lineNumber":566,"oldContent":"    "},{"type":"DELETE","lineNumber":567,"oldContent":"     * Gibt verfügbare Landmarks zurück - verwendet Landmark-IDs aus der Route"},{"type":"DELETE","lineNumber":568,"oldContent":"}"},{"type":"INSERT","lineNumber":635,"content":"    /**"},{"type":"INSERT","lineNumber":636,"content":"     * Aktiviert/Deaktiviert das Feature-Mapping"},{"type":"INSERT","lineNumber":637,"content":"     */"},{"type":"INSERT","lineNumber":638,"content":"    fun setFeatureMappingEnabled(enabled: Boolean) {"},{"type":"INSERT","lineNumber":639,"content":"        _isFeatureMappingEnabled.value = enabled"},{"type":"INSERT","lineNumber":640,"content":"        Log.d(TAG, \"Feature-Mapping ${if (enabled) \"aktiviert\" else \"deaktiviert\"}\")"},{"type":"INSERT","lineNumber":641,"content":"        "},{"type":"INSERT","lineNumber":642,"content":"        if (!enabled) {"},{"type":"INSERT","lineNumber":643,"content":"            _currentMatches.value = emptyList()"},{"type":"INSERT","lineNumber":645,"content":"    }"},{"type":"INSERT","lineNumber":646,"content":"    "},{"type":"INSERT","lineNumber":647,"content":"    /**"},{"type":"INSERT","lineNumber":648,"content":"     * Aktualisiert den aktuellen Navigationsschritt"},{"type":"INSERT","lineNumber":649,"content":"     */"},{"type":"INSERT","lineNumber":650,"content":"    fun setCurrentNavigationStep(step: Int) {"},{"type":"INSERT","lineNumber":651,"content":"        _currentNavigationStep.value = step"},{"type":"INSERT","lineNumber":652,"content":"        Log.d(TAG, \"Navigationsschritt aktualisiert: $step\")"},{"type":"INSERT","lineNumber":653,"content":"        "},{"type":"INSERT","lineNumber":654,"content":"        // Aktualisiere Matches für den neuen Schritt"},{"type":"INSERT","lineNumber":655,"content":"        if (_isFeatureMappingEnabled.value && _currentRoute.value != null) {"},{"type":"INSERT","lineNumber":656,"content":"            viewModelScope.launch {"},{"type":"INSERT","lineNumber":657,"content":"                val simulatedMatches = generateSimulatedMatches(_currentRoute.value!!, step)"},{"type":"INSERT","lineNumber":658,"content":"                _currentMatches.value = simulatedMatches"},{"type":"DELETE","lineNumber":571,"oldContent":"                Log.e(TAG, \"Fehler beim Bereinigen: ${e.message}\")"},{"type":"DELETE","lineNumber":572,"oldContent":"            } catch (e: Exception) {"},{"type":"INSERT","lineNumber":660,"content":"        }"},{"type":"INSERT","lineNumber":661,"content":"    }"},{"type":"INSERT","lineNumber":662,"content":"    "},{"type":"INSERT","lineNumber":663,"content":""},{"type":"INSERT","lineNumber":664,"content":"    "},{"type":"INSERT","lineNumber":665,"content":""},{"type":"INSERT","lineNumber":666,"content":"    "},{"type":"INSERT","lineNumber":667,"content":"    /**"},{"type":"INSERT","lineNumber":668,"content":"     * Gibt verfügbare Landmarks zurück - verwendet Landmark-IDs aus der Route"},{"type":"INSERT","lineNumber":669,"content":"     */"},{"type":"INSERT","lineNumber":670,"content":"    fun getAvailableLandmarks(): List<FeatureLandmark> {"},{"type":"INSERT","lineNumber":671,"content":"        return try {"},{"type":"INSERT","lineNumber":672,"content":"            val routeLandmarks = mutableListOf<FeatureLandmark>()"},{"type":"INSERT","lineNumber":673,"content":"            "},{"type":"DELETE","lineNumber":576,"oldContent":"                // Bereinige Feature-Storage Cache"},{"type":"DELETE","lineNumber":577,"oldContent":"                storageManager?.logPerformanceSummary()"},{"type":"INSERT","lineNumber":677,"content":"                    routePart.landmarks?.forEach { landmark ->"},{"type":"INSERT","lineNumber":678,"content":"                        // landmark ist bereits ein String (Landmark-ID)"},{"type":"DELETE","lineNumber":580,"oldContent":"    }"},{"type":"DELETE","lineNumber":581,"oldContent":"        // Stub implementation - verhindert Crashes"},{"type":"DELETE","lineNumber":582,"oldContent":"        Log.d(TAG, \"enableStorageSystemImmediately called (stub)\")"},{"type":"DELETE","lineNumber":583,"oldContent":"    fun enableStorageSystemImmediately(context: Context) {"},{"type":"INSERT","lineNumber":681,"content":"                                id = landmark, // String aus JSON"},{"type":"INSERT","lineNumber":682,"content":"                                name = landmark,"},{"type":"INSERT","lineNumber":683,"content":"                                description = \"Landmark\","},{"type":"INSERT","lineNumber":684,"content":"                                position = Position(0.0, 0.0, 0.0),"},{"type":"DELETE","lineNumber":598,"oldContent":"                                id = landmarkInfo.id, // Exakte ID aus Dateiname"},{"type":"INSERT","lineNumber":700,"content":"                                id = landmarkInfo.id, // Exakte ID aus Dateiname"},{"type":"DELETE","lineNumber":606,"oldContent":"                }"},{"type":"INSERT","lineNumber":708,"content":"                }"},{"type":"DELETE","lineNumber":618,"oldContent":"    }"},{"type":"DELETE","lineNumber":621,"oldContent":"    /**"},{"type":"INSERT","lineNumber":721,"content":"    }"},{"type":"DELETE","lineNumber":623,"oldContent":"    fun enableStorageSystemImmediately(context: Context) {"},{"type":"INSERT","lineNumber":723,"content":"    /**"},{"type":"INSERT","lineNumber":724,"content":"     * Gibt die aktuellen Navigationsschritte zurück"},{"type":"DELETE","lineNumber":629,"oldContent":"            } else {"},{"type":"DELETE","lineNumber":631,"oldContent":"            }"},{"type":"INSERT","lineNumber":731,"content":"            } else {"},{"type":"INSERT","lineNumber":733,"content":"            }"},{"type":"DELETE","lineNumber":636,"oldContent":"    }"},{"type":"INSERT","lineNumber":738,"content":"    }"},{"type":"DELETE","lineNumber":640,"oldContent":"    "},{"type":"INSERT","lineNumber":741,"content":""},{"type":"INSERT","lineNumber":742,"content":"    /**"},{"type":"INSERT","lineNumber":743,"content":"     * Lädt Landmarks neu für eine spezifische Route (vereinfacht)"},{"type":"INSERT","lineNumber":744,"content":"     */"},{"type":"INSERT","lineNumber":745,"content":"    private suspend fun reloadLandmarksForRoute(route: com.example.arwalking.data.Route) {"},{"type":"INSERT","lineNumber":746,"content":"        try {"},{"type":"INSERT","lineNumber":747,"content":"            Log.d(TAG, \"reloadLandmarksForRoute called (stub)\")"},{"type":"INSERT","lineNumber":748,"content":"            // Stub implementation - verhindert Crashes"},{"type":"INSERT","lineNumber":749,"content":"        } catch (e: Exception) {"},{"type":"INSERT","lineNumber":750,"content":"            Log.e(TAG, \"Fehler beim Neuladen der Route-Landmarks: ${e.message}\")"},{"type":"INSERT","lineNumber":751,"content":"        }"},{"type":"DELETE","lineNumber":642,"oldContent":"        return steps.find { it.stepNumber == currentStepNumber }"},{"type":"DELETE","lineNumber":643,"oldContent":"        val currentStepNumber = _currentNavigationStep.value"},{"type":"DELETE","lineNumber":644,"oldContent":"        val steps = getCurrentNavigationSteps()"},{"type":"DELETE","lineNumber":645,"oldContent":"        Log.d(TAG, \"getCurrentStep called (stub)\")"},{"type":"DELETE","lineNumber":646,"oldContent":"    fun getCurrentStep(): NavigationStep? {"},{"type":"DELETE","lineNumber":648,"oldContent":"    }"},{"type":"DELETE","lineNumber":649,"oldContent":"            Log.e(TAG, \"Fehler beim Neuladen der Route-Landmarks: ${e.message}\")"},{"type":"DELETE","lineNumber":650,"oldContent":"        _currentNavigationStep.value = step"},{"type":"DELETE","lineNumber":651,"oldContent":"    "},{"type":"DELETE","lineNumber":652,"oldContent":"        Log.d(TAG, \"setCurrentNavigationStep called (stub): $step\")"},{"type":"INSERT","lineNumber":758,"content":"        viewModelScope.launch {"},{"type":"DELETE","lineNumber":659,"oldContent":"                }"},{"type":"DELETE","lineNumber":661,"oldContent":"    fun getCurrentlyLoadedLandmarkIds(): List<String> {"},{"type":"INSERT","lineNumber":762,"content":"            }"},{"type":"INSERT","lineNumber":763,"content":"        }"},{"type":"DELETE","lineNumber":663,"oldContent":"    }"},{"type":"DELETE","lineNumber":668,"oldContent":"                "},{"type":"DELETE","lineNumber":669,"oldContent":"                landmarkFeatureStorage?.cleanup()"},{"type":"DELETE","lineNumber":670,"oldContent":"                storageManager?.logPerformanceSummary()"},{"type":"INSERT","lineNumber":769,"content":"    fun getCurrentlyLoadedLandmarkIds(): List<String> {"},{"type":"INSERT","lineNumber":770,"content":"        Log.d(TAG, \"getCurrentlyLoadedLandmarkIds called (stub)\")"},{"type":"INSERT","lineNumber":771,"content":"        return emptyList()"},{"type":"INSERT","lineNumber":772,"content":"    }"},{"type":"DELETE","lineNumber":673,"oldContent":"    }"},{"type":"DELETE","lineNumber":675,"oldContent":"    fun getRequiredLandmarkIds(): List<String> {"},{"type":"INSERT","lineNumber":777,"content":"    fun getRequiredLandmarkIds(): List<String> {"},{"type":"DELETE","lineNumber":686,"oldContent":"        "},{"type":"INSERT","lineNumber":788,"content":"        "},{"type":"DELETE","lineNumber":689,"oldContent":""},{"type":"INSERT","lineNumber":791,"content":""},{"type":"DELETE","lineNumber":696,"oldContent":"    "},{"type":"DELETE","lineNumber":698,"oldContent":"    fun startFrameProcessing() {"},{"type":"INSERT","lineNumber":799,"content":"    "},{"type":"INSERT","lineNumber":800,"content":"    fun startFrameProcessing() {"},{"type":"DELETE","lineNumber":706,"oldContent":"    }"},{"type":"INSERT","lineNumber":808,"content":"    }"},{"type":"DELETE","lineNumber":711,"oldContent":"    }"},{"type":"INSERT","lineNumber":813,"content":"    }"},{"type":"DELETE","lineNumber":715,"oldContent":"        _currentNavigationStep.value = step"},{"type":"INSERT","lineNumber":817,"content":"        _currentNavigationStep.value = step"},{"type":"DELETE","lineNumber":719,"oldContent":"        val steps = getCurrentNavigationSteps()"},{"type":"DELETE","lineNumber":720,"oldContent":"        val currentStepNumber = _currentNavigationStep.value"},{"type":"DELETE","lineNumber":723,"oldContent":"                "},{"type":"DELETE","lineNumber":724,"oldContent":"        Log.d(TAG, \"getCurrentStep called (stub)\")"},{"type":"DELETE","lineNumber":725,"oldContent":"}"},{"type":"DELETE","lineNumber":726,"oldContent":"        }"},{"type":"DELETE","lineNumber":727,"oldContent":"                Log.e(TAG, \"Fehler beim Bereinigen: ${e.message}\")"},{"type":"DELETE","lineNumber":728,"oldContent":"            } catch (e: Exception) {"},{"type":"INSERT","lineNumber":822,"content":"        val steps = getCurrentNavigationSteps()"},{"type":"INSERT","lineNumber":823,"content":"        val currentStepNumber = _currentNavigationStep.value"},{"type":"INSERT","lineNumber":824,"content":"        return steps.find { it.stepNumber == currentStepNumber }"},{"type":"INSERT","lineNumber":825,"content":"    }"},{"type":"INSERT","lineNumber":826,"content":"    "},{"type":"INSERT","lineNumber":827,"content":""},{"type":"INSERT","lineNumber":828,"content":""},{"type":"INSERT","lineNumber":829,"content":"    /**"},{"type":"INSERT","lineNumber":830,"content":"     * Cleanup beim Destroy"},{"type":"DELETE","lineNumber":730,"oldContent":"                Log.i(TAG, \"RouteViewModel bereinigt\")"},{"type":"DELETE","lineNumber":734,"oldContent":"                "},{"type":"INSERT","lineNumber":836,"content":"                // Storage-Manager bereinigt sich selbst automatisch"},{"type":"INSERT","lineNumber":837,"content":"                storageManager?.logPerformanceSummary()"},{"type":"INSERT","lineNumber":838,"content":"                "},{"type":"DELETE","lineNumber":737,"oldContent":"}"},{"type":"INSERT","lineNumber":840,"content":"                landmarkFeatureStorage?.cleanup()"},{"type":"INSERT","lineNumber":841,"content":"                "},{"type":"DELETE","lineNumber":739,"oldContent":"        }"},{"type":"INSERT","lineNumber":845,"content":"            }"},{"type":"INSERT","lineNumber":846,"content":"        }"},{"type":"INSERT","lineNumber":847,"content":"    }"},{"type":"INSERT","lineNumber":848,"content":"}"}]},{"timestamp":1754345809979,"changes":[{"type":"MODIFY","lineNumber":42,"content":"","oldContent":"            convertToNavigationRoute(routeData)"},{"type":"DELETE","lineNumber":58,"oldContent":"                val landmarkIds = routePart.landmarks.map { it.id }"},{"type":"DELETE","lineNumber":59,"oldContent":""},{"type":"INSERT","lineNumber":58,"content":"    // State für aktuellen Navigationsschritt"},{"type":"INSERT","lineNumber":59,"content":"    private val _currentNavigationStep = MutableStateFlow(1)"},{"type":"INSERT","lineNumber":63,"content":"     * Initialisiert die RouteViewModel mit dem gegebenen Context"},{"type":"INSERT","lineNumber":64,"content":"     */"},{"type":"INSERT","lineNumber":65,"content":"    fun initialize(context: Context) {"},{"type":"INSERT","lineNumber":66,"content":"        try {"},{"type":"INSERT","lineNumber":67,"content":"            Log.i(TAG, \"Initialisiere RouteViewModel...\")"},{"type":"INSERT","lineNumber":68,"content":"            "},{"type":"INSERT","lineNumber":69,"content":"            // Initialisiere RouteRepository"},{"type":"INSERT","lineNumber":70,"content":"            if (routeRepository == null) {"},{"type":"INSERT","lineNumber":71,"content":"                routeRepository = RouteRepository(context)"},{"type":"INSERT","lineNumber":72,"content":"                Log.d(TAG, \"RouteRepository initialisiert\")"},{"type":"INSERT","lineNumber":73,"content":"            }"},{"type":"INSERT","lineNumber":74,"content":"            "},{"type":"INSERT","lineNumber":75,"content":"            // Initialisiere Storage-System"},{"type":"INSERT","lineNumber":76,"content":"            if (storageManager == null) {"},{"type":"INSERT","lineNumber":77,"content":"                storageManager = ArWalkingStorageManager(context)"},{"type":"INSERT","lineNumber":78,"content":"                Log.d(TAG, \"StorageManager initialisiert\")"},{"type":"INSERT","lineNumber":79,"content":"            }"},{"type":"INSERT","lineNumber":80,"content":"            "},{"type":"INSERT","lineNumber":81,"content":"            // Initialisiere Feature-Matching-Systeme"},{"type":"INSERT","lineNumber":82,"content":"            initializeFeatureMatchingSystems(context)"},{"type":"INSERT","lineNumber":83,"content":"            "},{"type":"INSERT","lineNumber":84,"content":"            Log.i(TAG, \"RouteViewModel erfolgreich initialisiert\")"},{"type":"INSERT","lineNumber":85,"content":"        } catch (e: Exception) {"},{"type":"INSERT","lineNumber":86,"content":"            Log.e(TAG, \"Fehler bei der Initialisierung: ${e.message}\")"},{"type":"INSERT","lineNumber":87,"content":"        }"},{"type":"INSERT","lineNumber":88,"content":"    }"},{"type":"INSERT","lineNumber":89,"content":""},{"type":"INSERT","lineNumber":90,"content":"    /**"},{"type":"DELETE","lineNumber":94,"oldContent":"        }"},{"type":"INSERT","lineNumber":122,"content":"                totalLength = 0.0,"},{"type":"DELETE","lineNumber":119,"oldContent":"            "},{"type":"INSERT","lineNumber":147,"content":"            Log.d(TAG, \"  - Estimated Time: ${step.estimatedTime}s\")"},{"type":"DELETE","lineNumber":124,"oldContent":"     */"},{"type":"INSERT","lineNumber":152,"content":"    }"},{"type":"DELETE","lineNumber":127,"oldContent":"    }"},{"type":"INSERT","lineNumber":155,"content":"     * Konvertiert RouteData zu NavigationRoute"},{"type":"DELETE","lineNumber":131,"oldContent":"     * Gibt den aktuellen Endpunkt zurück"},{"type":"INSERT","lineNumber":159,"content":"        var stepNumber = 1"},{"type":"DELETE","lineNumber":147,"oldContent":"            }"},{"type":"INSERT","lineNumber":175,"content":"                        floor = floor,"},{"type":"DELETE","lineNumber":153,"oldContent":"     */"},{"type":"DELETE","lineNumber":154,"oldContent":"    }"},{"type":"INSERT","lineNumber":181,"content":"            }"},{"type":"INSERT","lineNumber":182,"content":"        }"},{"type":"INSERT","lineNumber":193,"content":"    "},{"type":"DELETE","lineNumber":166,"oldContent":"            }"},{"type":"INSERT","lineNumber":201,"content":"            try {"},{"type":"INSERT","lineNumber":202,"content":"                Log.i(TAG, \"Initialisiere neues Storage-System und Feature-Matching...\")"},{"type":"DELETE","lineNumber":174,"oldContent":"}"},{"type":"DELETE","lineNumber":175,"oldContent":"                                description = \"Verfügbares Landmark\","},{"type":"DELETE","lineNumber":177,"oldContent":"                                name = landmarkInfo.filename.substringBeforeLast('.'),"},{"type":"INSERT","lineNumber":205,"content":"                storageManager = ArWalkingStorageManager(context)"},{"type":"DELETE","lineNumber":187,"oldContent":"                }"},{"type":"INSERT","lineNumber":216,"content":"                }"},{"type":"DELETE","lineNumber":212,"oldContent":"                "},{"type":"INSERT","lineNumber":240,"content":"                // Feature-Mapping ist verfügbar wenn Landmarks geladen wurden"},{"type":"DELETE","lineNumber":222,"oldContent":"    }"},{"type":"DELETE","lineNumber":223,"oldContent":"                Log.e(TAG, \"Fehler beim Bereinigen: ${e.message}\")"},{"type":"DELETE","lineNumber":224,"oldContent":"                                    landmark.x?.toDoubleOrNull() ?: 0.0,"},{"type":"INSERT","lineNumber":250,"content":"                Log.i(TAG, \"Feature-Storage: ${storageStats.landmarkCount} Landmarks, ${\"%.1f\".format(storageStats.getTotalSizeMB())} MB\")"},{"type":"INSERT","lineNumber":251,"content":"                "},{"type":"INSERT","lineNumber":252,"content":"            } catch (e: Exception) {"},{"type":"DELETE","lineNumber":228,"oldContent":"                                description = \"Landmark ${landmark.type ?: \"\"}\","},{"type":"DELETE","lineNumber":229,"oldContent":"                                name = landmarkName,"},{"type":"DELETE","lineNumber":230,"oldContent":"                                id = landmark.id, // Exakte ID aus JSON (z.B. \"PT-1-566\")"},{"type":"INSERT","lineNumber":256,"content":"        }"},{"type":"INSERT","lineNumber":257,"content":"    }"},{"type":"INSERT","lineNumber":258,"content":"    "},{"type":"INSERT","lineNumber":259,"content":"    /**"},{"type":"INSERT","lineNumber":261,"content":"     */"},{"type":"DELETE","lineNumber":233,"oldContent":"                        // Verwende die Landmark-ID genau wie sie in der JSON steht (z.B. \"PT-1-566\")"},{"type":"DELETE","lineNumber":239,"oldContent":"        viewModelScope.launch {"},{"type":"DELETE","lineNumber":333,"oldContent":"                // Bereinige Feature-Storage Cache"},{"type":"INSERT","lineNumber":361,"content":"                        true"},{"type":"DELETE","lineNumber":341,"oldContent":"     */"},{"type":"INSERT","lineNumber":369,"content":"                Log.w(TAG, \"Storage-Manager nicht verfügbar\")"},{"type":"DELETE","lineNumber":426,"oldContent":"            }"},{"type":"DELETE","lineNumber":427,"oldContent":"                Log.e(TAG, \"Fehler beim Laden der Feature Maps: ${e.message}\")"},{"type":"INSERT","lineNumber":454,"content":"                    Log.w(TAG, \"Storage-Manager nicht verfügbar\")"},{"type":"INSERT","lineNumber":455,"content":"                }"},{"type":"INSERT","lineNumber":459,"content":"            }"},{"type":"DELETE","lineNumber":432,"oldContent":"        }"},{"type":"DELETE","lineNumber":436,"oldContent":"     * Cleanup beim Destroy"},{"type":"INSERT","lineNumber":464,"content":"    "},{"type":"DELETE","lineNumber":441,"oldContent":"    "},{"type":"INSERT","lineNumber":469,"content":"        val currentStep = _currentNavigationStep.value"},{"type":"DELETE","lineNumber":454,"oldContent":"    }"},{"type":"INSERT","lineNumber":483,"content":"    }"},{"type":"DELETE","lineNumber":468,"oldContent":"     */"},{"type":"INSERT","lineNumber":497,"content":"     */"},{"type":"INSERT","lineNumber":523,"content":"    "},{"type":"DELETE","lineNumber":496,"oldContent":"    /**"},{"type":"DELETE","lineNumber":545,"oldContent":"                storageManager?.logPerformanceSummary()"},{"type":"INSERT","lineNumber":573,"content":"    "},{"type":"DELETE","lineNumber":548,"oldContent":"        viewModelScope.launch {"},{"type":"INSERT","lineNumber":576,"content":"     */"},{"type":"DELETE","lineNumber":556,"oldContent":"            } catch (e: Exception) {"},{"type":"DELETE","lineNumber":558,"oldContent":"                Log.e(TAG, \"Fehler beim Feature-Matching: ${e.message}\")"},{"type":"DELETE","lineNumber":560,"oldContent":"                _currentMatches.value = emptyList()"},{"type":"DELETE","lineNumber":562,"oldContent":"            }"},{"type":"DELETE","lineNumber":564,"oldContent":"        }"},{"type":"DELETE","lineNumber":566,"oldContent":"    }"},{"type":"DELETE","lineNumber":568,"oldContent":"    "},{"type":"DELETE","lineNumber":571,"oldContent":"    "},{"type":"DELETE","lineNumber":573,"oldContent":"    }"},{"type":"DELETE","lineNumber":574,"oldContent":"        return emptyList()"},{"type":"INSERT","lineNumber":593,"content":"            } catch (e: Exception) {"},{"type":"INSERT","lineNumber":594,"content":"                Log.e(TAG, \"Fehler beim Feature-Matching: ${e.message}\")"},{"type":"INSERT","lineNumber":595,"content":"                _currentMatches.value = emptyList()"},{"type":"INSERT","lineNumber":596,"content":"            }"},{"type":"INSERT","lineNumber":598,"content":"    }"},{"type":"INSERT","lineNumber":599,"content":"    "},{"type":"DELETE","lineNumber":577,"oldContent":"    /**"},{"type":"DELETE","lineNumber":579,"oldContent":"            // Sammle alle Landmark-IDs aus der aktuellen Route"},{"type":"DELETE","lineNumber":581,"oldContent":"            _currentRoute.value?.route?.path?.forEach { pathItem ->"},{"type":"DELETE","lineNumber":583,"oldContent":"                pathItem.routeParts.forEach { routePart ->"},{"type":"DELETE","lineNumber":587,"oldContent":"                        routeLandmarks.add("},{"type":"DELETE","lineNumber":589,"oldContent":"                steps[currentStepNumber - 1] // Convert to 0-based index"},{"type":"DELETE","lineNumber":595,"oldContent":"                                imageUrl = \"\""},{"type":"DELETE","lineNumber":597,"oldContent":"                            )"},{"type":"DELETE","lineNumber":599,"oldContent":"                        )"},{"type":"DELETE","lineNumber":601,"oldContent":"                    }"},{"type":"DELETE","lineNumber":603,"oldContent":"                }"},{"type":"DELETE","lineNumber":605,"oldContent":"            }"},{"type":"DELETE","lineNumber":607,"oldContent":"            "},{"type":"DELETE","lineNumber":609,"oldContent":"            // Zusätzlich: Lade verfügbare Bilder aus dem Storage-System"},{"type":"DELETE","lineNumber":611,"oldContent":"            if (storageManager != null) {"},{"type":"DELETE","lineNumber":613,"oldContent":"                val landmarkInfos = runBlocking { storageManager!!.getAvailableProjectLandmarks() }"},{"type":"DELETE","lineNumber":615,"oldContent":"                landmarkInfos.forEach { landmarkInfo ->"},{"type":"DELETE","lineNumber":617,"oldContent":"                    // Füge nur hinzu, wenn nicht bereits in der Route vorhanden"},{"type":"DELETE","lineNumber":619,"oldContent":"                    if (routeLandmarks.none { it.id == landmarkInfo.id }) {"},{"type":"DELETE","lineNumber":621,"oldContent":"                        routeLandmarks.add("},{"type":"DELETE","lineNumber":624,"oldContent":"                            FeatureLandmark("},{"type":"DELETE","lineNumber":626,"oldContent":"                                name = landmarkInfo.filename.substringBeforeLast('.'),"},{"type":"DELETE","lineNumber":628,"oldContent":"                                description = \"Verfügbares Landmark\","},{"type":"DELETE","lineNumber":630,"oldContent":"                                position = Position(0.0, 0.0, 0.0),"},{"type":"DELETE","lineNumber":632,"oldContent":"                                imageUrl = \"\""},{"type":"DELETE","lineNumber":634,"oldContent":"                            )"},{"type":"DELETE","lineNumber":636,"oldContent":"                        )"},{"type":"DELETE","lineNumber":639,"oldContent":"                    }"},{"type":"DELETE","lineNumber":641,"oldContent":"            }"},{"type":"DELETE","lineNumber":643,"oldContent":"            "},{"type":"DELETE","lineNumber":645,"oldContent":"            Log.d(TAG, \"Verfügbare Landmarks: ${routeLandmarks.size}\")"},{"type":"DELETE","lineNumber":647,"oldContent":"            routeLandmarks.forEach { landmark ->"},{"type":"DELETE","lineNumber":649,"oldContent":"                Log.d(TAG, \"- ${landmark.id}: ${landmark.name}\")"},{"type":"DELETE","lineNumber":651,"oldContent":"            }"},{"type":"DELETE","lineNumber":653,"oldContent":"            "},{"type":"DELETE","lineNumber":655,"oldContent":"            routeLandmarks"},{"type":"DELETE","lineNumber":657,"oldContent":"        } catch (e: Exception) {"},{"type":"DELETE","lineNumber":659,"oldContent":"            Log.e(TAG, \"Fehler beim Laden der verfügbaren Landmarks: ${e.message}\")"},{"type":"DELETE","lineNumber":660,"oldContent":"            emptyList()"},{"type":"INSERT","lineNumber":646,"content":"    "},{"type":"INSERT","lineNumber":647,"content":"    /**"},{"type":"DELETE","lineNumber":662,"oldContent":"        }"},{"type":"DELETE","lineNumber":665,"oldContent":"    "},{"type":"DELETE","lineNumber":668,"oldContent":"     */"},{"type":"DELETE","lineNumber":670,"oldContent":"    fun getCurrentNavigationSteps(): List<NavigationStep> {"},{"type":"DELETE","lineNumber":672,"oldContent":"        return try {"},{"type":"DELETE","lineNumber":674,"oldContent":"            val route = _currentRoute.value"},{"type":"DELETE","lineNumber":676,"oldContent":"            if (route != null) {"},{"type":"DELETE","lineNumber":679,"oldContent":"                convertToNavigationRoute(route).steps"},{"type":"DELETE","lineNumber":683,"oldContent":"    }"},{"type":"DELETE","lineNumber":684,"oldContent":"        }"},{"type":"DELETE","lineNumber":685,"oldContent":"            }"},{"type":"INSERT","lineNumber":662,"content":"    "},{"type":"DELETE","lineNumber":687,"oldContent":"                Log.e(TAG, \"Fehler beim Bereinigen: ${e.message}\")"},{"type":"DELETE","lineNumber":690,"oldContent":"            } catch (e: Exception) {"},{"type":"DELETE","lineNumber":692,"oldContent":""},{"type":"DELETE","lineNumber":694,"oldContent":""},{"type":"DELETE","lineNumber":697,"oldContent":"                    landmarkIds.add(landmark) // landmarks ist bereits List<String>"},{"type":"INSERT","lineNumber":672,"content":"        }"},{"type":"DELETE","lineNumber":703,"oldContent":"    /**"},{"type":"DELETE","lineNumber":710,"oldContent":"    /**"},{"type":"DELETE","lineNumber":712,"oldContent":"     * Aktualisiert Landmarks wenn sich die aktuelle Route ändert"},{"type":"DELETE","lineNumber":714,"oldContent":"     */"},{"type":"DELETE","lineNumber":716,"oldContent":"    fun updateLandmarksForCurrentRoute() {"},{"type":"DELETE","lineNumber":718,"oldContent":"            val currentRoute = _currentRoute.value"},{"type":"DELETE","lineNumber":720,"oldContent":"            if (currentRoute != null) {"},{"type":"INSERT","lineNumber":687,"content":"            }"},{"type":"DELETE","lineNumber":722,"oldContent":"                reloadLandmarksForRoute(currentRoute.route)"},{"type":"DELETE","lineNumber":725,"oldContent":"    }"},{"type":"DELETE","lineNumber":728,"oldContent":"    "},{"type":"DELETE","lineNumber":730,"oldContent":"    /**"},{"type":"DELETE","lineNumber":732,"oldContent":"     * Gibt die aktuell geladenen Landmark-IDs zurück (für Debugging)"},{"type":"DELETE","lineNumber":734,"oldContent":"     */"},{"type":"DELETE","lineNumber":739,"oldContent":"    "},{"type":"DELETE","lineNumber":741,"oldContent":"    /**"},{"type":"DELETE","lineNumber":743,"oldContent":"     * Gibt die Landmark-IDs zurück, die in der aktuellen Route benötigt werden"},{"type":"DELETE","lineNumber":744,"oldContent":"    }"},{"type":"INSERT","lineNumber":702,"content":"            // Sammle alle Landmark-IDs aus der aktuellen Route"},{"type":"INSERT","lineNumber":703,"content":"            _currentRoute.value?.route?.path?.forEach { pathItem ->"},{"type":"INSERT","lineNumber":704,"content":"                pathItem.routeParts.forEach { routePart ->"},{"type":"DELETE","lineNumber":746,"oldContent":"        val currentRoute = _currentRoute.value ?: return emptyList()"},{"type":"DELETE","lineNumber":748,"oldContent":"        "},{"type":"DELETE","lineNumber":749,"oldContent":"        val landmarkIds = mutableSetOf<String>()"},{"type":"DELETE","lineNumber":750,"oldContent":"        for (pathItem in currentRoute.route.path) {"},{"type":"INSERT","lineNumber":707,"content":"                        routeLandmarks.add("},{"type":"INSERT","lineNumber":708,"content":"                            FeatureLandmark("},{"type":"DELETE","lineNumber":752,"oldContent":"            for (routePart in pathItem.routeParts) {"},{"type":"DELETE","lineNumber":754,"oldContent":"                routePart.landmarks?.forEach { landmark ->"},{"type":"DELETE","lineNumber":756,"oldContent":"                    landmarkIds.add(landmark) // landmarks ist bereits List<String>"},{"type":"INSERT","lineNumber":713,"content":"                                imageUrl = \"\""},{"type":"INSERT","lineNumber":714,"content":"                            )"},{"type":"INSERT","lineNumber":715,"content":"                        )"},{"type":"INSERT","lineNumber":716,"content":"                    }"},{"type":"DELETE","lineNumber":760,"oldContent":"        }"},{"type":"DELETE","lineNumber":761,"oldContent":"        return landmarkIds.toList()"},{"type":"DELETE","lineNumber":762,"oldContent":"    }"},{"type":"DELETE","lineNumber":763,"oldContent":"    /**"},{"type":"DELETE","lineNumber":764,"oldContent":"     * Fehlende Methoden für Navigation.kt"},{"type":"DELETE","lineNumber":765,"oldContent":"     */"},{"type":"DELETE","lineNumber":766,"oldContent":"    fun enableStorageSystemImmediately(context: Context) {"},{"type":"DELETE","lineNumber":767,"oldContent":"        Log.d(TAG, \"enableStorageSystemImmediately called (stub)\")"},{"type":"DELETE","lineNumber":768,"oldContent":"        // Stub implementation - verhindert Crashes"},{"type":"DELETE","lineNumber":769,"oldContent":"    }"},{"type":"INSERT","lineNumber":719,"content":"            "},{"type":"INSERT","lineNumber":720,"content":"            // Zusätzlich: Lade verfügbare Bilder aus dem Storage-System"},{"type":"INSERT","lineNumber":721,"content":"            if (storageManager != null) {"},{"type":"INSERT","lineNumber":722,"content":"                val landmarkInfos = runBlocking { storageManager!!.getAvailableProjectLandmarks() }"},{"type":"INSERT","lineNumber":723,"content":"                landmarkInfos.forEach { landmarkInfo ->"},{"type":"INSERT","lineNumber":724,"content":"                    // Füge nur hinzu, wenn nicht bereits in der Route vorhanden"},{"type":"INSERT","lineNumber":725,"content":"                    if (routeLandmarks.none { it.id == landmarkInfo.id }) {"},{"type":"INSERT","lineNumber":726,"content":"                        routeLandmarks.add("},{"type":"INSERT","lineNumber":727,"content":"                            FeatureLandmark("},{"type":"DELETE","lineNumber":771,"oldContent":"        Log.d(TAG, \"setCurrentNavigationStep called (stub): $step\")"},{"type":"DELETE","lineNumber":772,"oldContent":"        return \"Haupteingang\""},{"type":"DELETE","lineNumber":773,"oldContent":"    }"},{"type":"DELETE","lineNumber":774,"oldContent":"    "},{"type":"DELETE","lineNumber":775,"oldContent":"    "},{"type":"DELETE","lineNumber":776,"oldContent":"}"},{"type":"DELETE","lineNumber":777,"oldContent":"    }"},{"type":"INSERT","lineNumber":729,"content":"                                name = landmarkInfo.filename.substringBeforeLast('.'),"},{"type":"INSERT","lineNumber":730,"content":"                                description = \"Verfügbares Landmark\","},{"type":"INSERT","lineNumber":731,"content":"                                position = Position(0.0, 0.0, 0.0),"},{"type":"INSERT","lineNumber":732,"content":"                                imageUrl = \"\""},{"type":"INSERT","lineNumber":733,"content":"                            )"},{"type":"INSERT","lineNumber":734,"content":"                        )"},{"type":"INSERT","lineNumber":735,"content":"                    }"},{"type":"INSERT","lineNumber":737,"content":"            }"},{"type":"INSERT","lineNumber":738,"content":"            "},{"type":"INSERT","lineNumber":739,"content":"            Log.d(TAG, \"Verfügbare Landmarks: ${routeLandmarks.size}\")"},{"type":"INSERT","lineNumber":740,"content":"            routeLandmarks.forEach { landmark ->"},{"type":"INSERT","lineNumber":741,"content":"                Log.d(TAG, \"- ${landmark.id}: ${landmark.name}\")"},{"type":"INSERT","lineNumber":742,"content":"            }"},{"type":"INSERT","lineNumber":743,"content":"            "},{"type":"INSERT","lineNumber":744,"content":"            routeLandmarks"},{"type":"INSERT","lineNumber":745,"content":"        } catch (e: Exception) {"},{"type":"INSERT","lineNumber":746,"content":"            Log.e(TAG, \"Fehler beim Laden der verfügbaren Landmarks: ${e.message}\")"},{"type":"INSERT","lineNumber":747,"content":"            emptyList()"},{"type":"DELETE","lineNumber":780,"oldContent":"                Log.e(TAG, \"Fehler beim Bereinigen: ${e.message}\")"},{"type":"DELETE","lineNumber":781,"oldContent":"        Log.d(TAG, \"getCurrentEndPoint called (stub)\")"},{"type":"DELETE","lineNumber":782,"oldContent":"        return \"Haupteingang\""},{"type":"DELETE","lineNumber":783,"oldContent":"                Log.i(TAG, \"RouteViewModel bereinigt\")"},{"type":"DELETE","lineNumber":784,"oldContent":"    fun setCurrentNavigationStep(step: Int) {"},{"type":"DELETE","lineNumber":785,"oldContent":"        Log.d(TAG, \"setCurrentNavigationStep called (stub): $step\")"},{"type":"DELETE","lineNumber":788,"oldContent":"    }"},{"type":"DELETE","lineNumber":789,"oldContent":"    fun getCurrentStep(): NavigationStep? {"},{"type":"DELETE","lineNumber":790,"oldContent":"        Log.d(TAG, \"getCurrentStep called (stub)\")"},{"type":"INSERT","lineNumber":754,"content":"    fun getCurrentNavigationSteps(): List<NavigationStep> {"},{"type":"INSERT","lineNumber":755,"content":"        return try {"},{"type":"INSERT","lineNumber":756,"content":"            val route = _currentRoute.value"},{"type":"INSERT","lineNumber":757,"content":"            if (route != null) {"},{"type":"INSERT","lineNumber":758,"content":"                convertToNavigationRoute(route).steps"},{"type":"DELETE","lineNumber":795,"oldContent":"                // Bereinige Feature-Storage Cache"},{"type":"DELETE","lineNumber":796,"oldContent":"                "},{"type":"INSERT","lineNumber":760,"content":"                emptyList()"},{"type":"DELETE","lineNumber":798,"oldContent":"}"},{"type":"INSERT","lineNumber":762,"content":"        } catch (e: Exception) {"},{"type":"INSERT","lineNumber":763,"content":"            Log.e(TAG, \"Fehler beim Laden der Navigationsschritte: ${e.message}\")"},{"type":"INSERT","lineNumber":764,"content":"            emptyList()"},{"type":"DELETE","lineNumber":800,"oldContent":"            }"},{"type":"DELETE","lineNumber":802,"oldContent":"                landmarkFeatureStorage?.cleanup()"},{"type":"DELETE","lineNumber":803,"oldContent":"                storageManager?.logPerformanceSummary()"},{"type":"DELETE","lineNumber":805,"oldContent":"                // Storage-Manager bereinigt sich selbst automatisch"},{"type":"INSERT","lineNumber":768,"content":""},{"type":"INSERT","lineNumber":769,"content":""},{"type":"DELETE","lineNumber":807,"oldContent":"     * Cleanup beim Destroy"},{"type":"DELETE","lineNumber":809,"oldContent":"    /**"},{"type":"DELETE","lineNumber":811,"oldContent":""},{"type":"DELETE","lineNumber":813,"oldContent":""},{"type":"DELETE","lineNumber":815,"oldContent":"    "},{"type":"DELETE","lineNumber":817,"oldContent":"    }"},{"type":"DELETE","lineNumber":819,"oldContent":"        return steps.find { it.stepNumber == currentStepNumber }"},{"type":"DELETE","lineNumber":821,"oldContent":"        val currentStepNumber = _currentNavigationStep.value"},{"type":"DELETE","lineNumber":823,"oldContent":"        val steps = getCurrentNavigationSteps()"},{"type":"DELETE","lineNumber":825,"oldContent":"        _currentNavigationStep.value = step"},{"type":"INSERT","lineNumber":781,"content":"    "},{"type":"INSERT","lineNumber":782,"content":"    /**"},{"type":"INSERT","lineNumber":783,"content":"     * Aktualisiert Landmarks wenn sich die aktuelle Route ändert"},{"type":"INSERT","lineNumber":784,"content":"     */"},{"type":"INSERT","lineNumber":785,"content":"    fun updateLandmarksForCurrentRoute() {"},{"type":"INSERT","lineNumber":786,"content":"        viewModelScope.launch {"},{"type":"INSERT","lineNumber":787,"content":"            val currentRoute = _currentRoute.value"},{"type":"INSERT","lineNumber":788,"content":"            if (currentRoute != null) {"},{"type":"INSERT","lineNumber":789,"content":"                reloadLandmarksForRoute(currentRoute.route)"},{"type":"INSERT","lineNumber":790,"content":"            }"},{"type":"INSERT","lineNumber":791,"content":"        }"},{"type":"INSERT","lineNumber":793,"content":"    "},{"type":"INSERT","lineNumber":794,"content":"    /**"},{"type":"INSERT","lineNumber":795,"content":"     * Gibt die aktuell geladenen Landmark-IDs zurück (für Debugging)"},{"type":"INSERT","lineNumber":796,"content":"     */"},{"type":"INSERT","lineNumber":797,"content":"    fun getCurrentlyLoadedLandmarkIds(): List<String> {"},{"type":"INSERT","lineNumber":798,"content":"        Log.d(TAG, \"getCurrentlyLoadedLandmarkIds called (stub)\")"},{"type":"INSERT","lineNumber":799,"content":"        return emptyList()"},{"type":"INSERT","lineNumber":800,"content":"    }"},{"type":"INSERT","lineNumber":801,"content":"    "},{"type":"INSERT","lineNumber":802,"content":"    /**"},{"type":"INSERT","lineNumber":803,"content":"     * Gibt die Landmark-IDs zurück, die in der aktuellen Route benötigt werden"},{"type":"INSERT","lineNumber":804,"content":"     */"},{"type":"INSERT","lineNumber":805,"content":"    fun getRequiredLandmarkIds(): List<String> {"},{"type":"INSERT","lineNumber":806,"content":"        val currentRoute = _currentRoute.value ?: return emptyList()"},{"type":"INSERT","lineNumber":807,"content":"        "},{"type":"INSERT","lineNumber":808,"content":"        val landmarkIds = mutableSetOf<String>()"},{"type":"INSERT","lineNumber":809,"content":"        for (pathItem in currentRoute.route.path) {"},{"type":"INSERT","lineNumber":810,"content":"            for (routePart in pathItem.routeParts) {"},{"type":"INSERT","lineNumber":811,"content":"                routePart.landmarks?.forEach { landmark ->"},{"type":"INSERT","lineNumber":812,"content":"                    landmarkIds.add(landmark) // landmarks ist bereits List<String>"},{"type":"INSERT","lineNumber":813,"content":"                }"},{"type":"INSERT","lineNumber":814,"content":"            }"},{"type":"INSERT","lineNumber":815,"content":"        }"},{"type":"INSERT","lineNumber":816,"content":"        "},{"type":"INSERT","lineNumber":817,"content":"        return landmarkIds.toList()"},{"type":"INSERT","lineNumber":818,"content":"    }"},{"type":"INSERT","lineNumber":819,"content":""},{"type":"INSERT","lineNumber":820,"content":"    /**"},{"type":"INSERT","lineNumber":821,"content":"     * Fehlende Methoden für Navigation.kt"},{"type":"INSERT","lineNumber":822,"content":"     */"},{"type":"INSERT","lineNumber":823,"content":"    fun enableStorageSystemImmediately(context: Context) {"},{"type":"INSERT","lineNumber":824,"content":"        Log.d(TAG, \"enableStorageSystemImmediately called (stub)\")"},{"type":"INSERT","lineNumber":825,"content":"        // Stub implementation - verhindert Crashes"},{"type":"INSERT","lineNumber":826,"content":"    }"},{"type":"INSERT","lineNumber":827,"content":"    "},{"type":"INSERT","lineNumber":829,"content":"        Log.d(TAG, \"startFrameProcessing called (stub)\")"},{"type":"INSERT","lineNumber":830,"content":"        // Stub implementation - verhindert Crashes"},{"type":"INSERT","lineNumber":831,"content":"    }"},{"type":"INSERT","lineNumber":833,"content":"    fun getCurrentStartPoint(): String {"},{"type":"INSERT","lineNumber":834,"content":"        Log.d(TAG, \"getCurrentStartPoint called (stub)\")"},{"type":"INSERT","lineNumber":835,"content":"        return \"Büro Prof. Dr. Ludwig (PT 3.0.84C)\""},{"type":"INSERT","lineNumber":836,"content":"    }"},{"type":"INSERT","lineNumber":837,"content":"    "},{"type":"INSERT","lineNumber":838,"content":"    fun getCurrentEndPoint(): String {"},{"type":"INSERT","lineNumber":839,"content":"        Log.d(TAG, \"getCurrentEndPoint called (stub)\")"},{"type":"INSERT","lineNumber":840,"content":"        return \"Haupteingang\""},{"type":"INSERT","lineNumber":841,"content":"    }"},{"type":"INSERT","lineNumber":842,"content":"    "},{"type":"INSERT","lineNumber":843,"content":"    fun setCurrentNavigationStep(step: Int) {"},{"type":"INSERT","lineNumber":844,"content":"        Log.d(TAG, \"setCurrentNavigationStep called (stub): $step\")"},{"type":"INSERT","lineNumber":845,"content":"        _currentNavigationStep.value = step"},{"type":"INSERT","lineNumber":846,"content":"    }"},{"type":"INSERT","lineNumber":847,"content":"    "},{"type":"INSERT","lineNumber":848,"content":"    fun getCurrentStep(): NavigationStep? {"},{"type":"INSERT","lineNumber":849,"content":"        Log.d(TAG, \"getCurrentStep called (stub)\")"},{"type":"INSERT","lineNumber":850,"content":"        val steps = getCurrentNavigationSteps()"},{"type":"INSERT","lineNumber":851,"content":"        val currentStepNumber = _currentNavigationStep.value"},{"type":"INSERT","lineNumber":852,"content":"        return steps.find { it.stepNumber == currentStepNumber }"},{"type":"INSERT","lineNumber":853,"content":"    }"},{"type":"INSERT","lineNumber":854,"content":"    "},{"type":"DELETE","lineNumber":831,"oldContent":"        "},{"type":"INSERT","lineNumber":856,"content":""},{"type":"INSERT","lineNumber":857,"content":"    /**"},{"type":"INSERT","lineNumber":858,"content":"     * Cleanup beim Destroy"},{"type":"INSERT","lineNumber":859,"content":"     */"},{"type":"INSERT","lineNumber":860,"content":"    override fun onCleared() {"},{"type":"INSERT","lineNumber":861,"content":"        super.onCleared()"},{"type":"DELETE","lineNumber":833,"oldContent":"    fun getRequiredLandmarkIds(): List<String> {"},{"type":"DELETE","lineNumber":834,"oldContent":"    }"},{"type":"DELETE","lineNumber":835,"oldContent":"        return emptyList()"},{"type":"DELETE","lineNumber":836,"oldContent":"        Log.d(TAG, \"getCurrentlyLoadedLandmarkIds called (stub)\")"},{"type":"INSERT","lineNumber":863,"content":"            try {"},{"type":"INSERT","lineNumber":864,"content":"                // Storage-Manager bereinigt sich selbst automatisch"},{"type":"INSERT","lineNumber":865,"content":"                storageManager?.logPerformanceSummary()"},{"type":"INSERT","lineNumber":866,"content":"                "},{"type":"INSERT","lineNumber":867,"content":"                // Bereinige Feature-Storage Cache"},{"type":"INSERT","lineNumber":868,"content":"                landmarkFeatureStorage?.cleanup()"},{"type":"INSERT","lineNumber":869,"content":"                "},{"type":"INSERT","lineNumber":870,"content":"                Log.i(TAG, \"RouteViewModel bereinigt\")"},{"type":"INSERT","lineNumber":871,"content":"            } catch (e: Exception) {"},{"type":"INSERT","lineNumber":872,"content":"                Log.e(TAG, \"Fehler beim Bereinigen: ${e.message}\")"},{"type":"DELETE","lineNumber":838,"oldContent":"    fun getCurrentlyLoadedLandmarkIds(): List<String> {"},{"type":"INSERT","lineNumber":875,"content":"    }"},{"type":"INSERT","lineNumber":876,"content":"}"}]},{"timestamp":1754345822552,"changes":[{"type":"DELETE","lineNumber":44,"oldContent":"            convertToNavigationRoute(routeData)"},{"type":"DELETE","lineNumber":45,"oldContent":""},{"type":"INSERT","lineNumber":44,"content":"    // State für geladene Route aus JSON"},{"type":"INSERT","lineNumber":45,"content":"    private val _currentRoute = MutableStateFlow<RouteData?>(null)"},{"type":"DELETE","lineNumber":61,"oldContent":"                    stepNumber = stepNumber,"},{"type":"DELETE","lineNumber":62,"oldContent":"                    instruction = routePart.instructionDe,"},{"type":"INSERT","lineNumber":61,"content":""},{"type":"INSERT","lineNumber":62,"content":"    /**"},{"type":"DELETE","lineNumber":64,"oldContent":"     * Lädt die Route aus der JSON-Datei"},{"type":"DELETE","lineNumber":66,"oldContent":"     */"},{"type":"DELETE","lineNumber":68,"oldContent":"    fun loadNavigationRoute(context: Context): NavigationRoute? {"},{"type":"DELETE","lineNumber":70,"oldContent":"        return try {"},{"type":"DELETE","lineNumber":72,"oldContent":"            Log.i(TAG, \"Lade Route aus JSON-Datei...\")"},{"type":"DELETE","lineNumber":74,"oldContent":"            "},{"type":"DELETE","lineNumber":76,"oldContent":"            // Initialisiere RouteRepository falls noch nicht geschehen"},{"type":"DELETE","lineNumber":78,"oldContent":"            if (routeRepository == null) {"},{"type":"DELETE","lineNumber":80,"oldContent":"                routeRepository = RouteRepository(context)"},{"type":"DELETE","lineNumber":83,"oldContent":"            }"},{"type":"DELETE","lineNumber":85,"oldContent":"            "},{"type":"DELETE","lineNumber":86,"oldContent":"            // Lade Route aus JSON-Datei"},{"type":"DELETE","lineNumber":88,"oldContent":"            viewModelScope.launch {"},{"type":"DELETE","lineNumber":90,"oldContent":"                val routeData = routeRepository?.getRouteFromAssets(\"route.json\")"},{"type":"DELETE","lineNumber":92,"oldContent":"                _currentRoute.value = routeData"},{"type":"DELETE","lineNumber":94,"oldContent":"                "},{"type":"DELETE","lineNumber":96,"oldContent":"                if (routeData != null) {"},{"type":"DELETE","lineNumber":98,"oldContent":"                    Log.i(TAG, \"Route erfolgreich aus JSON geladen\")"},{"type":"DELETE","lineNumber":100,"oldContent":"                    // Konvertiere RouteData zu NavigationRoute für Feature-Mapping"},{"type":"DELETE","lineNumber":102,"oldContent":"                    val navigationRoute = convertToNavigationRoute(routeData)"},{"type":"DELETE","lineNumber":104,"oldContent":"                    Log.i(TAG, \"Route konvertiert: ${navigationRoute.steps.size} Schritte\")"},{"type":"DELETE","lineNumber":106,"oldContent":"                } else {"},{"type":"DELETE","lineNumber":108,"oldContent":"                    Log.w(TAG, \"Keine Route in JSON-Datei gefunden\")"},{"type":"DELETE","lineNumber":110,"oldContent":"                }"},{"type":"DELETE","lineNumber":112,"oldContent":"            }"},{"type":"DELETE","lineNumber":114,"oldContent":"            "},{"type":"DELETE","lineNumber":116,"oldContent":"            // Erstelle eine Standard-Route für sofortige Rückgabe"},{"type":"INSERT","lineNumber":91,"content":"     * Lädt die Route aus der JSON-Datei"},{"type":"INSERT","lineNumber":92,"content":"     */"},{"type":"INSERT","lineNumber":93,"content":"    fun loadNavigationRoute(context: Context): NavigationRoute? {"},{"type":"INSERT","lineNumber":94,"content":"        return try {"},{"type":"INSERT","lineNumber":95,"content":"            Log.i(TAG, \"Lade Route aus JSON-Datei...\")"},{"type":"INSERT","lineNumber":96,"content":"            "},{"type":"INSERT","lineNumber":97,"content":"            // Stelle sicher, dass die ViewModel initialisiert ist"},{"type":"INSERT","lineNumber":98,"content":"            initialize(context)"},{"type":"INSERT","lineNumber":99,"content":"            "},{"type":"INSERT","lineNumber":100,"content":"            // Lade Route aus JSON-Datei asynchron"},{"type":"INSERT","lineNumber":101,"content":"            viewModelScope.launch {"},{"type":"INSERT","lineNumber":102,"content":"                try {"},{"type":"INSERT","lineNumber":103,"content":"                    val routeData = routeRepository?.getRouteFromAssets(\"route.json\")"},{"type":"INSERT","lineNumber":104,"content":"                    _currentRoute.value = routeData"},{"type":"INSERT","lineNumber":105,"content":"                    "},{"type":"INSERT","lineNumber":106,"content":"                    if (routeData != null) {"},{"type":"INSERT","lineNumber":107,"content":"                        Log.i(TAG, \"Route erfolgreich aus JSON geladen\")"},{"type":"INSERT","lineNumber":108,"content":"                        // Konvertiere RouteData zu NavigationRoute für Feature-Mapping"},{"type":"INSERT","lineNumber":109,"content":"                        val navigationRoute = convertToNavigationRoute(routeData)"},{"type":"INSERT","lineNumber":110,"content":"                        Log.i(TAG, \"Route konvertiert: ${navigationRoute.steps.size} Schritte\")"},{"type":"INSERT","lineNumber":111,"content":"                        "},{"type":"INSERT","lineNumber":112,"content":"                        // Logge Route-Details"},{"type":"INSERT","lineNumber":113,"content":"                        logNavigationRoute(navigationRoute)"},{"type":"INSERT","lineNumber":114,"content":"                        "},{"type":"INSERT","lineNumber":115,"content":"                        // Setze ersten Schritt als aktiv"},{"type":"INSERT","lineNumber":116,"content":"                        _currentNavigationStep.value = 1"},{"type":"INSERT","lineNumber":117,"content":"                        "},{"type":"INSERT","lineNumber":118,"content":"                        // Aktiviere Feature-Mapping automatisch wenn Route geladen"},{"type":"INSERT","lineNumber":119,"content":"                        _isFeatureMappingEnabled.value = true"},{"type":"INSERT","lineNumber":120,"content":"                        "},{"type":"INSERT","lineNumber":121,"content":"                    } else {"},{"type":"INSERT","lineNumber":122,"content":"                        Log.w(TAG, \"Keine Route in JSON-Datei gefunden\")"},{"type":"INSERT","lineNumber":123,"content":"                    }"},{"type":"INSERT","lineNumber":124,"content":"                } catch (e: Exception) {"},{"type":"INSERT","lineNumber":125,"content":"                    Log.e(TAG, \"Fehler beim Laden der Route in Coroutine: ${e.message}\")"},{"type":"INSERT","lineNumber":126,"content":"                }"},{"type":"INSERT","lineNumber":127,"content":"            }"},{"type":"INSERT","lineNumber":128,"content":"            "},{"type":"INSERT","lineNumber":129,"content":"            // Erstelle eine Standard-Route für sofortige Rückgabe"},{"type":"INSERT","lineNumber":134,"content":"                totalLength = 0.0,"},{"type":"INSERT","lineNumber":159,"content":"            Log.d(TAG, \"  - Estimated Time: ${step.estimatedTime}s\")"},{"type":"DELETE","lineNumber":148,"oldContent":"                totalLength = 0.0,"},{"type":"INSERT","lineNumber":164,"content":"    }"},{"type":"INSERT","lineNumber":167,"content":"     * Konvertiert RouteData zu NavigationRoute"},{"type":"INSERT","lineNumber":171,"content":"        var stepNumber = 1"},{"type":"DELETE","lineNumber":171,"oldContent":"            Log.d(TAG, \"  - Estimated Time: ${step.estimatedTime}s\")"},{"type":"INSERT","lineNumber":187,"content":"                        floor = floor,"},{"type":"DELETE","lineNumber":176,"oldContent":"    }"},{"type":"DELETE","lineNumber":178,"oldContent":"     * Konvertiert RouteData zu NavigationRoute"},{"type":"INSERT","lineNumber":193,"content":"            }"},{"type":"INSERT","lineNumber":194,"content":"        }"},{"type":"DELETE","lineNumber":183,"oldContent":"        var stepNumber = 1"},{"type":"INSERT","lineNumber":205,"content":"    "},{"type":"DELETE","lineNumber":191,"oldContent":"                        val landmarkName = landmark.nameDe ?: landmark.nameEn ?: landmark.id"},{"type":"DELETE","lineNumber":192,"oldContent":"                        // Verwende die Landmark-ID genau wie sie in der JSON steht (z.B. \"PT-1-566\")"},{"type":"DELETE","lineNumber":193,"oldContent":"                    routePart.landmarks.forEach { landmark ->"},{"type":"INSERT","lineNumber":207,"content":"    "},{"type":"INSERT","lineNumber":208,"content":"    /**"},{"type":"INSERT","lineNumber":209,"content":"     * Initialisiert das neue Storage-System und Feature-Matching (ersetzt Feature-Mapping)"},{"type":"DELETE","lineNumber":195,"oldContent":"                pathItem.routeParts.forEach { routePart ->"},{"type":"DELETE","lineNumber":196,"oldContent":"            // Sammle alle Landmark-IDs aus der aktuellen Route"},{"type":"INSERT","lineNumber":211,"content":"    fun initializeStorage(context: Context) {"},{"type":"DELETE","lineNumber":198,"oldContent":"                        floor = floor,"},{"type":"DELETE","lineNumber":199,"oldContent":"                result is SaveResult.Success"},{"type":"INSERT","lineNumber":213,"content":"            try {"},{"type":"INSERT","lineNumber":214,"content":"                Log.i(TAG, \"Initialisiere neues Storage-System und Feature-Matching...\")"},{"type":"INSERT","lineNumber":216,"content":"                // Neues Storage-System initialisieren"},{"type":"INSERT","lineNumber":217,"content":"                storageManager = ArWalkingStorageManager(context)"},{"type":"INSERT","lineNumber":218,"content":"                "},{"type":"DELETE","lineNumber":203,"oldContent":"            }"},{"type":"DELETE","lineNumber":205,"oldContent":"        }"},{"type":"INSERT","lineNumber":228,"content":"                }"},{"type":"DELETE","lineNumber":216,"oldContent":"    "},{"type":"DELETE","lineNumber":225,"oldContent":"            try {"},{"type":"DELETE","lineNumber":227,"oldContent":"                Log.i(TAG, \"Initialisiere neues Storage-System und Feature-Matching...\")"},{"type":"DELETE","lineNumber":231,"oldContent":"                storageManager = ArWalkingStorageManager(context)"},{"type":"INSERT","lineNumber":252,"content":"                // Feature-Mapping ist verfügbar wenn Landmarks geladen wurden"},{"type":"DELETE","lineNumber":242,"oldContent":"                }"},{"type":"INSERT","lineNumber":262,"content":"                Log.i(TAG, \"Feature-Storage: ${storageStats.landmarkCount} Landmarks, ${\"%.1f\".format(storageStats.getTotalSizeMB())} MB\")"},{"type":"INSERT","lineNumber":263,"content":"                "},{"type":"INSERT","lineNumber":264,"content":"            } catch (e: Exception) {"},{"type":"INSERT","lineNumber":268,"content":"        }"},{"type":"INSERT","lineNumber":269,"content":"    }"},{"type":"INSERT","lineNumber":270,"content":"    "},{"type":"INSERT","lineNumber":271,"content":"    /**"},{"type":"INSERT","lineNumber":273,"content":"     */"},{"type":"DELETE","lineNumber":259,"oldContent":"                // Feature-Mapping ist verfügbar wenn Landmarks geladen wurden"},{"type":"DELETE","lineNumber":270,"oldContent":"                Log.i(TAG, \"Feature-Storage: ${storageStats.landmarkCount} Landmarks, ${\"%.1f\".format(storageStats.getTotalSizeMB())} MB\")"},{"type":"DELETE","lineNumber":272,"oldContent":"                "},{"type":"DELETE","lineNumber":274,"oldContent":"            } catch (e: Exception) {"},{"type":"DELETE","lineNumber":279,"oldContent":"        }"},{"type":"DELETE","lineNumber":281,"oldContent":"    }"},{"type":"DELETE","lineNumber":283,"oldContent":"    "},{"type":"DELETE","lineNumber":285,"oldContent":"    /**"},{"type":"DELETE","lineNumber":288,"oldContent":"     */"},{"type":"DELETE","lineNumber":291,"oldContent":"    }"},{"type":"INSERT","lineNumber":303,"content":"     */"},{"type":"INSERT","lineNumber":373,"content":"                        true"},{"type":"INSERT","lineNumber":381,"content":"                Log.w(TAG, \"Storage-Manager nicht verfügbar\")"},{"type":"DELETE","lineNumber":387,"oldContent":"                        true"},{"type":"DELETE","lineNumber":396,"oldContent":"                Log.w(TAG, \"Storage-Manager nicht verfügbar\")"},{"type":"DELETE","lineNumber":448,"oldContent":""},{"type":"DELETE","lineNumber":449,"oldContent":"    "},{"type":"DELETE","lineNumber":450,"oldContent":"    }"},{"type":"DELETE","lineNumber":451,"oldContent":"        Log.d(TAG, \"getCurrentEndPoint called (stub)\")"},{"type":"DELETE","lineNumber":452,"oldContent":"    fun getCurrentEndPoint(): String {"},{"type":"DELETE","lineNumber":453,"oldContent":"    }"},{"type":"INSERT","lineNumber":460,"content":"                    val landmarks = storageManager!!.getAvailableProjectLandmarks()"},{"type":"INSERT","lineNumber":461,"content":"                    Log.i(TAG, \"Verfügbare Landmarks: ${landmarks.size}\")"},{"type":"INSERT","lineNumber":462,"content":"                    "},{"type":"INSERT","lineNumber":463,"content":"                    val status = storageManager!!.getStorageStatus()"},{"type":"INSERT","lineNumber":464,"content":"                    Log.i(TAG, \"Storage-Status: ${status.getHealthStatus()}\")"},{"type":"INSERT","lineNumber":465,"content":"                } else {"},{"type":"INSERT","lineNumber":466,"content":"                    Log.w(TAG, \"Storage-Manager nicht verfügbar\")"},{"type":"INSERT","lineNumber":467,"content":"                }"},{"type":"DELETE","lineNumber":457,"oldContent":"    fun startFrameProcessing() {"},{"type":"INSERT","lineNumber":471,"content":"            }"},{"type":"INSERT","lineNumber":472,"content":"        }"},{"type":"INSERT","lineNumber":476,"content":"    "},{"type":"INSERT","lineNumber":481,"content":"        val currentStep = _currentNavigationStep.value"},{"type":"DELETE","lineNumber":477,"oldContent":"                    Log.w(TAG, \"Storage-Manager nicht verfügbar\")"},{"type":"DELETE","lineNumber":478,"oldContent":"                }"},{"type":"INSERT","lineNumber":495,"content":"    }"},{"type":"DELETE","lineNumber":483,"oldContent":"            }"},{"type":"DELETE","lineNumber":489,"oldContent":"    "},{"type":"DELETE","lineNumber":494,"oldContent":"        val currentStep = _currentNavigationStep.value"},{"type":"INSERT","lineNumber":509,"content":"     */"},{"type":"DELETE","lineNumber":509,"oldContent":"    }"},{"type":"INSERT","lineNumber":535,"content":"    "},{"type":"DELETE","lineNumber":523,"oldContent":"     */"},{"type":"DELETE","lineNumber":550,"oldContent":"    "},{"type":"DELETE","lineNumber":568,"oldContent":"            }"},{"type":"INSERT","lineNumber":580,"content":"            } catch (e: Exception) {"},{"type":"INSERT","lineNumber":585,"content":"    "},{"type":"INSERT","lineNumber":588,"content":"     */"},{"type":"DELETE","lineNumber":591,"oldContent":"    "},{"type":"DELETE","lineNumber":592,"oldContent":"        }"},{"type":"DELETE","lineNumber":593,"oldContent":"     */"},{"type":"INSERT","lineNumber":605,"content":"            } catch (e: Exception) {"},{"type":"INSERT","lineNumber":606,"content":"                Log.e(TAG, \"Fehler beim Feature-Matching: ${e.message}\")"},{"type":"INSERT","lineNumber":607,"content":"                _currentMatches.value = emptyList()"},{"type":"INSERT","lineNumber":609,"content":"        }"},{"type":"INSERT","lineNumber":610,"content":"    }"},{"type":"INSERT","lineNumber":611,"content":"    "},{"type":"INSERT","lineNumber":612,"content":"    /**"},{"type":"DELETE","lineNumber":605,"oldContent":"            } catch (e: Exception) {"},{"type":"DELETE","lineNumber":607,"oldContent":"                Log.e(TAG, \"Fehler beim Feature-Matching: ${e.message}\")"},{"type":"DELETE","lineNumber":609,"oldContent":"                _currentMatches.value = emptyList()"},{"type":"DELETE","lineNumber":610,"oldContent":"            }"},{"type":"DELETE","lineNumber":612,"oldContent":"    }"},{"type":"DELETE","lineNumber":614,"oldContent":"    "},{"type":"DELETE","lineNumber":639,"oldContent":"    "},{"type":"DELETE","lineNumber":641,"oldContent":"    /**"},{"type":"DELETE","lineNumber":648,"oldContent":"     * Gibt einen benutzerfreundlichen Namen für eine Landmark-ID zurück"},{"type":"INSERT","lineNumber":659,"content":"    /**"},{"type":"INSERT","lineNumber":660,"content":"     * Gibt einen benutzerfreundlichen Namen für eine Landmark-ID zurück"},{"type":"DELETE","lineNumber":656,"oldContent":"        }"},{"type":"DELETE","lineNumber":663,"oldContent":"    fun getCurrentEndPoint(): String {"},{"type":"INSERT","lineNumber":673,"content":"    }"},{"type":"INSERT","lineNumber":674,"content":"    "},{"type":"DELETE","lineNumber":665,"oldContent":"            }"},{"type":"INSERT","lineNumber":684,"content":"        }"},{"type":"DELETE","lineNumber":676,"oldContent":"            // Sammle alle Landmark-IDs aus der aktuellen Route"},{"type":"DELETE","lineNumber":678,"oldContent":"            _currentRoute.value?.route?.path?.forEach { pathItem ->"},{"type":"DELETE","lineNumber":679,"oldContent":"                pathItem.routeParts.forEach { routePart ->"},{"type":"DELETE","lineNumber":683,"oldContent":"                        routeLandmarks.add("},{"type":"DELETE","lineNumber":685,"oldContent":"                            FeatureLandmark("},{"type":"DELETE","lineNumber":689,"oldContent":"                                imageUrl = \"\""},{"type":"INSERT","lineNumber":696,"content":"            viewModelScope.launch {"},{"type":"INSERT","lineNumber":697,"content":"                val simulatedMatches = generateSimulatedMatches(_currentRoute.value!!, step)"},{"type":"INSERT","lineNumber":698,"content":"                _currentMatches.value = simulatedMatches"},{"type":"INSERT","lineNumber":699,"content":"            }"},{"type":"INSERT","lineNumber":700,"content":"        }"},{"type":"INSERT","lineNumber":701,"content":"    }"},{"type":"INSERT","lineNumber":702,"content":"    "},{"type":"INSERT","lineNumber":703,"content":""},{"type":"INSERT","lineNumber":704,"content":"    "},{"type":"INSERT","lineNumber":705,"content":""},{"type":"INSERT","lineNumber":706,"content":"    "},{"type":"INSERT","lineNumber":707,"content":"    /**"},{"type":"INSERT","lineNumber":708,"content":"     * Gibt verfügbare Landmarks zurück - verwendet Landmark-IDs aus der Route"},{"type":"INSERT","lineNumber":709,"content":"     */"},{"type":"INSERT","lineNumber":710,"content":"    fun getAvailableLandmarks(): List<FeatureLandmark> {"},{"type":"INSERT","lineNumber":711,"content":"        return try {"},{"type":"INSERT","lineNumber":712,"content":"            val routeLandmarks = mutableListOf<FeatureLandmark>()"},{"type":"INSERT","lineNumber":713,"content":"            "},{"type":"INSERT","lineNumber":714,"content":"            // Sammle alle Landmark-IDs aus der aktuellen Route"},{"type":"INSERT","lineNumber":715,"content":"            _currentRoute.value?.route?.path?.forEach { pathItem ->"},{"type":"INSERT","lineNumber":716,"content":"                pathItem.routeParts.forEach { routePart ->"},{"type":"INSERT","lineNumber":717,"content":"                    routePart.landmarks?.forEach { landmark ->"},{"type":"INSERT","lineNumber":718,"content":"                        // landmark ist bereits ein String (Landmark-ID)"},{"type":"INSERT","lineNumber":719,"content":"                        routeLandmarks.add("},{"type":"INSERT","lineNumber":720,"content":"                            FeatureLandmark("},{"type":"INSERT","lineNumber":721,"content":"                                id = landmark, // String aus JSON"},{"type":"INSERT","lineNumber":722,"content":"                                name = landmark,"},{"type":"INSERT","lineNumber":723,"content":"                                description = \"Landmark\","},{"type":"INSERT","lineNumber":724,"content":"                                position = Position(0.0, 0.0, 0.0),"},{"type":"INSERT","lineNumber":725,"content":"                                imageUrl = \"\""},{"type":"DELETE","lineNumber":693,"oldContent":"            viewModelScope.launch {"},{"type":"DELETE","lineNumber":695,"oldContent":"                val simulatedMatches = generateSimulatedMatches(_currentRoute.value!!, step)"},{"type":"INSERT","lineNumber":729,"content":"                }"},{"type":"INSERT","lineNumber":730,"content":"            }"},{"type":"DELETE","lineNumber":697,"oldContent":"                _currentMatches.value = simulatedMatches"},{"type":"DELETE","lineNumber":700,"oldContent":"        }"},{"type":"DELETE","lineNumber":703,"oldContent":"    }"},{"type":"DELETE","lineNumber":705,"oldContent":"    "},{"type":"DELETE","lineNumber":708,"oldContent":""},{"type":"DELETE","lineNumber":710,"oldContent":"    "},{"type":"INSERT","lineNumber":740,"content":"                                id = landmarkInfo.id, // Exakte ID aus Dateiname"},{"type":"DELETE","lineNumber":712,"oldContent":""},{"type":"DELETE","lineNumber":715,"oldContent":"    "},{"type":"DELETE","lineNumber":718,"oldContent":"    /**"},{"type":"DELETE","lineNumber":721,"oldContent":"     * Gibt verfügbare Landmarks zurück - verwendet Landmark-IDs aus der Route"},{"type":"DELETE","lineNumber":722,"oldContent":"     */"},{"type":"INSERT","lineNumber":748,"content":"                }"},{"type":"DELETE","lineNumber":724,"oldContent":"    fun getAvailableLandmarks(): List<FeatureLandmark> {"},{"type":"DELETE","lineNumber":726,"oldContent":"        return try {"},{"type":"DELETE","lineNumber":729,"oldContent":"            val routeLandmarks = mutableListOf<FeatureLandmark>()"},{"type":"DELETE","lineNumber":733,"oldContent":"            "},{"type":"DELETE","lineNumber":736,"oldContent":"                    routePart.landmarks?.forEach { landmark ->"},{"type":"DELETE","lineNumber":739,"oldContent":"                        // landmark ist bereits ein String (Landmark-ID)"},{"type":"DELETE","lineNumber":740,"oldContent":"                                id = landmark, // String aus JSON"},{"type":"DELETE","lineNumber":741,"oldContent":"                                name = landmark,"},{"type":"INSERT","lineNumber":760,"content":"        }"},{"type":"INSERT","lineNumber":761,"content":"    }"},{"type":"INSERT","lineNumber":762,"content":"    "},{"type":"INSERT","lineNumber":763,"content":"    /**"},{"type":"INSERT","lineNumber":764,"content":"     * Gibt die aktuellen Navigationsschritte zurück"},{"type":"INSERT","lineNumber":765,"content":"     */"},{"type":"DELETE","lineNumber":744,"oldContent":"                                description = \"Landmark\","},{"type":"DELETE","lineNumber":747,"oldContent":"                                position = Position(0.0, 0.0, 0.0),"},{"type":"DELETE","lineNumber":749,"oldContent":"                }"},{"type":"DELETE","lineNumber":750,"oldContent":"            }"},{"type":"INSERT","lineNumber":771,"content":"            } else {"},{"type":"INSERT","lineNumber":773,"content":"            }"},{"type":"INSERT","lineNumber":777,"content":"        }"},{"type":"INSERT","lineNumber":778,"content":"    }"},{"type":"DELETE","lineNumber":757,"oldContent":"                                id = landmarkInfo.id, // Exakte ID aus Dateiname"},{"type":"DELETE","lineNumber":758,"oldContent":"                }"},{"type":"DELETE","lineNumber":759,"oldContent":"        viewModelScope.launch {"},{"type":"INSERT","lineNumber":781,"content":""},{"type":"INSERT","lineNumber":782,"content":"    /**"},{"type":"INSERT","lineNumber":783,"content":"     * Lädt Landmarks neu für eine spezifische Route (vereinfacht)"},{"type":"INSERT","lineNumber":784,"content":"     */"},{"type":"INSERT","lineNumber":785,"content":"    private suspend fun reloadLandmarksForRoute(route: com.example.arwalking.data.Route) {"},{"type":"INSERT","lineNumber":786,"content":"        try {"},{"type":"INSERT","lineNumber":787,"content":"            Log.d(TAG, \"reloadLandmarksForRoute called (stub)\")"},{"type":"INSERT","lineNumber":788,"content":"            // Stub implementation - verhindert Crashes"},{"type":"INSERT","lineNumber":789,"content":"        } catch (e: Exception) {"},{"type":"INSERT","lineNumber":790,"content":"            Log.e(TAG, \"Fehler beim Neuladen der Route-Landmarks: ${e.message}\")"},{"type":"INSERT","lineNumber":791,"content":"        }"},{"type":"INSERT","lineNumber":792,"content":"    }"},{"type":"DELETE","lineNumber":766,"oldContent":"    }"},{"type":"DELETE","lineNumber":768,"oldContent":"            }"},{"type":"DELETE","lineNumber":773,"oldContent":"    /**"},{"type":"DELETE","lineNumber":774,"oldContent":"     * Gibt die aktuellen Navigationsschritte zurück"},{"type":"INSERT","lineNumber":804,"content":"    }"},{"type":"DELETE","lineNumber":776,"oldContent":"                "},{"type":"DELETE","lineNumber":778,"oldContent":"            } else {"},{"type":"DELETE","lineNumber":782,"oldContent":"            }"},{"type":"DELETE","lineNumber":785,"oldContent":"    /**"},{"type":"DELETE","lineNumber":788,"oldContent":"    }"},{"type":"DELETE","lineNumber":792,"oldContent":""},{"type":"DELETE","lineNumber":795,"oldContent":"    /**"},{"type":"DELETE","lineNumber":798,"oldContent":"     * Lädt Landmarks neu für eine spezifische Route (vereinfacht)"},{"type":"DELETE","lineNumber":801,"oldContent":"     */"},{"type":"DELETE","lineNumber":804,"oldContent":"    private suspend fun reloadLandmarksForRoute(route: com.example.arwalking.data.Route) {"},{"type":"DELETE","lineNumber":807,"oldContent":"        try {"},{"type":"DELETE","lineNumber":810,"oldContent":"            Log.d(TAG, \"reloadLandmarksForRoute called (stub)\")"},{"type":"DELETE","lineNumber":813,"oldContent":"            // Stub implementation - verhindert Crashes"},{"type":"DELETE","lineNumber":816,"oldContent":"        } catch (e: Exception) {"},{"type":"DELETE","lineNumber":819,"oldContent":"            Log.e(TAG, \"Fehler beim Neuladen der Route-Landmarks: ${e.message}\")"},{"type":"DELETE","lineNumber":822,"oldContent":"        }"},{"type":"DELETE","lineNumber":825,"oldContent":"        return emptyList()"},{"type":"DELETE","lineNumber":827,"oldContent":"        Log.d(TAG, \"getCurrentlyLoadedLandmarkIds called (stub)\")"},{"type":"DELETE","lineNumber":828,"oldContent":"    fun getCurrentlyLoadedLandmarkIds(): List<String> {"},{"type":"INSERT","lineNumber":840,"content":"    fun startFrameProcessing() {"},{"type":"DELETE","lineNumber":830,"oldContent":"        }"},{"type":"DELETE","lineNumber":832,"oldContent":"            }"},{"type":"DELETE","lineNumber":834,"oldContent":"}"},{"type":"INSERT","lineNumber":844,"content":"    "},{"type":"DELETE","lineNumber":840,"oldContent":"                "},{"type":"DELETE","lineNumber":843,"oldContent":"                // Bereinige Feature-Storage Cache"},{"type":"DELETE","lineNumber":845,"oldContent":"                "},{"type":"DELETE","lineNumber":847,"oldContent":"                storageManager?.logPerformanceSummary()"},{"type":"DELETE","lineNumber":849,"oldContent":"                // Storage-Manager bereinigt sich selbst automatisch"},{"type":"DELETE","lineNumber":851,"oldContent":"            try {"},{"type":"DELETE","lineNumber":853,"oldContent":"        super.onCleared()"},{"type":"DELETE","lineNumber":855,"oldContent":"    override fun onCleared() {"},{"type":"DELETE","lineNumber":857,"oldContent":"     */"},{"type":"DELETE","lineNumber":859,"oldContent":"     * Cleanup beim Destroy"},{"type":"DELETE","lineNumber":861,"oldContent":"    /**"},{"type":"DELETE","lineNumber":863,"oldContent":""},{"type":"DELETE","lineNumber":865,"oldContent":"    "},{"type":"DELETE","lineNumber":867,"oldContent":"    }"},{"type":"INSERT","lineNumber":865,"content":"    }"},{"type":"INSERT","lineNumber":866,"content":"    "},{"type":"INSERT","lineNumber":867,"content":""},{"type":"INSERT","lineNumber":868,"content":""},{"type":"INSERT","lineNumber":869,"content":"    /**"},{"type":"INSERT","lineNumber":870,"content":"     * Cleanup beim Destroy"},{"type":"INSERT","lineNumber":871,"content":"     */"},{"type":"INSERT","lineNumber":872,"content":"    override fun onCleared() {"},{"type":"INSERT","lineNumber":873,"content":"        super.onCleared()"},{"type":"INSERT","lineNumber":874,"content":"        viewModelScope.launch {"},{"type":"INSERT","lineNumber":875,"content":"            try {"},{"type":"INSERT","lineNumber":876,"content":"                // Storage-Manager bereinigt sich selbst automatisch"},{"type":"INSERT","lineNumber":877,"content":"                storageManager?.logPerformanceSummary()"},{"type":"INSERT","lineNumber":878,"content":"                "},{"type":"INSERT","lineNumber":879,"content":"                // Bereinige Feature-Storage Cache"},{"type":"INSERT","lineNumber":880,"content":"                landmarkFeatureStorage?.cleanup()"},{"type":"INSERT","lineNumber":881,"content":"                "},{"type":"INSERT","lineNumber":882,"content":"                Log.i(TAG, \"RouteViewModel bereinigt\")"},{"type":"INSERT","lineNumber":883,"content":"            } catch (e: Exception) {"},{"type":"INSERT","lineNumber":884,"content":"                Log.e(TAG, \"Fehler beim Bereinigen: ${e.message}\")"},{"type":"INSERT","lineNumber":885,"content":"            }"},{"type":"INSERT","lineNumber":886,"content":"        }"},{"type":"INSERT","lineNumber":887,"content":"    }"},{"type":"INSERT","lineNumber":888,"content":"}"}]},{"timestamp":1754345837944,"changes":[{"type":"MODIFY","lineNumber":16,"content":"import com.example.arwalking.storage.CleanupSummary","oldContent":"    private val TAG = \"RouteViewModel\""},{"type":"DELETE","lineNumber":77,"oldContent":"     * Lädt die Route aus der JSON-Datei"},{"type":"INSERT","lineNumber":78,"content":"                Log.d(TAG, \"StorageManager initialisiert\")"},{"type":"INSERT","lineNumber":79,"content":"            }"},{"type":"INSERT","lineNumber":80,"content":"            "},{"type":"INSERT","lineNumber":81,"content":"            // Initialisiere Feature-Matching-Systeme"},{"type":"INSERT","lineNumber":82,"content":"            initializeFeatureMatchingSystems(context)"},{"type":"INSERT","lineNumber":83,"content":"            "},{"type":"INSERT","lineNumber":84,"content":"            Log.i(TAG, \"RouteViewModel erfolgreich initialisiert\")"},{"type":"INSERT","lineNumber":85,"content":"        } catch (e: Exception) {"},{"type":"INSERT","lineNumber":86,"content":"            Log.e(TAG, \"Fehler bei der Initialisierung: ${e.message}\")"},{"type":"INSERT","lineNumber":87,"content":"        }"},{"type":"INSERT","lineNumber":88,"content":"    }"},{"type":"INSERT","lineNumber":89,"content":"    "},{"type":"INSERT","lineNumber":90,"content":"    /**"},{"type":"INSERT","lineNumber":91,"content":"     * Initialisiert die Feature-Matching-Systeme"},{"type":"INSERT","lineNumber":93,"content":"    private fun initializeFeatureMatchingSystems(context: Context) {"},{"type":"INSERT","lineNumber":94,"content":"        try {"},{"type":"INSERT","lineNumber":95,"content":"            Log.d(TAG, \"Initialisiere Feature-Matching-Systeme...\")"},{"type":"INSERT","lineNumber":96,"content":"            "},{"type":"INSERT","lineNumber":97,"content":"            // Initialisiere Feature-Matching-Engine"},{"type":"INSERT","lineNumber":98,"content":"            if (featureMatchingEngine == null) {"},{"type":"INSERT","lineNumber":99,"content":"                featureMatchingEngine = FeatureMatchingEngine()"},{"type":"INSERT","lineNumber":100,"content":"                Log.d(TAG, \"FeatureMatchingEngine initialisiert\")"},{"type":"INSERT","lineNumber":101,"content":"            }"},{"type":"INSERT","lineNumber":102,"content":"            "},{"type":"INSERT","lineNumber":103,"content":"            // Initialisiere Landmark-Feature-Storage"},{"type":"INSERT","lineNumber":104,"content":"            if (landmarkFeatureStorage == null) {"},{"type":"INSERT","lineNumber":105,"content":"                landmarkFeatureStorage = LandmarkFeatureStorage(context)"},{"type":"INSERT","lineNumber":106,"content":"                Log.d(TAG, \"LandmarkFeatureStorage initialisiert\")"},{"type":"INSERT","lineNumber":107,"content":"            }"},{"type":"INSERT","lineNumber":108,"content":"            "},{"type":"INSERT","lineNumber":109,"content":"            // Initialisiere AR-Tracking-System"},{"type":"INSERT","lineNumber":110,"content":"            if (arTrackingSystem == null) {"},{"type":"INSERT","lineNumber":111,"content":"                arTrackingSystem = ARTrackingSystem()"},{"type":"INSERT","lineNumber":112,"content":"                Log.d(TAG, \"ARTrackingSystem initialisiert\")"},{"type":"INSERT","lineNumber":113,"content":"            }"},{"type":"INSERT","lineNumber":114,"content":"            "},{"type":"INSERT","lineNumber":115,"content":"            Log.d(TAG, \"Feature-Matching-Systeme erfolgreich initialisiert\")"},{"type":"INSERT","lineNumber":116,"content":"        } catch (e: Exception) {"},{"type":"INSERT","lineNumber":117,"content":"            Log.e(TAG, \"Fehler bei der Initialisierung der Feature-Matching-Systeme: ${e.message}\")"},{"type":"INSERT","lineNumber":118,"content":"        }"},{"type":"INSERT","lineNumber":119,"content":"    }"},{"type":"INSERT","lineNumber":120,"content":""},{"type":"INSERT","lineNumber":121,"content":"    /**"},{"type":"INSERT","lineNumber":122,"content":"     * Lädt die Route aus der JSON-Datei"},{"type":"INSERT","lineNumber":123,"content":"     */"},{"type":"DELETE","lineNumber":81,"oldContent":"                Log.d(TAG, \"StorageManager initialisiert\")"},{"type":"DELETE","lineNumber":84,"oldContent":"            }"},{"type":"DELETE","lineNumber":87,"oldContent":"            "},{"type":"DELETE","lineNumber":90,"oldContent":"            // Initialisiere Feature-Matching-Systeme"},{"type":"DELETE","lineNumber":93,"oldContent":"            initializeFeatureMatchingSystems(context)"},{"type":"DELETE","lineNumber":96,"oldContent":"            "},{"type":"DELETE","lineNumber":99,"oldContent":"            Log.i(TAG, \"RouteViewModel erfolgreich initialisiert\")"},{"type":"DELETE","lineNumber":102,"oldContent":"        } catch (e: Exception) {"},{"type":"DELETE","lineNumber":105,"oldContent":"            Log.e(TAG, \"Fehler bei der Initialisierung: ${e.message}\")"},{"type":"DELETE","lineNumber":108,"oldContent":"        }"},{"type":"DELETE","lineNumber":111,"oldContent":"    }"},{"type":"DELETE","lineNumber":114,"oldContent":""},{"type":"DELETE","lineNumber":117,"oldContent":"    /**"},{"type":"DELETE","lineNumber":119,"oldContent":"            NavigationRoute("},{"type":"DELETE","lineNumber":121,"oldContent":"                id = \"default_route\","},{"type":"DELETE","lineNumber":123,"oldContent":"                name = \"Standard Route\","},{"type":"DELETE","lineNumber":125,"oldContent":"                description = \"Lade Route...\","},{"type":"DELETE","lineNumber":127,"oldContent":"                steps = emptyList()"},{"type":"DELETE","lineNumber":129,"oldContent":"            )"},{"type":"DELETE","lineNumber":131,"oldContent":"            "},{"type":"DELETE","lineNumber":133,"oldContent":"        } catch (e: Exception) {"},{"type":"DELETE","lineNumber":135,"oldContent":"            Log.e(TAG, \"Fehler beim Laden der Route: ${e.message}\")"},{"type":"DELETE","lineNumber":137,"oldContent":"            null"},{"type":"DELETE","lineNumber":139,"oldContent":"        }"},{"type":"INSERT","lineNumber":161,"content":"            NavigationRoute("},{"type":"INSERT","lineNumber":162,"content":"                id = \"default_route\","},{"type":"INSERT","lineNumber":163,"content":"                name = \"Standard Route\","},{"type":"INSERT","lineNumber":164,"content":"                description = \"Lade Route...\","},{"type":"INSERT","lineNumber":165,"content":"                totalLength = 0.0,"},{"type":"INSERT","lineNumber":166,"content":"                steps = emptyList()"},{"type":"INSERT","lineNumber":167,"content":"            )"},{"type":"INSERT","lineNumber":168,"content":"            "},{"type":"INSERT","lineNumber":169,"content":"        } catch (e: Exception) {"},{"type":"INSERT","lineNumber":170,"content":"            Log.e(TAG, \"Fehler beim Laden der Route: ${e.message}\")"},{"type":"INSERT","lineNumber":171,"content":"            null"},{"type":"INSERT","lineNumber":172,"content":"        }"},{"type":"DELETE","lineNumber":146,"oldContent":"                totalLength = 0.0,"},{"type":"INSERT","lineNumber":190,"content":"            Log.d(TAG, \"  - Estimated Time: ${step.estimatedTime}s\")"},{"type":"INSERT","lineNumber":195,"content":"    }"},{"type":"INSERT","lineNumber":198,"content":"     * Konvertiert RouteData zu NavigationRoute"},{"type":"INSERT","lineNumber":202,"content":"        var stepNumber = 1"},{"type":"DELETE","lineNumber":171,"oldContent":"            Log.d(TAG, \"  - Estimated Time: ${step.estimatedTime}s\")"},{"type":"DELETE","lineNumber":177,"oldContent":"    }"},{"type":"DELETE","lineNumber":181,"oldContent":"     * Konvertiert RouteData zu NavigationRoute"},{"type":"DELETE","lineNumber":186,"oldContent":"        var stepNumber = 1"},{"type":"INSERT","lineNumber":218,"content":"                        floor = floor,"},{"type":"INSERT","lineNumber":224,"content":"            }"},{"type":"INSERT","lineNumber":225,"content":"        }"},{"type":"DELETE","lineNumber":199,"oldContent":"                        floor = floor,"},{"type":"INSERT","lineNumber":236,"content":"    "},{"type":"DELETE","lineNumber":204,"oldContent":"            }"},{"type":"DELETE","lineNumber":205,"oldContent":"        }"},{"type":"INSERT","lineNumber":238,"content":"    "},{"type":"INSERT","lineNumber":239,"content":"    /**"},{"type":"INSERT","lineNumber":240,"content":"     * Initialisiert das neue Storage-System und Feature-Matching (ersetzt Feature-Mapping)"},{"type":"DELETE","lineNumber":207,"oldContent":"                Log.w(TAG, \"Storage-Manager nicht verfügbar\")"},{"type":"INSERT","lineNumber":242,"content":"    fun initializeStorage(context: Context) {"},{"type":"INSERT","lineNumber":243,"content":"        viewModelScope.launch {"},{"type":"INSERT","lineNumber":244,"content":"            try {"},{"type":"INSERT","lineNumber":245,"content":"                Log.i(TAG, \"Initialisiere neues Storage-System und Feature-Matching...\")"},{"type":"INSERT","lineNumber":247,"content":"                // Neues Storage-System initialisieren"},{"type":"INSERT","lineNumber":248,"content":"                storageManager = ArWalkingStorageManager(context)"},{"type":"INSERT","lineNumber":249,"content":"                "},{"type":"DELETE","lineNumber":212,"oldContent":"    "},{"type":"DELETE","lineNumber":214,"oldContent":"    "},{"type":"DELETE","lineNumber":216,"oldContent":"    /**"},{"type":"DELETE","lineNumber":218,"oldContent":"     * Initialisiert das neue Storage-System und Feature-Matching (ersetzt Feature-Mapping)"},{"type":"DELETE","lineNumber":221,"oldContent":"    fun initializeStorage(context: Context) {"},{"type":"INSERT","lineNumber":259,"content":"                }"},{"type":"DELETE","lineNumber":224,"oldContent":"            try {"},{"type":"DELETE","lineNumber":226,"oldContent":"                Log.i(TAG, \"Initialisiere neues Storage-System und Feature-Matching...\")"},{"type":"DELETE","lineNumber":229,"oldContent":"                // Neues Storage-System initialisieren"},{"type":"DELETE","lineNumber":230,"oldContent":"                storageManager = ArWalkingStorageManager(context)"},{"type":"DELETE","lineNumber":232,"oldContent":"                "},{"type":"DELETE","lineNumber":242,"oldContent":"                }"},{"type":"INSERT","lineNumber":283,"content":"                // Feature-Mapping ist verfügbar wenn Landmarks geladen wurden"},{"type":"DELETE","lineNumber":261,"oldContent":"                storageManager?.logPerformanceSummary()"},{"type":"DELETE","lineNumber":262,"oldContent":"                // Storage-Manager bereinigt sich selbst automatisch"},{"type":"DELETE","lineNumber":263,"oldContent":"            try {"},{"type":"DELETE","lineNumber":264,"oldContent":"                // Feature-Mapping ist verfügbar wenn Landmarks geladen wurden"},{"type":"INSERT","lineNumber":293,"content":"                Log.i(TAG, \"Feature-Storage: ${storageStats.landmarkCount} Landmarks, ${\"%.1f\".format(storageStats.getTotalSizeMB())} MB\")"},{"type":"INSERT","lineNumber":294,"content":"                "},{"type":"INSERT","lineNumber":295,"content":"            } catch (e: Exception) {"},{"type":"INSERT","lineNumber":296,"content":"                Log.e(TAG, \"Fehler bei Storage-Initialisierung: ${e.message}\")"},{"type":"INSERT","lineNumber":297,"content":"                _isFeatureMappingEnabled.value = false"},{"type":"INSERT","lineNumber":298,"content":"            }"},{"type":"INSERT","lineNumber":299,"content":"        }"},{"type":"INSERT","lineNumber":300,"content":"    }"},{"type":"INSERT","lineNumber":301,"content":"    "},{"type":"INSERT","lineNumber":302,"content":"    /**"},{"type":"INSERT","lineNumber":304,"content":"     */"},{"type":"DELETE","lineNumber":274,"oldContent":"                Log.i(TAG, \"Feature-Storage: ${storageStats.landmarkCount} Landmarks, ${\"%.1f\".format(storageStats.getTotalSizeMB())} MB\")"},{"type":"DELETE","lineNumber":276,"oldContent":"                "},{"type":"DELETE","lineNumber":278,"oldContent":"            } catch (e: Exception) {"},{"type":"DELETE","lineNumber":283,"oldContent":"        }"},{"type":"DELETE","lineNumber":285,"oldContent":"    }"},{"type":"DELETE","lineNumber":287,"oldContent":"    "},{"type":"DELETE","lineNumber":288,"oldContent":"    /**"},{"type":"DELETE","lineNumber":290,"oldContent":"     */"},{"type":"INSERT","lineNumber":324,"content":"                }"},{"type":"DELETE","lineNumber":294,"oldContent":"            }"},{"type":"DELETE","lineNumber":295,"oldContent":"                )"},{"type":"INSERT","lineNumber":326,"content":"            } catch (e: Exception) {"},{"type":"DELETE","lineNumber":298,"oldContent":"                    Log.w(TAG, \"Storage-Manager nicht verfügbar\")"},{"type":"INSERT","lineNumber":329,"content":"        }"},{"type":"DELETE","lineNumber":301,"oldContent":"                "},{"type":"INSERT","lineNumber":332,"content":"    /**"},{"type":"INSERT","lineNumber":334,"content":"     */"},{"type":"DELETE","lineNumber":314,"oldContent":"     */"},{"type":"INSERT","lineNumber":404,"content":"                        true"},{"type":"INSERT","lineNumber":412,"content":"                Log.w(TAG, \"Storage-Manager nicht verfügbar\")"},{"type":"DELETE","lineNumber":385,"oldContent":"                        true"},{"type":"DELETE","lineNumber":392,"oldContent":"                } else {"},{"type":"INSERT","lineNumber":424,"content":""},{"type":"DELETE","lineNumber":394,"oldContent":"                Log.w(TAG, \"Storage-Manager nicht verfügbar\")"},{"type":"INSERT","lineNumber":446,"content":"        return storageManager?.loadThumbnail(landmarkId)"},{"type":"DELETE","lineNumber":416,"oldContent":"            }"},{"type":"INSERT","lineNumber":491,"content":"                    val landmarks = storageManager!!.getAvailableProjectLandmarks()"},{"type":"INSERT","lineNumber":492,"content":"                    Log.i(TAG, \"Verfügbare Landmarks: ${landmarks.size}\")"},{"type":"INSERT","lineNumber":493,"content":"                    "},{"type":"INSERT","lineNumber":494,"content":"                    val status = storageManager!!.getStorageStatus()"},{"type":"INSERT","lineNumber":495,"content":"                    Log.i(TAG, \"Storage-Status: ${status.getHealthStatus()}\")"},{"type":"INSERT","lineNumber":496,"content":"                } else {"},{"type":"INSERT","lineNumber":497,"content":"                    Log.w(TAG, \"Storage-Manager nicht verfügbar\")"},{"type":"INSERT","lineNumber":498,"content":"                }"},{"type":"DELETE","lineNumber":461,"oldContent":"            try {"},{"type":"INSERT","lineNumber":500,"content":"            } catch (e: Exception) {"},{"type":"INSERT","lineNumber":501,"content":"                Log.e(TAG, \"Fehler beim Laden der Feature Maps: ${e.message}\")"},{"type":"INSERT","lineNumber":502,"content":"            }"},{"type":"INSERT","lineNumber":503,"content":"        }"},{"type":"DELETE","lineNumber":463,"oldContent":"    }"},{"type":"DELETE","lineNumber":465,"oldContent":"                    val landmarks = storageManager!!.getAvailableProjectLandmarks()"},{"type":"DELETE","lineNumber":467,"oldContent":"                    Log.i(TAG, \"Verfügbare Landmarks: ${landmarks.size}\")"},{"type":"INSERT","lineNumber":507,"content":"    "},{"type":"DELETE","lineNumber":469,"oldContent":"                    "},{"type":"DELETE","lineNumber":471,"oldContent":"                    val status = storageManager!!.getStorageStatus()"},{"type":"DELETE","lineNumber":473,"oldContent":"                    Log.i(TAG, \"Storage-Status: ${status.getHealthStatus()}\")"},{"type":"DELETE","lineNumber":475,"oldContent":"                } else {"},{"type":"INSERT","lineNumber":512,"content":"        val currentStep = _currentNavigationStep.value"},{"type":"DELETE","lineNumber":477,"oldContent":"                    Log.w(TAG, \"Storage-Manager nicht verfügbar\")"},{"type":"DELETE","lineNumber":479,"oldContent":"                }"},{"type":"DELETE","lineNumber":484,"oldContent":"            }"},{"type":"DELETE","lineNumber":486,"oldContent":"        }"},{"type":"DELETE","lineNumber":491,"oldContent":"    "},{"type":"INSERT","lineNumber":526,"content":"    }"},{"type":"DELETE","lineNumber":495,"oldContent":"        val currentStep = _currentNavigationStep.value"},{"type":"DELETE","lineNumber":507,"oldContent":"    }"},{"type":"INSERT","lineNumber":540,"content":"     */"},{"type":"DELETE","lineNumber":522,"oldContent":"     */"},{"type":"INSERT","lineNumber":566,"content":"    "},{"type":"DELETE","lineNumber":547,"oldContent":"    "},{"type":"INSERT","lineNumber":611,"content":"            } catch (e: Exception) {"},{"type":"INSERT","lineNumber":616,"content":"    "},{"type":"INSERT","lineNumber":619,"content":"     */"},{"type":"DELETE","lineNumber":591,"oldContent":"            } catch (e: Exception) {"},{"type":"DELETE","lineNumber":597,"oldContent":"    "},{"type":"DELETE","lineNumber":601,"oldContent":"     */"},{"type":"INSERT","lineNumber":636,"content":"            } catch (e: Exception) {"},{"type":"INSERT","lineNumber":637,"content":"                Log.e(TAG, \"Fehler beim Feature-Matching: ${e.message}\")"},{"type":"INSERT","lineNumber":638,"content":"                _currentMatches.value = emptyList()"},{"type":"INSERT","lineNumber":639,"content":"            }"},{"type":"INSERT","lineNumber":640,"content":"        }"},{"type":"INSERT","lineNumber":641,"content":"    }"},{"type":"INSERT","lineNumber":642,"content":"    "},{"type":"DELETE","lineNumber":616,"oldContent":"            } catch (e: Exception) {"},{"type":"DELETE","lineNumber":617,"oldContent":"                Log.e(TAG, \"Fehler beim Feature-Matching: ${e.message}\")"},{"type":"DELETE","lineNumber":619,"oldContent":"                _currentMatches.value = emptyList()"},{"type":"DELETE","lineNumber":621,"oldContent":"        }"},{"type":"DELETE","lineNumber":622,"oldContent":"    }"},{"type":"DELETE","lineNumber":623,"oldContent":"    "},{"type":"DELETE","lineNumber":625,"oldContent":"    /**"},{"type":"INSERT","lineNumber":690,"content":"    /**"},{"type":"INSERT","lineNumber":691,"content":"     * Gibt einen benutzerfreundlichen Namen für eine Landmark-ID zurück"},{"type":"DELETE","lineNumber":667,"oldContent":"    /**"},{"type":"DELETE","lineNumber":669,"oldContent":"     * Gibt einen benutzerfreundlichen Namen für eine Landmark-ID zurück"},{"type":"INSERT","lineNumber":704,"content":"    }"},{"type":"INSERT","lineNumber":705,"content":"    "},{"type":"DELETE","lineNumber":681,"oldContent":"    }"},{"type":"DELETE","lineNumber":683,"oldContent":"    "},{"type":"INSERT","lineNumber":715,"content":"        }"},{"type":"DELETE","lineNumber":690,"oldContent":"        }"},{"type":"DELETE","lineNumber":696,"oldContent":"                            )"},{"type":"DELETE","lineNumber":697,"oldContent":"                        )"},{"type":"DELETE","lineNumber":698,"oldContent":"                    }"},{"type":"DELETE","lineNumber":700,"oldContent":"            "},{"type":"DELETE","lineNumber":703,"oldContent":"            // Zusätzlich: Lade verfügbare Bilder aus dem Storage-System"},{"type":"DELETE","lineNumber":705,"oldContent":"            if (storageManager != null) {"},{"type":"DELETE","lineNumber":708,"oldContent":"                val landmarkInfos = runBlocking { storageManager!!.getAvailableProjectLandmarks() }"},{"type":"DELETE","lineNumber":710,"oldContent":"                landmarkInfos.forEach { landmarkInfo ->"},{"type":"DELETE","lineNumber":713,"oldContent":"                    // Füge nur hinzu, wenn nicht bereits in der Route vorhanden"},{"type":"DELETE","lineNumber":716,"oldContent":"                    if (routeLandmarks.none { it.id == landmarkInfo.id }) {"},{"type":"DELETE","lineNumber":718,"oldContent":"                        routeLandmarks.add("},{"type":"DELETE","lineNumber":721,"oldContent":"                            FeatureLandmark("},{"type":"DELETE","lineNumber":724,"oldContent":"                                name = landmarkInfo.filename.substringBeforeLast('.'),"},{"type":"DELETE","lineNumber":727,"oldContent":"                                description = \"Verfügbares Landmark\","},{"type":"DELETE","lineNumber":729,"oldContent":"                                position = Position(0.0, 0.0, 0.0),"},{"type":"DELETE","lineNumber":732,"oldContent":"                                imageUrl = \"\""},{"type":"DELETE","lineNumber":734,"oldContent":"                            )"},{"type":"DELETE","lineNumber":737,"oldContent":"                        )"},{"type":"DELETE","lineNumber":739,"oldContent":"                    }"},{"type":"INSERT","lineNumber":755,"content":"                                position = Position(0.0, 0.0, 0.0),"},{"type":"INSERT","lineNumber":756,"content":"                                imageUrl = \"\""},{"type":"INSERT","lineNumber":757,"content":"                            )"},{"type":"INSERT","lineNumber":758,"content":"                        )"},{"type":"INSERT","lineNumber":759,"content":"                    }"},{"type":"INSERT","lineNumber":760,"content":"                }"},{"type":"INSERT","lineNumber":762,"content":"            "},{"type":"INSERT","lineNumber":763,"content":"            // Zusätzlich: Lade verfügbare Bilder aus dem Storage-System"},{"type":"INSERT","lineNumber":764,"content":"            if (storageManager != null) {"},{"type":"INSERT","lineNumber":765,"content":"                val landmarkInfos = runBlocking { storageManager!!.getAvailableProjectLandmarks() }"},{"type":"INSERT","lineNumber":766,"content":"                landmarkInfos.forEach { landmarkInfo ->"},{"type":"INSERT","lineNumber":767,"content":"                    // Füge nur hinzu, wenn nicht bereits in der Route vorhanden"},{"type":"INSERT","lineNumber":768,"content":"                    if (routeLandmarks.none { it.id == landmarkInfo.id }) {"},{"type":"INSERT","lineNumber":769,"content":"                        routeLandmarks.add("},{"type":"INSERT","lineNumber":770,"content":"                            FeatureLandmark("},{"type":"INSERT","lineNumber":771,"content":"                                id = landmarkInfo.id, // Exakte ID aus Dateiname"},{"type":"INSERT","lineNumber":772,"content":"                                name = landmarkInfo.filename.substringBeforeLast('.'),"},{"type":"INSERT","lineNumber":773,"content":"                                description = \"Verfügbares Landmark\","},{"type":"INSERT","lineNumber":776,"content":"                            )"},{"type":"INSERT","lineNumber":777,"content":"                        )"},{"type":"INSERT","lineNumber":778,"content":"                    }"},{"type":"INSERT","lineNumber":779,"content":"                }"},{"type":"INSERT","lineNumber":780,"content":"            }"},{"type":"DELETE","lineNumber":749,"oldContent":"                }"},{"type":"DELETE","lineNumber":750,"oldContent":"            }"},{"type":"DELETE","lineNumber":758,"oldContent":"                                id = landmarkInfo.id, // Exakte ID aus Dateiname"},{"type":"INSERT","lineNumber":791,"content":"        }"},{"type":"INSERT","lineNumber":792,"content":"    }"},{"type":"INSERT","lineNumber":793,"content":"    "},{"type":"INSERT","lineNumber":794,"content":"    /**"},{"type":"INSERT","lineNumber":795,"content":"     * Gibt die aktuellen Navigationsschritte zurück"},{"type":"INSERT","lineNumber":796,"content":"     */"},{"type":"DELETE","lineNumber":763,"oldContent":"                }"},{"type":"INSERT","lineNumber":802,"content":"            } else {"},{"type":"INSERT","lineNumber":804,"content":"            }"},{"type":"INSERT","lineNumber":808,"content":"        }"},{"type":"INSERT","lineNumber":809,"content":"    }"},{"type":"INSERT","lineNumber":812,"content":""},{"type":"INSERT","lineNumber":813,"content":"    /**"},{"type":"INSERT","lineNumber":814,"content":"     * Lädt Landmarks neu für eine spezifische Route (vereinfacht)"},{"type":"INSERT","lineNumber":815,"content":"     */"},{"type":"INSERT","lineNumber":816,"content":"    private suspend fun reloadLandmarksForRoute(route: com.example.arwalking.data.Route) {"},{"type":"INSERT","lineNumber":817,"content":"        try {"},{"type":"INSERT","lineNumber":818,"content":"            Log.d(TAG, \"reloadLandmarksForRoute called (stub)\")"},{"type":"INSERT","lineNumber":819,"content":"            // Stub implementation - verhindert Crashes"},{"type":"INSERT","lineNumber":820,"content":"        } catch (e: Exception) {"},{"type":"INSERT","lineNumber":821,"content":"            Log.e(TAG, \"Fehler beim Neuladen der Route-Landmarks: ${e.message}\")"},{"type":"DELETE","lineNumber":772,"oldContent":"    "},{"type":"DELETE","lineNumber":774,"oldContent":"    /**"},{"type":"DELETE","lineNumber":776,"oldContent":"     * Aktualisiert Landmarks wenn sich die aktuelle Route ändert"},{"type":"INSERT","lineNumber":826,"content":"     * Aktualisiert Landmarks wenn sich die aktuelle Route ändert"},{"type":"DELETE","lineNumber":779,"oldContent":"     * Gibt die aktuellen Navigationsschritte zurück"},{"type":"DELETE","lineNumber":781,"oldContent":"     */"},{"type":"DELETE","lineNumber":786,"oldContent":"            } else {"},{"type":"DELETE","lineNumber":789,"oldContent":"            }"},{"type":"INSERT","lineNumber":835,"content":"    }"},{"type":"DELETE","lineNumber":791,"oldContent":"        }"},{"type":"DELETE","lineNumber":793,"oldContent":"    }"},{"type":"DELETE","lineNumber":796,"oldContent":""},{"type":"DELETE","lineNumber":798,"oldContent":"    /**"},{"type":"DELETE","lineNumber":799,"oldContent":"     * Lädt Landmarks neu für eine spezifische Route (vereinfacht)"},{"type":"DELETE","lineNumber":801,"oldContent":"     */"},{"type":"DELETE","lineNumber":803,"oldContent":"    private suspend fun reloadLandmarksForRoute(route: com.example.arwalking.data.Route) {"},{"type":"DELETE","lineNumber":804,"oldContent":"        try {"},{"type":"DELETE","lineNumber":806,"oldContent":"            Log.d(TAG, \"reloadLandmarksForRoute called (stub)\")"},{"type":"DELETE","lineNumber":808,"oldContent":"            // Stub implementation - verhindert Crashes"},{"type":"DELETE","lineNumber":809,"oldContent":"        } catch (e: Exception) {"},{"type":"DELETE","lineNumber":811,"oldContent":"            Log.e(TAG, \"Fehler beim Neuladen der Route-Landmarks: ${e.message}\")"},{"type":"DELETE","lineNumber":813,"oldContent":"        }"},{"type":"DELETE","lineNumber":815,"oldContent":"    }"},{"type":"DELETE","lineNumber":824,"oldContent":"    }"},{"type":"INSERT","lineNumber":871,"content":"    fun startFrameProcessing() {"},{"type":"INSERT","lineNumber":875,"content":"    "},{"type":"DELETE","lineNumber":848,"oldContent":"    fun startFrameProcessing() {"},{"type":"DELETE","lineNumber":851,"oldContent":"    "},{"type":"INSERT","lineNumber":894,"content":"        val currentStepNumber = _currentNavigationStep.value"},{"type":"INSERT","lineNumber":895,"content":"        return steps.find { it.stepNumber == currentStepNumber }"},{"type":"DELETE","lineNumber":865,"oldContent":"    }"},{"type":"DELETE","lineNumber":868,"oldContent":"            }"},{"type":"DELETE","lineNumber":870,"oldContent":"                Log.e(TAG, \"Fehler beim Bereinigen: ${e.message}\")"},{"type":"DELETE","lineNumber":872,"oldContent":"            } catch (e: Exception) {"},{"type":"DELETE","lineNumber":874,"oldContent":"                Log.i(TAG, \"RouteViewModel bereinigt\")"},{"type":"DELETE","lineNumber":876,"oldContent":"                "},{"type":"DELETE","lineNumber":878,"oldContent":"                landmarkFeatureStorage?.cleanup()"},{"type":"DELETE","lineNumber":880,"oldContent":"                // Bereinige Feature-Storage Cache"},{"type":"DELETE","lineNumber":882,"oldContent":"                "},{"type":"INSERT","lineNumber":909,"content":"                "},{"type":"INSERT","lineNumber":910,"content":"                // Bereinige Feature-Storage Cache"},{"type":"INSERT","lineNumber":911,"content":"                landmarkFeatureStorage?.cleanup()"},{"type":"INSERT","lineNumber":912,"content":"                "},{"type":"INSERT","lineNumber":913,"content":"                Log.i(TAG, \"RouteViewModel bereinigt\")"},{"type":"INSERT","lineNumber":914,"content":"            } catch (e: Exception) {"},{"type":"INSERT","lineNumber":915,"content":"                Log.e(TAG, \"Fehler beim Bereinigen: ${e.message}\")"},{"type":"INSERT","lineNumber":916,"content":"            }"},{"type":"INSERT","lineNumber":917,"content":"        }"},{"type":"INSERT","lineNumber":918,"content":"    }"},{"type":"INSERT","lineNumber":919,"content":"}"}]},{"timestamp":1754345851526,"changes":[{"type":"MODIFY","lineNumber":1,"content":"","oldContent":"// RouteViewModel.kt (erweitert)"},{"type":"MODIFY","lineNumber":25,"content":"    ","oldContent":"    private val _currentMatches = MutableStateFlow<List<FeatureMatchResult>>(emptyList())"},{"type":"MODIFY","lineNumber":78,"content":"                Log.d(TAG, \"StorageManager initialisiert\")","oldContent":"                Log.d(TAG, \"StorageManager initialisiert\")"},{"type":"DELETE","lineNumber":80,"oldContent":"     */"},{"type":"DELETE","lineNumber":82,"oldContent":"    fun loadNavigationRoute(context: Context): NavigationRoute? {"},{"type":"DELETE","lineNumber":85,"oldContent":"        return try {"},{"type":"DELETE","lineNumber":87,"oldContent":"            Log.i(TAG, \"Lade Route aus JSON-Datei...\")"},{"type":"DELETE","lineNumber":90,"oldContent":"            "},{"type":"DELETE","lineNumber":92,"oldContent":"            // Stelle sicher, dass die ViewModel initialisiert ist"},{"type":"DELETE","lineNumber":95,"oldContent":"            initialize(context)"},{"type":"DELETE","lineNumber":97,"oldContent":"            "},{"type":"DELETE","lineNumber":100,"oldContent":"            // Lade Route aus JSON-Datei asynchron"},{"type":"DELETE","lineNumber":101,"oldContent":"            viewModelScope.launch {"},{"type":"INSERT","lineNumber":92,"content":"     */"},{"type":"DELETE","lineNumber":104,"oldContent":"                try {"},{"type":"DELETE","lineNumber":106,"oldContent":"                    val routeData = routeRepository?.getRouteFromAssets(\"route.json\")"},{"type":"DELETE","lineNumber":109,"oldContent":"                    _currentRoute.value = routeData"},{"type":"DELETE","lineNumber":111,"oldContent":"                    "},{"type":"DELETE","lineNumber":114,"oldContent":"                    if (routeData != null) {"},{"type":"DELETE","lineNumber":116,"oldContent":"                        Log.i(TAG, \"Route erfolgreich aus JSON geladen\")"},{"type":"DELETE","lineNumber":119,"oldContent":"                        // Konvertiere RouteData zu NavigationRoute für Feature-Mapping"},{"type":"DELETE","lineNumber":121,"oldContent":"                        val navigationRoute = convertToNavigationRoute(routeData)"},{"type":"DELETE","lineNumber":124,"oldContent":"                        Log.i(TAG, \"Route konvertiert: ${navigationRoute.steps.size} Schritte\")"},{"type":"DELETE","lineNumber":126,"oldContent":"                        "},{"type":"DELETE","lineNumber":129,"oldContent":"                        // Logge Route-Details"},{"type":"DELETE","lineNumber":131,"oldContent":"                        logNavigationRoute(navigationRoute)"},{"type":"DELETE","lineNumber":134,"oldContent":"                        "},{"type":"DELETE","lineNumber":136,"oldContent":"                        // Setze ersten Schritt als aktiv"},{"type":"DELETE","lineNumber":139,"oldContent":"                        _currentNavigationStep.value = 1"},{"type":"DELETE","lineNumber":141,"oldContent":"                        "},{"type":"DELETE","lineNumber":144,"oldContent":"                        // Aktiviere Feature-Mapping automatisch wenn Route geladen"},{"type":"DELETE","lineNumber":147,"oldContent":"                        _isFeatureMappingEnabled.value = true"},{"type":"DELETE","lineNumber":150,"oldContent":"                        "},{"type":"INSERT","lineNumber":124,"content":"    fun loadNavigationRoute(context: Context): NavigationRoute? {"},{"type":"INSERT","lineNumber":125,"content":"        return try {"},{"type":"INSERT","lineNumber":126,"content":"            Log.i(TAG, \"Lade Route aus JSON-Datei...\")"},{"type":"INSERT","lineNumber":127,"content":"            "},{"type":"INSERT","lineNumber":128,"content":"            // Stelle sicher, dass die ViewModel initialisiert ist"},{"type":"INSERT","lineNumber":129,"content":"            initialize(context)"},{"type":"INSERT","lineNumber":130,"content":"            "},{"type":"INSERT","lineNumber":131,"content":"            // Lade Route aus JSON-Datei asynchron"},{"type":"INSERT","lineNumber":132,"content":"            viewModelScope.launch {"},{"type":"INSERT","lineNumber":133,"content":"                try {"},{"type":"INSERT","lineNumber":134,"content":"                    val routeData = routeRepository?.getRouteFromAssets(\"route.json\")"},{"type":"INSERT","lineNumber":135,"content":"                    _currentRoute.value = routeData"},{"type":"INSERT","lineNumber":136,"content":"                    "},{"type":"INSERT","lineNumber":137,"content":"                    if (routeData != null) {"},{"type":"INSERT","lineNumber":138,"content":"                        Log.i(TAG, \"Route erfolgreich aus JSON geladen\")"},{"type":"INSERT","lineNumber":139,"content":"                        // Konvertiere RouteData zu NavigationRoute für Feature-Mapping"},{"type":"INSERT","lineNumber":140,"content":"                        val navigationRoute = convertToNavigationRoute(routeData)"},{"type":"INSERT","lineNumber":141,"content":"                        Log.i(TAG, \"Route konvertiert: ${navigationRoute.steps.size} Schritte\")"},{"type":"INSERT","lineNumber":142,"content":"                        "},{"type":"INSERT","lineNumber":143,"content":"                        // Logge Route-Details"},{"type":"INSERT","lineNumber":144,"content":"                        logNavigationRoute(navigationRoute)"},{"type":"INSERT","lineNumber":145,"content":"                        "},{"type":"INSERT","lineNumber":146,"content":"                        // Setze ersten Schritt als aktiv"},{"type":"INSERT","lineNumber":147,"content":"                        _currentNavigationStep.value = 1"},{"type":"INSERT","lineNumber":148,"content":"                        "},{"type":"INSERT","lineNumber":149,"content":"                        // Aktiviere Feature-Mapping automatisch wenn Route geladen"},{"type":"INSERT","lineNumber":150,"content":"                        _isFeatureMappingEnabled.value = true"},{"type":"INSERT","lineNumber":151,"content":"                        "},{"type":"INSERT","lineNumber":161,"content":"            NavigationRoute("},{"type":"INSERT","lineNumber":162,"content":"                id = \"default_route\","},{"type":"INSERT","lineNumber":163,"content":"                name = \"Standard Route\","},{"type":"INSERT","lineNumber":164,"content":"                description = \"Lade Route...\","},{"type":"INSERT","lineNumber":165,"content":"                totalLength = 0.0,"},{"type":"INSERT","lineNumber":166,"content":"                steps = emptyList()"},{"type":"INSERT","lineNumber":167,"content":"            )"},{"type":"INSERT","lineNumber":168,"content":"            "},{"type":"INSERT","lineNumber":169,"content":"        } catch (e: Exception) {"},{"type":"INSERT","lineNumber":170,"content":"            Log.e(TAG, \"Fehler beim Laden der Route: ${e.message}\")"},{"type":"INSERT","lineNumber":171,"content":"            null"},{"type":"INSERT","lineNumber":172,"content":"        }"},{"type":"INSERT","lineNumber":190,"content":"            Log.d(TAG, \"  - Estimated Time: ${step.estimatedTime}s\")"},{"type":"DELETE","lineNumber":180,"oldContent":"            NavigationRoute("},{"type":"DELETE","lineNumber":182,"oldContent":"                id = \"default_route\","},{"type":"DELETE","lineNumber":184,"oldContent":"                name = \"Standard Route\","},{"type":"INSERT","lineNumber":195,"content":"    }"},{"type":"DELETE","lineNumber":186,"oldContent":"                description = \"Lade Route...\","},{"type":"DELETE","lineNumber":188,"oldContent":"                totalLength = 0.0,"},{"type":"INSERT","lineNumber":198,"content":"     * Konvertiert RouteData zu NavigationRoute"},{"type":"DELETE","lineNumber":190,"oldContent":"                steps = emptyList()"},{"type":"DELETE","lineNumber":192,"oldContent":"            )"},{"type":"DELETE","lineNumber":194,"oldContent":"            "},{"type":"INSERT","lineNumber":202,"content":"        var stepNumber = 1"},{"type":"DELETE","lineNumber":196,"oldContent":"        } catch (e: Exception) {"},{"type":"DELETE","lineNumber":198,"oldContent":"            Log.e(TAG, \"Fehler beim Laden der Route: ${e.message}\")"},{"type":"DELETE","lineNumber":200,"oldContent":"            null"},{"type":"DELETE","lineNumber":201,"oldContent":"        }"},{"type":"INSERT","lineNumber":218,"content":"                        floor = floor,"},{"type":"DELETE","lineNumber":217,"oldContent":"            Log.d(TAG, \"  - Estimated Time: ${step.estimatedTime}s\")"},{"type":"DELETE","lineNumber":219,"oldContent":"                // Bereinige Feature-Storage Cache"},{"type":"DELETE","lineNumber":220,"oldContent":"                // Storage-Manager bereinigt sich selbst automatisch"},{"type":"INSERT","lineNumber":223,"content":"                )"},{"type":"INSERT","lineNumber":224,"content":"            }"},{"type":"INSERT","lineNumber":225,"content":"        }"},{"type":"INSERT","lineNumber":226,"content":"        "},{"type":"DELETE","lineNumber":223,"oldContent":"    }"},{"type":"DELETE","lineNumber":227,"oldContent":"     * Konvertiert RouteData zu NavigationRoute"},{"type":"DELETE","lineNumber":231,"oldContent":"        var stepNumber = 1"},{"type":"INSERT","lineNumber":236,"content":"    "},{"type":"DELETE","lineNumber":234,"oldContent":"                        val landmarkName = landmark.nameDe ?: landmark.nameEn ?: landmark.id"},{"type":"INSERT","lineNumber":238,"content":"    "},{"type":"INSERT","lineNumber":239,"content":"    /**"},{"type":"INSERT","lineNumber":240,"content":"     * Initialisiert das neue Storage-System und Feature-Matching (ersetzt Feature-Mapping)"},{"type":"INSERT","lineNumber":241,"content":"     */"},{"type":"INSERT","lineNumber":242,"content":"    fun initializeStorage(context: Context) {"},{"type":"INSERT","lineNumber":243,"content":"        viewModelScope.launch {"},{"type":"INSERT","lineNumber":244,"content":"            try {"},{"type":"INSERT","lineNumber":245,"content":"                Log.i(TAG, \"Initialisiere neues Storage-System und Feature-Matching...\")"},{"type":"INSERT","lineNumber":247,"content":"                // Neues Storage-System initialisieren"},{"type":"INSERT","lineNumber":248,"content":"                storageManager = ArWalkingStorageManager(context)"},{"type":"INSERT","lineNumber":249,"content":"                "},{"type":"DELETE","lineNumber":242,"oldContent":"                        floor = floor,"},{"type":"INSERT","lineNumber":259,"content":"                }"},{"type":"DELETE","lineNumber":247,"oldContent":"            }"},{"type":"DELETE","lineNumber":248,"oldContent":"        }"},{"type":"DELETE","lineNumber":256,"oldContent":"    "},{"type":"DELETE","lineNumber":259,"oldContent":"    "},{"type":"DELETE","lineNumber":261,"oldContent":"    /**"},{"type":"DELETE","lineNumber":263,"oldContent":"     * Initialisiert das neue Storage-System und Feature-Matching (ersetzt Feature-Mapping)"},{"type":"DELETE","lineNumber":266,"oldContent":"    fun initializeStorage(context: Context) {"},{"type":"DELETE","lineNumber":267,"oldContent":"        viewModelScope.launch {"},{"type":"DELETE","lineNumber":269,"oldContent":"            try {"},{"type":"DELETE","lineNumber":271,"oldContent":"                Log.i(TAG, \"Initialisiere neues Storage-System und Feature-Matching...\")"},{"type":"DELETE","lineNumber":274,"oldContent":"                // Neues Storage-System initialisieren"},{"type":"DELETE","lineNumber":276,"oldContent":"                storageManager = ArWalkingStorageManager(context)"},{"type":"DELETE","lineNumber":278,"oldContent":"                "},{"type":"INSERT","lineNumber":283,"content":"                // Feature-Mapping ist verfügbar wenn Landmarks geladen wurden"},{"type":"DELETE","lineNumber":289,"oldContent":"                }"},{"type":"INSERT","lineNumber":293,"content":"                Log.i(TAG, \"Feature-Storage: ${storageStats.landmarkCount} Landmarks, ${\"%.1f\".format(storageStats.getTotalSizeMB())} MB\")"},{"type":"INSERT","lineNumber":294,"content":"                "},{"type":"INSERT","lineNumber":295,"content":"            } catch (e: Exception) {"},{"type":"INSERT","lineNumber":296,"content":"                Log.e(TAG, \"Fehler bei Storage-Initialisierung: ${e.message}\")"},{"type":"INSERT","lineNumber":297,"content":"                _isFeatureMappingEnabled.value = false"},{"type":"INSERT","lineNumber":298,"content":"            }"},{"type":"INSERT","lineNumber":299,"content":"        }"},{"type":"INSERT","lineNumber":300,"content":"    }"},{"type":"INSERT","lineNumber":301,"content":"    "},{"type":"INSERT","lineNumber":302,"content":"    /**"},{"type":"INSERT","lineNumber":304,"content":"     */"},{"type":"DELETE","lineNumber":307,"oldContent":"                // Feature-Mapping ist verfügbar wenn Landmarks geladen wurden"},{"type":"DELETE","lineNumber":313,"oldContent":"                Log.i(TAG, \"Feature-Storage: ${storageStats.landmarkCount} Landmarks, ${\"%.1f\".format(storageStats.getTotalSizeMB())} MB\")"},{"type":"DELETE","lineNumber":314,"oldContent":"                                position = Position("},{"type":"INSERT","lineNumber":324,"content":"                }"},{"type":"DELETE","lineNumber":317,"oldContent":"                Log.e(TAG, \"Fehler bei Storage-Initialisierung: ${e.message}\")"},{"type":"DELETE","lineNumber":319,"oldContent":"                _isFeatureMappingEnabled.value = false"},{"type":"DELETE","lineNumber":321,"oldContent":"            }"},{"type":"DELETE","lineNumber":324,"oldContent":"    }"},{"type":"DELETE","lineNumber":325,"oldContent":"                        val landmarkName = landmark.nameDe ?: landmark.nameEn ?: landmark.id"},{"type":"DELETE","lineNumber":329,"oldContent":"    suspend fun loadLandmarkImage(landmarkId: String): Bitmap? {"},{"type":"INSERT","lineNumber":335,"content":"    suspend fun loadLandmarkImage(landmarkId: String): Bitmap? {"},{"type":"DELETE","lineNumber":350,"oldContent":"                }"},{"type":"DELETE","lineNumber":353,"oldContent":"            } catch (e: Exception) {"},{"type":"DELETE","lineNumber":357,"oldContent":"        }"},{"type":"DELETE","lineNumber":361,"oldContent":"    /**"},{"type":"DELETE","lineNumber":364,"oldContent":"     */"},{"type":"DELETE","lineNumber":367,"oldContent":"}"},{"type":"DELETE","lineNumber":368,"oldContent":"    }"},{"type":"DELETE","lineNumber":369,"oldContent":"        }"},{"type":"DELETE","lineNumber":370,"oldContent":"                "},{"type":"DELETE","lineNumber":371,"oldContent":"                landmarkFeatureStorage?.cleanup()"},{"type":"DELETE","lineNumber":372,"oldContent":"        viewModelScope.launch {"},{"type":"INSERT","lineNumber":367,"content":"                Log.d(TAG, \"Landmark-Thumbnail geladen: $landmarkId (${thumbnail.width}x${thumbnail.height})\")"},{"type":"INSERT","lineNumber":368,"content":"            } else {"},{"type":"INSERT","lineNumber":369,"content":"                Log.w(TAG, \"Landmark-Thumbnail nicht gefunden: $landmarkId\")"},{"type":"INSERT","lineNumber":370,"content":"            }"},{"type":"INSERT","lineNumber":371,"content":"            thumbnail"},{"type":"INSERT","lineNumber":372,"content":"        } catch (e: Exception) {"},{"type":"INSERT","lineNumber":404,"content":"                        true"},{"type":"INSERT","lineNumber":412,"content":"                Log.w(TAG, \"Storage-Manager nicht verfügbar\")"},{"type":"INSERT","lineNumber":424,"content":""},{"type":"DELETE","lineNumber":431,"oldContent":"}"},{"type":"DELETE","lineNumber":432,"oldContent":"                        true"},{"type":"DELETE","lineNumber":433,"oldContent":"    }"},{"type":"MODIFY","lineNumber":434,"content":"                android.os.Build.MODEL.contains(\"Android SDK built for x86\") ||","oldContent":"        }"},{"type":"INSERT","lineNumber":435,"content":"                android.os.Build.MANUFACTURER.contains(\"Genymotion\") ||"},{"type":"INSERT","lineNumber":436,"content":"                android.os.Build.BRAND.startsWith(\"generic\") && android.os.Build.DEVICE.startsWith(\"generic\") ||"},{"type":"DELETE","lineNumber":441,"oldContent":"                Log.w(TAG, \"Storage-Manager nicht verfügbar\")"},{"type":"DELETE","lineNumber":444,"oldContent":"                // Bereinige Feature-Storage Cache"},{"type":"MODIFY","lineNumber":445,"content":"    suspend fun loadThumbnail(landmarkId: String): android.graphics.Bitmap? {","oldContent":"        super.onCleared()"},{"type":"INSERT","lineNumber":446,"content":"        return storageManager?.loadThumbnail(landmarkId)"},{"type":"INSERT","lineNumber":447,"content":"    }"},{"type":"DELETE","lineNumber":453,"oldContent":""},{"type":"DELETE","lineNumber":476,"oldContent":"        return storageManager?.loadThumbnail(landmarkId)"},{"type":"INSERT","lineNumber":491,"content":"                    val landmarks = storageManager!!.getAvailableProjectLandmarks()"},{"type":"INSERT","lineNumber":492,"content":"                    Log.i(TAG, \"Verfügbare Landmarks: ${landmarks.size}\")"},{"type":"INSERT","lineNumber":493,"content":"                    "},{"type":"INSERT","lineNumber":494,"content":"                    val status = storageManager!!.getStorageStatus()"},{"type":"INSERT","lineNumber":495,"content":"                    Log.i(TAG, \"Storage-Status: ${status.getHealthStatus()}\")"},{"type":"INSERT","lineNumber":496,"content":"                } else {"},{"type":"INSERT","lineNumber":497,"content":"                    Log.w(TAG, \"Storage-Manager nicht verfügbar\")"},{"type":"INSERT","lineNumber":498,"content":"                }"},{"type":"DELETE","lineNumber":492,"oldContent":"                    landmarkIds.add(landmark) // landmarks ist bereits List<String>"},{"type":"INSERT","lineNumber":500,"content":"            } catch (e: Exception) {"},{"type":"INSERT","lineNumber":501,"content":"                Log.e(TAG, \"Fehler beim Laden der Feature Maps: ${e.message}\")"},{"type":"INSERT","lineNumber":502,"content":"            }"},{"type":"INSERT","lineNumber":503,"content":"        }"},{"type":"INSERT","lineNumber":504,"content":"    }"},{"type":"INSERT","lineNumber":507,"content":"    "},{"type":"INSERT","lineNumber":512,"content":"        val currentStep = _currentNavigationStep.value"},{"type":"DELETE","lineNumber":510,"oldContent":"                    val landmarks = storageManager!!.getAvailableProjectLandmarks()"},{"type":"DELETE","lineNumber":511,"oldContent":"                    Log.i(TAG, \"Verfügbare Landmarks: ${landmarks.size}\")"},{"type":"DELETE","lineNumber":513,"oldContent":"                    "},{"type":"DELETE","lineNumber":515,"oldContent":"                    val status = storageManager!!.getStorageStatus()"},{"type":"INSERT","lineNumber":526,"content":"    }"},{"type":"DELETE","lineNumber":517,"oldContent":"                    Log.i(TAG, \"Storage-Status: ${status.getHealthStatus()}\")"},{"type":"DELETE","lineNumber":518,"oldContent":"                } else {"},{"type":"DELETE","lineNumber":520,"oldContent":"                    Log.w(TAG, \"Storage-Manager nicht verfügbar\")"},{"type":"DELETE","lineNumber":522,"oldContent":"                }"},{"type":"DELETE","lineNumber":525,"oldContent":"            } catch (e: Exception) {"},{"type":"DELETE","lineNumber":527,"oldContent":"                Log.e(TAG, \"Fehler beim Laden der Feature Maps: ${e.message}\")"},{"type":"DELETE","lineNumber":529,"oldContent":"            }"},{"type":"DELETE","lineNumber":531,"oldContent":"        }"},{"type":"DELETE","lineNumber":536,"oldContent":"    "},{"type":"INSERT","lineNumber":540,"content":"     */"},{"type":"DELETE","lineNumber":541,"oldContent":"        val currentStep = _currentNavigationStep.value"},{"type":"DELETE","lineNumber":555,"oldContent":"    }"},{"type":"INSERT","lineNumber":566,"content":"    "},{"type":"DELETE","lineNumber":570,"oldContent":"     */"},{"type":"DELETE","lineNumber":596,"oldContent":"    "},{"type":"INSERT","lineNumber":611,"content":"            } catch (e: Exception) {"},{"type":"DELETE","lineNumber":613,"oldContent":"            }"},{"type":"MODIFY","lineNumber":614,"content":"        }","oldContent":"                Log.e(TAG, \"Fehler beim Bereinigen: ${e.message}\")"},{"type":"INSERT","lineNumber":615,"content":"    }"},{"type":"INSERT","lineNumber":616,"content":"    "},{"type":"INSERT","lineNumber":619,"content":"     */"},{"type":"INSERT","lineNumber":621,"content":"        // Nur verarbeiten wenn Feature-Mapping aktiviert ist"},{"type":"INSERT","lineNumber":622,"content":"        if (!_isFeatureMappingEnabled.value) {"},{"type":"INSERT","lineNumber":623,"content":"            return"},{"type":"INSERT","lineNumber":624,"content":"        }"},{"type":"INSERT","lineNumber":625,"content":"        "},{"type":"DELETE","lineNumber":626,"oldContent":"                if (currentRoute != null && _isFeatureMappingEnabled.value) {"},{"type":"INSERT","lineNumber":634,"content":"                if (currentRoute != null) {"},{"type":"DELETE","lineNumber":629,"oldContent":"                    Log.d(TAG, \"Generated ${simulatedMatches.size} simulated matches\")"},{"type":"INSERT","lineNumber":637,"content":"                    "},{"type":"INSERT","lineNumber":638,"content":"                    if (simulatedMatches.isNotEmpty()) {"},{"type":"INSERT","lineNumber":639,"content":"                        Log.d(TAG, \"Generated ${simulatedMatches.size} simulated matches for step $currentStep\")"},{"type":"INSERT","lineNumber":640,"content":"                        simulatedMatches.forEach { match ->"},{"type":"INSERT","lineNumber":641,"content":"                            Log.v(TAG, \"- ${match.landmarkId}: ${match.confidence}\")"},{"type":"INSERT","lineNumber":642,"content":"                        }"},{"type":"INSERT","lineNumber":643,"content":"                    }"},{"type":"INSERT","lineNumber":645,"content":"                    Log.d(TAG, \"Keine Route geladen - keine Matches generiert\")"},{"type":"DELETE","lineNumber":633,"oldContent":"                }"},{"type":"INSERT","lineNumber":648,"content":"            } catch (e: Exception) {"},{"type":"INSERT","lineNumber":649,"content":"                Log.e(TAG, \"Fehler beim Feature-Matching: ${e.message}\")"},{"type":"INSERT","lineNumber":650,"content":"                _currentMatches.value = emptyList()"},{"type":"INSERT","lineNumber":651,"content":"            }"},{"type":"INSERT","lineNumber":652,"content":"        }"},{"type":"INSERT","lineNumber":653,"content":"    }"},{"type":"INSERT","lineNumber":654,"content":"    "},{"type":"INSERT","lineNumber":655,"content":"    /**"},{"type":"DELETE","lineNumber":639,"oldContent":"            } catch (e: Exception) {"},{"type":"DELETE","lineNumber":645,"oldContent":"    "},{"type":"DELETE","lineNumber":647,"oldContent":"     */"},{"type":"DELETE","lineNumber":660,"oldContent":"            } catch (e: Exception) {"},{"type":"DELETE","lineNumber":662,"oldContent":"                Log.e(TAG, \"Fehler beim Feature-Matching: ${e.message}\")"},{"type":"DELETE","lineNumber":664,"oldContent":"                _currentMatches.value = emptyList()"},{"type":"DELETE","lineNumber":666,"oldContent":"            }"},{"type":"DELETE","lineNumber":668,"oldContent":"        }"},{"type":"DELETE","lineNumber":670,"oldContent":"    }"},{"type":"DELETE","lineNumber":672,"oldContent":"    "},{"type":"INSERT","lineNumber":702,"content":"    /**"},{"type":"INSERT","lineNumber":703,"content":"     * Gibt einen benutzerfreundlichen Namen für eine Landmark-ID zurück"},{"type":"INSERT","lineNumber":716,"content":"    }"},{"type":"INSERT","lineNumber":717,"content":"    "},{"type":"INSERT","lineNumber":727,"content":"        }"},{"type":"DELETE","lineNumber":717,"oldContent":"    /**"},{"type":"DELETE","lineNumber":718,"oldContent":"     * Gibt einen benutzerfreundlichen Namen für eine Landmark-ID zurück"},{"type":"DELETE","lineNumber":727,"oldContent":"    }"},{"type":"DELETE","lineNumber":729,"oldContent":"    "},{"type":"DELETE","lineNumber":736,"oldContent":"        }"},{"type":"INSERT","lineNumber":767,"content":"                                position = Position(0.0, 0.0, 0.0),"},{"type":"INSERT","lineNumber":768,"content":"                                imageUrl = \"\""},{"type":"INSERT","lineNumber":769,"content":"                            )"},{"type":"INSERT","lineNumber":770,"content":"                        )"},{"type":"INSERT","lineNumber":771,"content":"                    }"},{"type":"INSERT","lineNumber":772,"content":"                }"},{"type":"INSERT","lineNumber":774,"content":"            "},{"type":"INSERT","lineNumber":775,"content":"            // Zusätzlich: Lade verfügbare Bilder aus dem Storage-System"},{"type":"INSERT","lineNumber":776,"content":"            if (storageManager != null) {"},{"type":"INSERT","lineNumber":777,"content":"                val landmarkInfos = runBlocking { storageManager!!.getAvailableProjectLandmarks() }"},{"type":"INSERT","lineNumber":778,"content":"                landmarkInfos.forEach { landmarkInfo ->"},{"type":"INSERT","lineNumber":779,"content":"                    // Füge nur hinzu, wenn nicht bereits in der Route vorhanden"},{"type":"INSERT","lineNumber":780,"content":"                    if (routeLandmarks.none { it.id == landmarkInfo.id }) {"},{"type":"INSERT","lineNumber":781,"content":"                        routeLandmarks.add("},{"type":"INSERT","lineNumber":782,"content":"                            FeatureLandmark("},{"type":"INSERT","lineNumber":783,"content":"                                id = landmarkInfo.id, // Exakte ID aus Dateiname"},{"type":"INSERT","lineNumber":784,"content":"                                name = landmarkInfo.filename.substringBeforeLast('.'),"},{"type":"INSERT","lineNumber":785,"content":"                                description = \"Verfügbares Landmark\","},{"type":"INSERT","lineNumber":788,"content":"                            )"},{"type":"INSERT","lineNumber":789,"content":"                        )"},{"type":"INSERT","lineNumber":790,"content":"                    }"},{"type":"INSERT","lineNumber":791,"content":"                }"},{"type":"INSERT","lineNumber":792,"content":"            }"},{"type":"DELETE","lineNumber":765,"oldContent":"                                position = Position(0.0, 0.0, 0.0),"},{"type":"DELETE","lineNumber":767,"oldContent":"                                imageUrl = \"\""},{"type":"DELETE","lineNumber":769,"oldContent":"                            )"},{"type":"DELETE","lineNumber":771,"oldContent":"                        )"},{"type":"DELETE","lineNumber":772,"oldContent":"                    }"},{"type":"INSERT","lineNumber":803,"content":"        }"},{"type":"INSERT","lineNumber":804,"content":"    }"},{"type":"INSERT","lineNumber":805,"content":"    "},{"type":"INSERT","lineNumber":806,"content":"    /**"},{"type":"INSERT","lineNumber":807,"content":"     * Gibt die aktuellen Navigationsschritte zurück"},{"type":"INSERT","lineNumber":808,"content":"     */"},{"type":"DELETE","lineNumber":774,"oldContent":"                }"},{"type":"DELETE","lineNumber":777,"oldContent":"            "},{"type":"DELETE","lineNumber":779,"oldContent":"            // Zusätzlich: Lade verfügbare Bilder aus dem Storage-System"},{"type":"DELETE","lineNumber":780,"oldContent":"            if (storageManager != null) {"},{"type":"DELETE","lineNumber":782,"oldContent":"                val landmarkInfos = runBlocking { storageManager!!.getAvailableProjectLandmarks() }"},{"type":"INSERT","lineNumber":814,"content":"            } else {"},{"type":"DELETE","lineNumber":784,"oldContent":"                landmarkInfos.forEach { landmarkInfo ->"},{"type":"INSERT","lineNumber":816,"content":"            }"},{"type":"DELETE","lineNumber":786,"oldContent":"                    // Füge nur hinzu, wenn nicht bereits in der Route vorhanden"},{"type":"DELETE","lineNumber":788,"oldContent":"                    if (routeLandmarks.none { it.id == landmarkInfo.id }) {"},{"type":"DELETE","lineNumber":790,"oldContent":"                        routeLandmarks.add("},{"type":"INSERT","lineNumber":820,"content":"        }"},{"type":"INSERT","lineNumber":821,"content":"    }"},{"type":"DELETE","lineNumber":792,"oldContent":"                            FeatureLandmark("},{"type":"DELETE","lineNumber":794,"oldContent":"                                id = landmarkInfo.id, // Exakte ID aus Dateiname"},{"type":"INSERT","lineNumber":824,"content":""},{"type":"INSERT","lineNumber":825,"content":"    /**"},{"type":"INSERT","lineNumber":826,"content":"     * Lädt Landmarks neu für eine spezifische Route (vereinfacht)"},{"type":"INSERT","lineNumber":827,"content":"     */"},{"type":"INSERT","lineNumber":828,"content":"    private suspend fun reloadLandmarksForRoute(route: com.example.arwalking.data.Route) {"},{"type":"INSERT","lineNumber":829,"content":"        try {"},{"type":"INSERT","lineNumber":830,"content":"            Log.d(TAG, \"reloadLandmarksForRoute called (stub)\")"},{"type":"INSERT","lineNumber":831,"content":"            // Stub implementation - verhindert Crashes"},{"type":"INSERT","lineNumber":832,"content":"        } catch (e: Exception) {"},{"type":"INSERT","lineNumber":833,"content":"            Log.e(TAG, \"Fehler beim Neuladen der Route-Landmarks: ${e.message}\")"},{"type":"DELETE","lineNumber":796,"oldContent":"                                name = landmarkInfo.filename.substringBeforeLast('.'),"},{"type":"DELETE","lineNumber":797,"oldContent":"                                description = \"Verfügbares Landmark\","},{"type":"DELETE","lineNumber":800,"oldContent":"                            )"},{"type":"DELETE","lineNumber":801,"oldContent":"                        )"},{"type":"DELETE","lineNumber":803,"oldContent":"                    }"},{"type":"INSERT","lineNumber":838,"content":"     * Aktualisiert Landmarks wenn sich die aktuelle Route ändert"},{"type":"DELETE","lineNumber":805,"oldContent":"                }"},{"type":"DELETE","lineNumber":806,"oldContent":"            }"},{"type":"DELETE","lineNumber":814,"oldContent":"    "},{"type":"DELETE","lineNumber":815,"oldContent":"        }"},{"type":"DELETE","lineNumber":817,"oldContent":"    /**"},{"type":"DELETE","lineNumber":821,"oldContent":"     * Gibt die aktuellen Navigationsschritte zurück"},{"type":"DELETE","lineNumber":823,"oldContent":"     */"},{"type":"DELETE","lineNumber":826,"oldContent":"            } else {"},{"type":"DELETE","lineNumber":828,"oldContent":"            }"},{"type":"DELETE","lineNumber":831,"oldContent":"        }"},{"type":"DELETE","lineNumber":832,"oldContent":"    }"},{"type":"DELETE","lineNumber":834,"oldContent":""},{"type":"DELETE","lineNumber":836,"oldContent":"    /**"},{"type":"DELETE","lineNumber":837,"oldContent":"     * Lädt Landmarks neu für eine spezifische Route (vereinfacht)"},{"type":"DELETE","lineNumber":839,"oldContent":"     */"},{"type":"DELETE","lineNumber":840,"oldContent":"    private suspend fun reloadLandmarksForRoute(route: com.example.arwalking.data.Route) {"},{"type":"DELETE","lineNumber":842,"oldContent":"        try {"},{"type":"DELETE","lineNumber":844,"oldContent":"            Log.d(TAG, \"reloadLandmarksForRoute called (stub)\")"},{"type":"DELETE","lineNumber":846,"oldContent":"            // Stub implementation - verhindert Crashes"},{"type":"DELETE","lineNumber":848,"oldContent":"        } catch (e: Exception) {"},{"type":"DELETE","lineNumber":850,"oldContent":"            Log.e(TAG, \"Fehler beim Neuladen der Route-Landmarks: ${e.message}\")"},{"type":"DELETE","lineNumber":855,"oldContent":"     * Aktualisiert Landmarks wenn sich die aktuelle Route ändert"},{"type":"DELETE","lineNumber":865,"oldContent":"    }"},{"type":"INSERT","lineNumber":883,"content":"    fun startFrameProcessing() {"},{"type":"INSERT","lineNumber":887,"content":"    "},{"type":"INSERT","lineNumber":906,"content":"        val currentStepNumber = _currentNavigationStep.value"},{"type":"INSERT","lineNumber":907,"content":"        return steps.find { it.stepNumber == currentStepNumber }"},{"type":"DELETE","lineNumber":897,"oldContent":"    fun startFrameProcessing() {"},{"type":"DELETE","lineNumber":900,"oldContent":"    "},{"type":"DELETE","lineNumber":907,"oldContent":"}"},{"type":"DELETE","lineNumber":908,"oldContent":"    }"},{"type":"DELETE","lineNumber":909,"oldContent":"        }"},{"type":"DELETE","lineNumber":910,"oldContent":"            }"},{"type":"DELETE","lineNumber":911,"oldContent":"                Log.e(TAG, \"Fehler beim Bereinigen: ${e.message}\")"},{"type":"DELETE","lineNumber":912,"oldContent":"            } catch (e: Exception) {"},{"type":"DELETE","lineNumber":913,"oldContent":"                Log.i(TAG, \"RouteViewModel bereinigt\")"},{"type":"DELETE","lineNumber":915,"oldContent":"                landmarkFeatureStorage?.cleanup()"},{"type":"DELETE","lineNumber":916,"oldContent":"        val currentStepNumber = _currentNavigationStep.value"},{"type":"DELETE","lineNumber":918,"oldContent":"        return steps.find { it.stepNumber == currentStepNumber }"},{"type":"INSERT","lineNumber":923,"content":"                landmarkFeatureStorage?.cleanup()"},{"type":"INSERT","lineNumber":925,"content":"                Log.i(TAG, \"RouteViewModel bereinigt\")"},{"type":"INSERT","lineNumber":926,"content":"            } catch (e: Exception) {"},{"type":"INSERT","lineNumber":927,"content":"                Log.e(TAG, \"Fehler beim Bereinigen: ${e.message}\")"},{"type":"INSERT","lineNumber":928,"content":"            }"},{"type":"INSERT","lineNumber":929,"content":"        }"},{"type":"INSERT","lineNumber":930,"content":"    }"},{"type":"INSERT","lineNumber":931,"content":"}"}]},{"timestamp":1754345864828,"changes":[{"type":"MODIFY","lineNumber":23,"content":" */","oldContent":"    val featureNavigationRoute: StateFlow<FeatureNavigationRoute?> = _featureNavigationRoute.asStateFlow()"},{"type":"MODIFY","lineNumber":43,"content":"    ","oldContent":""},{"type":"INSERT","lineNumber":77,"content":"                storageManager = ArWalkingStorageManager(context)"},{"type":"DELETE","lineNumber":78,"oldContent":"                Log.d(TAG, \"StorageManager initialisiert\")"},{"type":"DELETE","lineNumber":87,"oldContent":"     */"},{"type":"INSERT","lineNumber":92,"content":"     */"},{"type":"INSERT","lineNumber":107,"content":"            }"},{"type":"INSERT","lineNumber":108,"content":"            "},{"type":"INSERT","lineNumber":109,"content":"            // Initialisiere AR-Tracking-System"},{"type":"INSERT","lineNumber":110,"content":"            if (arTrackingSystem == null) {"},{"type":"INSERT","lineNumber":111,"content":"                arTrackingSystem = ARTrackingSystem()"},{"type":"INSERT","lineNumber":112,"content":"                Log.d(TAG, \"ARTrackingSystem initialisiert\")"},{"type":"INSERT","lineNumber":113,"content":"            }"},{"type":"INSERT","lineNumber":114,"content":"            "},{"type":"INSERT","lineNumber":115,"content":"            Log.d(TAG, \"Feature-Matching-Systeme erfolgreich initialisiert\")"},{"type":"INSERT","lineNumber":116,"content":"        } catch (e: Exception) {"},{"type":"INSERT","lineNumber":117,"content":"            Log.e(TAG, \"Fehler bei der Initialisierung der Feature-Matching-Systeme: ${e.message}\")"},{"type":"INSERT","lineNumber":118,"content":"        }"},{"type":"INSERT","lineNumber":119,"content":"    }"},{"type":"INSERT","lineNumber":120,"content":""},{"type":"INSERT","lineNumber":121,"content":"    /**"},{"type":"INSERT","lineNumber":122,"content":"     * Lädt die Route aus der JSON-Datei"},{"type":"INSERT","lineNumber":123,"content":"     */"},{"type":"DELETE","lineNumber":109,"oldContent":"            }"},{"type":"DELETE","lineNumber":112,"oldContent":"            "},{"type":"DELETE","lineNumber":114,"oldContent":"            // Initialisiere AR-Tracking-System"},{"type":"DELETE","lineNumber":117,"oldContent":"            if (arTrackingSystem == null) {"},{"type":"DELETE","lineNumber":120,"oldContent":"                arTrackingSystem = ARTrackingSystem()"},{"type":"DELETE","lineNumber":122,"oldContent":"                Log.d(TAG, \"ARTrackingSystem initialisiert\")"},{"type":"DELETE","lineNumber":125,"oldContent":"            }"},{"type":"DELETE","lineNumber":128,"oldContent":"            "},{"type":"DELETE","lineNumber":130,"oldContent":"            Log.d(TAG, \"Feature-Matching-Systeme erfolgreich initialisiert\")"},{"type":"DELETE","lineNumber":133,"oldContent":"        } catch (e: Exception) {"},{"type":"DELETE","lineNumber":136,"oldContent":"            Log.e(TAG, \"Fehler bei der Initialisierung der Feature-Matching-Systeme: ${e.message}\")"},{"type":"DELETE","lineNumber":138,"oldContent":"        }"},{"type":"DELETE","lineNumber":141,"oldContent":"    }"},{"type":"DELETE","lineNumber":143,"oldContent":""},{"type":"DELETE","lineNumber":146,"oldContent":"    /**"},{"type":"DELETE","lineNumber":148,"oldContent":"     * Lädt die Route aus der JSON-Datei"},{"type":"DELETE","lineNumber":151,"oldContent":"     */"},{"type":"DELETE","lineNumber":162,"oldContent":"    }"},{"type":"DELETE","lineNumber":164,"oldContent":"    "},{"type":"DELETE","lineNumber":166,"oldContent":"    /**"},{"type":"DELETE","lineNumber":168,"oldContent":"     * Loggt Informationen über die geladene NavigationRoute"},{"type":"DELETE","lineNumber":170,"oldContent":"     */"},{"type":"DELETE","lineNumber":172,"oldContent":"    fun logNavigationRoute(navigationRoute: NavigationRoute) {"},{"type":"DELETE","lineNumber":174,"oldContent":"        Log.i(TAG, \"=== Navigation Route Details ===\")"},{"type":"DELETE","lineNumber":176,"oldContent":"        Log.i(TAG, \"Route ID: ${navigationRoute.id}\")"},{"type":"DELETE","lineNumber":178,"oldContent":"        Log.i(TAG, \"Route Name: ${navigationRoute.name}\")"},{"type":"DELETE","lineNumber":180,"oldContent":"        Log.i(TAG, \"Route Description: ${navigationRoute.description}\")"},{"type":"DELETE","lineNumber":182,"oldContent":"        Log.i(TAG, \"Anzahl Schritte: ${navigationRoute.steps.size}\")"},{"type":"INSERT","lineNumber":173,"content":"    }"},{"type":"INSERT","lineNumber":174,"content":"    "},{"type":"INSERT","lineNumber":175,"content":"    /**"},{"type":"INSERT","lineNumber":176,"content":"     * Loggt Informationen über die geladene NavigationRoute"},{"type":"INSERT","lineNumber":177,"content":"     */"},{"type":"INSERT","lineNumber":178,"content":"    fun logNavigationRoute(navigationRoute: NavigationRoute) {"},{"type":"INSERT","lineNumber":179,"content":"        Log.i(TAG, \"=== Navigation Route Details ===\")"},{"type":"INSERT","lineNumber":180,"content":"        Log.i(TAG, \"Route ID: ${navigationRoute.id}\")"},{"type":"INSERT","lineNumber":181,"content":"        Log.i(TAG, \"Route Name: ${navigationRoute.name}\")"},{"type":"INSERT","lineNumber":182,"content":"        Log.i(TAG, \"Route Description: ${navigationRoute.description}\")"},{"type":"INSERT","lineNumber":183,"content":"        Log.i(TAG, \"Anzahl Schritte: ${navigationRoute.steps.size}\")"},{"type":"MODIFY","lineNumber":190,"content":"            Log.d(TAG, \"  - Estimated Time: ${step.estimatedTime}s\")","oldContent":"                                id = landmark.id, // Exakte ID aus JSON (z.B. \"PT-1-566\")"},{"type":"INSERT","lineNumber":191,"content":"            Log.d(TAG, \"  - Landmarks: ${step.landmarks.size}\")"},{"type":"INSERT","lineNumber":195,"content":"    }"},{"type":"INSERT","lineNumber":198,"content":"     * Konvertiert RouteData zu NavigationRoute"},{"type":"DELETE","lineNumber":197,"oldContent":"            Log.d(TAG, \"  - Estimated Time: ${step.estimatedTime}s\")"},{"type":"DELETE","lineNumber":200,"oldContent":"    }"},{"type":"INSERT","lineNumber":202,"content":"        var stepNumber = 1"},{"type":"DELETE","lineNumber":203,"oldContent":"     * Konvertiert RouteData zu NavigationRoute"},{"type":"DELETE","lineNumber":205,"oldContent":"        var stepNumber = 1"},{"type":"INSERT","lineNumber":218,"content":"                        floor = floor,"},{"type":"DELETE","lineNumber":221,"oldContent":"                        floor = floor,"},{"type":"DELETE","lineNumber":223,"oldContent":"        return NavigationRoute("},{"type":"DELETE","lineNumber":224,"oldContent":"            id = \"route_${System.currentTimeMillis()}\","},{"type":"DELETE","lineNumber":227,"oldContent":"            name = \"Navigation Route\","},{"type":"DELETE","lineNumber":229,"oldContent":"            description = \"Generated from route data\","},{"type":"INSERT","lineNumber":227,"content":"        return NavigationRoute("},{"type":"INSERT","lineNumber":228,"content":"            id = \"route_${System.currentTimeMillis()}\","},{"type":"INSERT","lineNumber":229,"content":"            name = \"Navigation Route\","},{"type":"INSERT","lineNumber":230,"content":"            description = \"Generated from route data\","},{"type":"INSERT","lineNumber":236,"content":"    "},{"type":"DELETE","lineNumber":237,"oldContent":"                "},{"type":"DELETE","lineNumber":239,"oldContent":"                // Feature-Matching System initialisieren"},{"type":"DELETE","lineNumber":240,"oldContent":"                featureMatchingEngine = FeatureMatchingEngine()"},{"type":"DELETE","lineNumber":241,"oldContent":"    "},{"type":"DELETE","lineNumber":242,"oldContent":"                landmarkFeatureStorage = LandmarkFeatureStorage(context)"},{"type":"DELETE","lineNumber":244,"oldContent":"                arTrackingSystem = ARTrackingSystem()"},{"type":"DELETE","lineNumber":246,"oldContent":"                "},{"type":"DELETE","lineNumber":248,"oldContent":"                // Importiere Landmarks aus Assets falls noch nicht vorhanden"},{"type":"DELETE","lineNumber":251,"oldContent":"                val importedCount = landmarkFeatureStorage!!.importLandmarksFromAssets()"},{"type":"DELETE","lineNumber":253,"oldContent":"                if (importedCount > 0) {"},{"type":"DELETE","lineNumber":255,"oldContent":"                    Log.i(TAG, \"$importedCount Landmarks aus Assets importiert\")"},{"type":"INSERT","lineNumber":250,"content":"                // Feature-Matching System initialisieren"},{"type":"INSERT","lineNumber":251,"content":"                featureMatchingEngine = FeatureMatchingEngine()"},{"type":"INSERT","lineNumber":252,"content":"                landmarkFeatureStorage = LandmarkFeatureStorage(context)"},{"type":"INSERT","lineNumber":253,"content":"                arTrackingSystem = ARTrackingSystem()"},{"type":"INSERT","lineNumber":254,"content":"                "},{"type":"INSERT","lineNumber":255,"content":"                // Importiere Landmarks aus Assets falls noch nicht vorhanden"},{"type":"INSERT","lineNumber":256,"content":"                val importedCount = landmarkFeatureStorage!!.importLandmarksFromAssets()"},{"type":"INSERT","lineNumber":257,"content":"                if (importedCount > 0) {"},{"type":"INSERT","lineNumber":258,"content":"                    Log.i(TAG, \"$importedCount Landmarks aus Assets importiert\")"},{"type":"INSERT","lineNumber":259,"content":"                }"},{"type":"INSERT","lineNumber":260,"content":"                "},{"type":"DELETE","lineNumber":269,"oldContent":"                }"},{"type":"MODIFY","lineNumber":284,"content":"                _isFeatureMappingEnabled.value = processedLandmarks.isNotEmpty()","oldContent":"                _isFeatureMappingEnabled.value = processedLandmarks.isNotEmpty()"},{"type":"DELETE","lineNumber":293,"oldContent":"     * Lädt verfügbare Landmarks aus dem Projektverzeichnis"},{"type":"DELETE","lineNumber":295,"oldContent":"    fun loadAvailableLandmarks(context: Context) {"},{"type":"DELETE","lineNumber":297,"oldContent":"        viewModelScope.launch {"},{"type":"DELETE","lineNumber":299,"oldContent":"            try {"},{"type":"DELETE","lineNumber":301,"oldContent":"                Log.i(TAG, \"Lade verfügbare Landmarks aus Projektverzeichnis...\")"},{"type":"DELETE","lineNumber":303,"oldContent":"                "},{"type":"DELETE","lineNumber":305,"oldContent":"                if (storageManager == null) {"},{"type":"DELETE","lineNumber":307,"oldContent":"                    initializeStorage(context)"},{"type":"DELETE","lineNumber":309,"oldContent":"                }"},{"type":"DELETE","lineNumber":311,"oldContent":"                "},{"type":"INSERT","lineNumber":303,"content":"     * Lädt verfügbare Landmarks aus dem Projektverzeichnis"},{"type":"INSERT","lineNumber":304,"content":"     */"},{"type":"INSERT","lineNumber":305,"content":"    fun loadAvailableLandmarks(context: Context) {"},{"type":"INSERT","lineNumber":306,"content":"        viewModelScope.launch {"},{"type":"INSERT","lineNumber":307,"content":"            try {"},{"type":"INSERT","lineNumber":308,"content":"                Log.i(TAG, \"Lade verfügbare Landmarks aus Projektverzeichnis...\")"},{"type":"INSERT","lineNumber":309,"content":"                "},{"type":"INSERT","lineNumber":310,"content":"                if (storageManager == null) {"},{"type":"INSERT","lineNumber":311,"content":"                    initializeStorage(context)"},{"type":"INSERT","lineNumber":312,"content":"                }"},{"type":"INSERT","lineNumber":313,"content":"                "},{"type":"DELETE","lineNumber":315,"oldContent":"     */"},{"type":"INSERT","lineNumber":324,"content":"                }"},{"type":"DELETE","lineNumber":330,"oldContent":"                }"},{"type":"INSERT","lineNumber":335,"content":"    suspend fun loadLandmarkImage(landmarkId: String): Bitmap? {"},{"type":"DELETE","lineNumber":339,"oldContent":"    suspend fun loadLandmarkImage(landmarkId: String): Bitmap? {"},{"type":"DELETE","lineNumber":353,"oldContent":"    fun getAvailableLandmarks(): List<FeatureLandmark> {"},{"type":"DELETE","lineNumber":354,"oldContent":"     * Gibt verfügbare Landmarks zurück - verwendet Landmark-IDs aus der Route"},{"type":"INSERT","lineNumber":353,"content":"    }"},{"type":"INSERT","lineNumber":355,"content":"    /**"},{"type":"DELETE","lineNumber":365,"oldContent":"                    val status = storageManager!!.getStorageStatus()"},{"type":"DELETE","lineNumber":366,"oldContent":"                    "},{"type":"INSERT","lineNumber":365,"content":"            val thumbnail = storageManager!!.loadThumbnail(landmarkId)"},{"type":"INSERT","lineNumber":366,"content":"            if (thumbnail != null) {"},{"type":"MODIFY","lineNumber":413,"content":"                false","oldContent":"                false"},{"type":"DELETE","lineNumber":424,"oldContent":"    "},{"type":"MODIFY","lineNumber":425,"content":"    ","oldContent":"        // Stub implementation - verhindert Crashes"},{"type":"INSERT","lineNumber":426,"content":"    /**"},{"type":"DELETE","lineNumber":429,"oldContent":"    fun startFrameProcessing() {"},{"type":"DELETE","lineNumber":430,"oldContent":"    "},{"type":"DELETE","lineNumber":431,"oldContent":"        // Stub implementation - verhindert Crashes"},{"type":"DELETE","lineNumber":432,"oldContent":"    fun enableStorageSystemImmediately(context: Context) {"},{"type":"DELETE","lineNumber":433,"oldContent":"     * Fehlende Methoden für Navigation.kt"},{"type":"INSERT","lineNumber":429,"content":"    private fun isEmulatorDevice(): Boolean {"},{"type":"INSERT","lineNumber":430,"content":"        return (android.os.Build.FINGERPRINT.startsWith(\"generic\") ||"},{"type":"INSERT","lineNumber":431,"content":"                android.os.Build.FINGERPRINT.startsWith(\"unknown\") ||"},{"type":"INSERT","lineNumber":432,"content":"                android.os.Build.MODEL.contains(\"google_sdk\") ||"},{"type":"INSERT","lineNumber":433,"content":"                android.os.Build.MODEL.contains(\"Emulator\") ||"},{"type":"MODIFY","lineNumber":437,"content":"                \"google_sdk\" == android.os.Build.PRODUCT)","oldContent":"                \"google_sdk\" == android.os.Build.PRODUCT)"},{"type":"MODIFY","lineNumber":448,"content":"    ","oldContent":"    "},{"type":"MODIFY","lineNumber":459,"content":"    suspend fun deleteLandmark(landmarkId: String): Boolean {","oldContent":"}"},{"type":"DELETE","lineNumber":469,"oldContent":""},{"type":"DELETE","lineNumber":470,"oldContent":"        "},{"type":"INSERT","lineNumber":469,"content":"            \"Storage-Status: ${status.getHealthStatus()}, Bilder: ${status.totalImages}, Cache-Hit-Rate: ${String.format(\"%.1f\", status.cacheHitRate)}%\""},{"type":"INSERT","lineNumber":470,"content":"        } else {"},{"type":"DELETE","lineNumber":480,"oldContent":"        val currentRoute = _currentRoute.value ?: return emptyList()"},{"type":"DELETE","lineNumber":481,"oldContent":"     */"},{"type":"INSERT","lineNumber":480,"content":"    }"},{"type":"INSERT","lineNumber":481,"content":"    "},{"type":"DELETE","lineNumber":483,"oldContent":"        return processedLandmarks.map { it.id }"},{"type":"DELETE","lineNumber":484,"oldContent":"    fun getCurrentlyLoadedLandmarkIds(): List<String> {"},{"type":"DELETE","lineNumber":485,"oldContent":"     * Gibt die aktuell geladenen Landmark-IDs zurück (für Debugging)"},{"type":"INSERT","lineNumber":483,"content":"     * Lädt verfügbare Landmarks aus dem Storage-System"},{"type":"INSERT","lineNumber":484,"content":"     */"},{"type":"INSERT","lineNumber":485,"content":"    private fun loadAvailableStorageData() {"},{"type":"DELETE","lineNumber":492,"oldContent":"                "},{"type":"DELETE","lineNumber":495,"oldContent":"    "},{"type":"DELETE","lineNumber":497,"oldContent":""},{"type":"DELETE","lineNumber":499,"oldContent":"    /**"},{"type":"DELETE","lineNumber":501,"oldContent":"     * Geht zum nächsten Navigationsschritt"},{"type":"DELETE","lineNumber":503,"oldContent":"     */"},{"type":"DELETE","lineNumber":505,"oldContent":"    }"},{"type":"DELETE","lineNumber":506,"oldContent":"        _currentNavigationStep.value = currentStep + 1"},{"type":"INSERT","lineNumber":499,"content":"                "},{"type":"DELETE","lineNumber":508,"oldContent":"        Log.d(TAG, \"Nächster Navigationsschritt: ${currentStep + 1}\")"},{"type":"DELETE","lineNumber":510,"oldContent":"    }"},{"type":"DELETE","lineNumber":512,"oldContent":"    "},{"type":"INSERT","lineNumber":504,"content":"    }"},{"type":"INSERT","lineNumber":505,"content":"    "},{"type":"INSERT","lineNumber":506,"content":""},{"type":"INSERT","lineNumber":507,"content":"    "},{"type":"INSERT","lineNumber":509,"content":"     * Geht zum nächsten Navigationsschritt"},{"type":"INSERT","lineNumber":510,"content":"     */"},{"type":"INSERT","lineNumber":511,"content":"    fun nextNavigationStep() {"},{"type":"INSERT","lineNumber":512,"content":"        val currentStep = _currentNavigationStep.value"},{"type":"INSERT","lineNumber":513,"content":"        _currentNavigationStep.value = currentStep + 1"},{"type":"INSERT","lineNumber":514,"content":"        Log.d(TAG, \"Nächster Navigationsschritt: ${currentStep + 1}\")"},{"type":"INSERT","lineNumber":516,"content":"    "},{"type":"INSERT","lineNumber":517,"content":"    /**"},{"type":"DELETE","lineNumber":519,"oldContent":"    "},{"type":"DELETE","lineNumber":523,"oldContent":"        val currentStep = _currentNavigationStep.value"},{"type":"INSERT","lineNumber":526,"content":"    }"},{"type":"DELETE","lineNumber":531,"oldContent":"    }"},{"type":"INSERT","lineNumber":540,"content":"     */"},{"type":"DELETE","lineNumber":542,"oldContent":"     */"},{"type":"MODIFY","lineNumber":567,"content":"    /**","oldContent":"    /**"},{"type":"MODIFY","lineNumber":599,"content":"                    )","oldContent":"                Log.e(TAG, \"Fehler beim Bereinigen: ${e.message}\")"},{"type":"DELETE","lineNumber":605,"oldContent":"                landmarkFeatureStorage?.cleanup()"},{"type":"DELETE","lineNumber":606,"oldContent":"                // Bereinige Feature-Storage Cache"},{"type":"DELETE","lineNumber":607,"oldContent":"     * Cleanup beim Destroy"},{"type":"DELETE","lineNumber":608,"oldContent":""},{"type":"INSERT","lineNumber":605,"content":"                    steps = demoSteps"},{"type":"INSERT","lineNumber":606,"content":"                )"},{"type":"INSERT","lineNumber":607,"content":"                "},{"type":"INSERT","lineNumber":608,"content":"                _featureNavigationRoute.value = featureRoute"},{"type":"MODIFY","lineNumber":610,"content":"                ","oldContent":"    }"},{"type":"MODIFY","lineNumber":617,"content":"    /**","oldContent":"    /**"},{"type":"INSERT","lineNumber":619,"content":"     */"},{"type":"INSERT","lineNumber":621,"content":"        // Nur verarbeiten wenn Feature-Mapping aktiviert ist"},{"type":"INSERT","lineNumber":622,"content":"        if (!_isFeatureMappingEnabled.value) {"},{"type":"INSERT","lineNumber":623,"content":"            return"},{"type":"INSERT","lineNumber":624,"content":"        }"},{"type":"INSERT","lineNumber":625,"content":"        "},{"type":"DELETE","lineNumber":621,"oldContent":"     */"},{"type":"DELETE","lineNumber":624,"oldContent":"        // Nur verarbeiten wenn Feature-Mapping aktiviert ist"},{"type":"DELETE","lineNumber":626,"oldContent":"        if (!_isFeatureMappingEnabled.value) {"},{"type":"DELETE","lineNumber":628,"oldContent":"            return"},{"type":"DELETE","lineNumber":630,"oldContent":"        }"},{"type":"DELETE","lineNumber":632,"oldContent":"        "},{"type":"INSERT","lineNumber":634,"content":"                if (currentRoute != null) {"},{"type":"INSERT","lineNumber":637,"content":"                    "},{"type":"INSERT","lineNumber":638,"content":"                    if (simulatedMatches.isNotEmpty()) {"},{"type":"INSERT","lineNumber":639,"content":"                        Log.d(TAG, \"Generated ${simulatedMatches.size} simulated matches for step $currentStep\")"},{"type":"INSERT","lineNumber":640,"content":"                        simulatedMatches.forEach { match ->"},{"type":"INSERT","lineNumber":641,"content":"                            Log.v(TAG, \"- ${match.landmarkId}: ${match.confidence}\")"},{"type":"INSERT","lineNumber":642,"content":"                        }"},{"type":"INSERT","lineNumber":643,"content":"                    }"},{"type":"INSERT","lineNumber":645,"content":"                    Log.d(TAG, \"Keine Route geladen - keine Matches generiert\")"},{"type":"DELETE","lineNumber":639,"oldContent":"                if (currentRoute != null) {"},{"type":"INSERT","lineNumber":648,"content":"            } catch (e: Exception) {"},{"type":"INSERT","lineNumber":649,"content":"                Log.e(TAG, \"Fehler beim Feature-Matching: ${e.message}\")"},{"type":"INSERT","lineNumber":650,"content":"                _currentMatches.value = emptyList()"},{"type":"INSERT","lineNumber":651,"content":"            }"},{"type":"INSERT","lineNumber":652,"content":"        }"},{"type":"INSERT","lineNumber":653,"content":"    }"},{"type":"INSERT","lineNumber":654,"content":"    "},{"type":"INSERT","lineNumber":655,"content":"    /**"},{"type":"DELETE","lineNumber":643,"oldContent":"                    "},{"type":"DELETE","lineNumber":645,"oldContent":"                    if (simulatedMatches.isNotEmpty()) {"},{"type":"DELETE","lineNumber":647,"oldContent":"                        Log.d(TAG, \"Generated ${simulatedMatches.size} simulated matches for step $currentStep\")"},{"type":"DELETE","lineNumber":648,"oldContent":"                        simulatedMatches.forEach { match ->"},{"type":"DELETE","lineNumber":650,"oldContent":"                            Log.v(TAG, \"- ${match.landmarkId}: ${match.confidence}\")"},{"type":"DELETE","lineNumber":652,"oldContent":"                        }"},{"type":"DELETE","lineNumber":654,"oldContent":"                    }"},{"type":"DELETE","lineNumber":657,"oldContent":"                    Log.d(TAG, \"Keine Route geladen - keine Matches generiert\")"},{"type":"DELETE","lineNumber":659,"oldContent":"            } catch (e: Exception) {"},{"type":"DELETE","lineNumber":661,"oldContent":"                Log.e(TAG, \"Fehler beim Feature-Matching: ${e.message}\")"},{"type":"DELETE","lineNumber":663,"oldContent":"                _currentMatches.value = emptyList()"},{"type":"DELETE","lineNumber":665,"oldContent":"            }"},{"type":"DELETE","lineNumber":667,"oldContent":"        }"},{"type":"DELETE","lineNumber":669,"oldContent":"    }"},{"type":"DELETE","lineNumber":671,"oldContent":"    "},{"type":"DELETE","lineNumber":673,"oldContent":"    /**"},{"type":"INSERT","lineNumber":702,"content":"    /**"},{"type":"INSERT","lineNumber":703,"content":"     * Gibt einen benutzerfreundlichen Namen für eine Landmark-ID zurück"},{"type":"INSERT","lineNumber":716,"content":"    }"},{"type":"INSERT","lineNumber":717,"content":"    "},{"type":"DELETE","lineNumber":715,"oldContent":"    /**"},{"type":"DELETE","lineNumber":716,"oldContent":"     * Gibt einen benutzerfreundlichen Namen für eine Landmark-ID zurück"},{"type":"INSERT","lineNumber":727,"content":"        }"},{"type":"DELETE","lineNumber":730,"oldContent":"    }"},{"type":"DELETE","lineNumber":732,"oldContent":"    "},{"type":"DELETE","lineNumber":733,"oldContent":"        _currentNavigationStep.value = step"},{"type":"MODIFY","lineNumber":734,"content":"        val totalSteps = getCurrentNavigationSteps().size","oldContent":"        Log.d(TAG, \"Navigationsschritt aktualisiert: $step\")"},{"type":"INSERT","lineNumber":735,"content":"        val validStep = step.coerceIn(1, maxOf(1, totalSteps))"},{"type":"INSERT","lineNumber":737,"content":"        _currentNavigationStep.value = validStep"},{"type":"INSERT","lineNumber":738,"content":"        Log.d(TAG, \"Navigationsschritt aktualisiert: $validStep von $totalSteps\")"},{"type":"INSERT","lineNumber":739,"content":"        "},{"type":"DELETE","lineNumber":739,"oldContent":"                val simulatedMatches = generateSimulatedMatches(_currentRoute.value!!, step)"},{"type":"INSERT","lineNumber":743,"content":"                val simulatedMatches = generateSimulatedMatches(_currentRoute.value!!, validStep)"},{"type":"DELETE","lineNumber":741,"oldContent":"        }"},{"type":"INSERT","lineNumber":749,"content":"    /**"},{"type":"INSERT","lineNumber":750,"content":"     * Geht zum nächsten Navigationsschritt"},{"type":"INSERT","lineNumber":751,"content":"     */"},{"type":"INSERT","lineNumber":752,"content":"    fun nextNavigationStep() {"},{"type":"INSERT","lineNumber":753,"content":"        val currentStep = _currentNavigationStep.value"},{"type":"INSERT","lineNumber":754,"content":"        val totalSteps = getCurrentNavigationSteps().size"},{"type":"INSERT","lineNumber":755,"content":"        "},{"type":"INSERT","lineNumber":756,"content":"        if (currentStep < totalSteps) {"},{"type":"INSERT","lineNumber":757,"content":"            setCurrentNavigationStep(currentStep + 1)"},{"type":"INSERT","lineNumber":758,"content":"            Log.i(TAG, \"Nächster Schritt: ${currentStep + 1}\")"},{"type":"INSERT","lineNumber":759,"content":"        } else {"},{"type":"INSERT","lineNumber":760,"content":"            Log.i(TAG, \"Bereits am letzten Schritt\")"},{"type":"INSERT","lineNumber":761,"content":"        }"},{"type":"INSERT","lineNumber":762,"content":"    }"},{"type":"INSERT","lineNumber":763,"content":"    "},{"type":"INSERT","lineNumber":764,"content":"    /**"},{"type":"INSERT","lineNumber":765,"content":"     * Geht zum vorherigen Navigationsschritt"},{"type":"INSERT","lineNumber":766,"content":"     */"},{"type":"INSERT","lineNumber":767,"content":"    fun previousNavigationStep() {"},{"type":"INSERT","lineNumber":768,"content":"        val currentStep = _currentNavigationStep.value"},{"type":"INSERT","lineNumber":769,"content":"        "},{"type":"INSERT","lineNumber":770,"content":"        if (currentStep > 1) {"},{"type":"INSERT","lineNumber":771,"content":"            setCurrentNavigationStep(currentStep - 1)"},{"type":"INSERT","lineNumber":772,"content":"            Log.i(TAG, \"Vorheriger Schritt: ${currentStep - 1}\")"},{"type":"INSERT","lineNumber":773,"content":"        } else {"},{"type":"INSERT","lineNumber":774,"content":"            Log.i(TAG, \"Bereits am ersten Schritt\")"},{"type":"INSERT","lineNumber":775,"content":"        }"},{"type":"INSERT","lineNumber":776,"content":"    }"},{"type":"INSERT","lineNumber":777,"content":"    "},{"type":"INSERT","lineNumber":778,"content":"    /**"},{"type":"INSERT","lineNumber":779,"content":"     * Startet die Navigation von Anfang an"},{"type":"INSERT","lineNumber":780,"content":"     */"},{"type":"INSERT","lineNumber":781,"content":"    fun startNavigation() {"},{"type":"INSERT","lineNumber":782,"content":"        Log.i(TAG, \"Navigation gestartet\")"},{"type":"INSERT","lineNumber":783,"content":"        setCurrentNavigationStep(1)"},{"type":"INSERT","lineNumber":784,"content":"        setFeatureMappingEnabled(true)"},{"type":"INSERT","lineNumber":785,"content":"    }"},{"type":"INSERT","lineNumber":786,"content":"    "},{"type":"INSERT","lineNumber":787,"content":"    /**"},{"type":"INSERT","lineNumber":788,"content":"     * Stoppt die Navigation"},{"type":"INSERT","lineNumber":789,"content":"     */"},{"type":"INSERT","lineNumber":790,"content":"    fun stopNavigation() {"},{"type":"INSERT","lineNumber":791,"content":"        Log.i(TAG, \"Navigation gestoppt\")"},{"type":"INSERT","lineNumber":792,"content":"        setFeatureMappingEnabled(false)"},{"type":"INSERT","lineNumber":793,"content":"        _currentMatches.value = emptyList()"},{"type":"INSERT","lineNumber":794,"content":"    }"},{"type":"INSERT","lineNumber":795,"content":"    "},{"type":"DELETE","lineNumber":767,"oldContent":"            }"},{"type":"DELETE","lineNumber":770,"oldContent":"            "},{"type":"DELETE","lineNumber":771,"oldContent":"            Log.d(TAG, \"Verfügbare Landmarks: ${routeLandmarks.size}\")"},{"type":"DELETE","lineNumber":772,"oldContent":"            routeLandmarks.forEach { landmark ->"},{"type":"DELETE","lineNumber":773,"oldContent":"                Log.d(TAG, \"- ${landmark.id}: ${landmark.name}\")"},{"type":"DELETE","lineNumber":774,"oldContent":"            }"},{"type":"DELETE","lineNumber":775,"oldContent":"            "},{"type":"DELETE","lineNumber":776,"oldContent":"            routeLandmarks"},{"type":"DELETE","lineNumber":777,"oldContent":"        } catch (e: Exception) {"},{"type":"DELETE","lineNumber":778,"oldContent":"                                position = Position(0.0, 0.0, 0.0),"},{"type":"DELETE","lineNumber":779,"oldContent":"                                imageUrl = \"\""},{"type":"DELETE","lineNumber":780,"oldContent":"            Log.e(TAG, \"Fehler beim Laden der verfügbaren Landmarks: ${e.message}\")"},{"type":"DELETE","lineNumber":783,"oldContent":"            emptyList()"},{"type":"DELETE","lineNumber":786,"oldContent":"    fun getCurrentNavigationSteps(): List<NavigationStep> {"},{"type":"INSERT","lineNumber":823,"content":"            }"},{"type":"DELETE","lineNumber":789,"oldContent":"        return try {"},{"type":"DELETE","lineNumber":791,"oldContent":"            val route = _currentRoute.value"},{"type":"DELETE","lineNumber":794,"oldContent":"            if (route != null) {"},{"type":"DELETE","lineNumber":798,"oldContent":"                convertToNavigationRoute(route).steps"},{"type":"DELETE","lineNumber":801,"oldContent":"                emptyList()"},{"type":"DELETE","lineNumber":804,"oldContent":"        } catch (e: Exception) {"},{"type":"DELETE","lineNumber":805,"oldContent":"            Log.e(TAG, \"Fehler beim Laden der Navigationsschritte: ${e.message}\")"},{"type":"INSERT","lineNumber":836,"content":"                                position = Position(0.0, 0.0, 0.0),"},{"type":"INSERT","lineNumber":837,"content":"                                imageUrl = \"\""},{"type":"DELETE","lineNumber":808,"oldContent":"            emptyList()"},{"type":"DELETE","lineNumber":811,"oldContent":""},{"type":"DELETE","lineNumber":813,"oldContent":""},{"type":"INSERT","lineNumber":843,"content":"            "},{"type":"INSERT","lineNumber":844,"content":"            Log.d(TAG, \"Verfügbare Landmarks: ${routeLandmarks.size}\")"},{"type":"INSERT","lineNumber":845,"content":"            routeLandmarks.forEach { landmark ->"},{"type":"INSERT","lineNumber":846,"content":"                Log.d(TAG, \"- ${landmark.id}: ${landmark.name}\")"},{"type":"INSERT","lineNumber":847,"content":"            }"},{"type":"INSERT","lineNumber":848,"content":"            "},{"type":"INSERT","lineNumber":849,"content":"            routeLandmarks"},{"type":"INSERT","lineNumber":850,"content":"        } catch (e: Exception) {"},{"type":"INSERT","lineNumber":851,"content":"            Log.e(TAG, \"Fehler beim Laden der verfügbaren Landmarks: ${e.message}\")"},{"type":"INSERT","lineNumber":852,"content":"            emptyList()"},{"type":"INSERT","lineNumber":857,"content":"     * Gibt die aktuellen Navigationsschritte zurück"},{"type":"INSERT","lineNumber":858,"content":"     */"},{"type":"INSERT","lineNumber":859,"content":"    fun getCurrentNavigationSteps(): List<NavigationStep> {"},{"type":"INSERT","lineNumber":860,"content":"        return try {"},{"type":"INSERT","lineNumber":861,"content":"            val route = _currentRoute.value"},{"type":"INSERT","lineNumber":862,"content":"            if (route != null) {"},{"type":"INSERT","lineNumber":863,"content":"                convertToNavigationRoute(route).steps"},{"type":"INSERT","lineNumber":864,"content":"            } else {"},{"type":"INSERT","lineNumber":865,"content":"                emptyList()"},{"type":"INSERT","lineNumber":866,"content":"            }"},{"type":"INSERT","lineNumber":867,"content":"        } catch (e: Exception) {"},{"type":"INSERT","lineNumber":868,"content":"            Log.e(TAG, \"Fehler beim Laden der Navigationsschritte: ${e.message}\")"},{"type":"INSERT","lineNumber":869,"content":"            emptyList()"},{"type":"INSERT","lineNumber":872,"content":""},{"type":"INSERT","lineNumber":873,"content":""},{"type":"INSERT","lineNumber":874,"content":""},{"type":"INSERT","lineNumber":875,"content":"    /**"},{"type":"INSERT","lineNumber":876,"content":"     * Lädt Landmarks neu für eine spezifische Route (vereinfacht)"},{"type":"INSERT","lineNumber":878,"content":"    private suspend fun reloadLandmarksForRoute(route: com.example.arwalking.data.Route) {"},{"type":"INSERT","lineNumber":879,"content":"        try {"},{"type":"INSERT","lineNumber":880,"content":"            Log.d(TAG, \"reloadLandmarksForRoute called (stub)\")"},{"type":"INSERT","lineNumber":881,"content":"            // Stub implementation - verhindert Crashes"},{"type":"INSERT","lineNumber":882,"content":"        } catch (e: Exception) {"},{"type":"INSERT","lineNumber":883,"content":"            Log.e(TAG, \"Fehler beim Neuladen der Route-Landmarks: ${e.message}\")"},{"type":"INSERT","lineNumber":884,"content":"        }"},{"type":"INSERT","lineNumber":885,"content":"    }"},{"type":"DELETE","lineNumber":823,"oldContent":"     * Gibt die aktuellen Navigationsschritte zurück"},{"type":"DELETE","lineNumber":824,"oldContent":"    fun updateLandmarksForCurrentRoute() {"},{"type":"INSERT","lineNumber":888,"content":"     * Aktualisiert Landmarks wenn sich die aktuelle Route ändert"},{"type":"INSERT","lineNumber":890,"content":"    fun updateLandmarksForCurrentRoute() {"},{"type":"DELETE","lineNumber":832,"oldContent":"            } else {"},{"type":"DELETE","lineNumber":833,"oldContent":"            }"},{"type":"DELETE","lineNumber":837,"oldContent":"        }"},{"type":"DELETE","lineNumber":839,"oldContent":"    }"},{"type":"DELETE","lineNumber":841,"oldContent":""},{"type":"DELETE","lineNumber":843,"oldContent":"    /**"},{"type":"DELETE","lineNumber":845,"oldContent":"     * Lädt Landmarks neu für eine spezifische Route (vereinfacht)"},{"type":"DELETE","lineNumber":846,"oldContent":"     */"},{"type":"DELETE","lineNumber":848,"oldContent":"    private suspend fun reloadLandmarksForRoute(route: com.example.arwalking.data.Route) {"},{"type":"DELETE","lineNumber":849,"oldContent":"        try {"},{"type":"DELETE","lineNumber":851,"oldContent":"            Log.d(TAG, \"reloadLandmarksForRoute called (stub)\")"},{"type":"DELETE","lineNumber":853,"oldContent":"            // Stub implementation - verhindert Crashes"},{"type":"DELETE","lineNumber":854,"oldContent":"        } catch (e: Exception) {"},{"type":"DELETE","lineNumber":855,"oldContent":"            Log.e(TAG, \"Fehler beim Neuladen der Route-Landmarks: ${e.message}\")"},{"type":"DELETE","lineNumber":858,"oldContent":"     * Aktualisiert Landmarks wenn sich die aktuelle Route ändert"},{"type":"INSERT","lineNumber":933,"content":"    fun startFrameProcessing() {"},{"type":"INSERT","lineNumber":937,"content":"    "},{"type":"DELETE","lineNumber":895,"oldContent":"    fun startFrameProcessing() {"},{"type":"DELETE","lineNumber":900,"oldContent":"    "},{"type":"DELETE","lineNumber":905,"oldContent":"}"},{"type":"INSERT","lineNumber":955,"content":"        val steps = getCurrentNavigationSteps()"},{"type":"INSERT","lineNumber":956,"content":"        val currentStepNumber = _currentNavigationStep.value"},{"type":"INSERT","lineNumber":957,"content":"        return steps.find { it.stepNumber == currentStepNumber }"},{"type":"DELETE","lineNumber":918,"oldContent":"        val currentStepNumber = _currentNavigationStep.value"},{"type":"DELETE","lineNumber":919,"oldContent":"}"},{"type":"DELETE","lineNumber":920,"oldContent":"        return steps.find { it.stepNumber == currentStepNumber }"},{"type":"DELETE","lineNumber":921,"oldContent":"                landmarkFeatureStorage?.cleanup()"},{"type":"INSERT","lineNumber":970,"content":"                storageManager?.logPerformanceSummary()"},{"type":"DELETE","lineNumber":923,"oldContent":"}"},{"type":"DELETE","lineNumber":924,"oldContent":"    }"},{"type":"DELETE","lineNumber":925,"oldContent":"        }"},{"type":"DELETE","lineNumber":926,"oldContent":"            }"},{"type":"INSERT","lineNumber":972,"content":"                // Bereinige Feature-Storage Cache"},{"type":"DELETE","lineNumber":928,"oldContent":"                Log.e(TAG, \"Fehler beim Bereinigen: ${e.message}\")"},{"type":"DELETE","lineNumber":929,"oldContent":"            } catch (e: Exception) {"},{"type":"INSERT","lineNumber":974,"content":"                "},{"type":"INSERT","lineNumber":976,"content":"            } catch (e: Exception) {"},{"type":"INSERT","lineNumber":977,"content":"                Log.e(TAG, \"Fehler beim Bereinigen: ${e.message}\")"},{"type":"INSERT","lineNumber":978,"content":"            }"},{"type":"INSERT","lineNumber":979,"content":"        }"},{"type":"INSERT","lineNumber":980,"content":"    }"},{"type":"INSERT","lineNumber":981,"content":"}"}]},{"timestamp":1754345876135,"changes":[{"type":"MODIFY","lineNumber":0,"content":"package com.example.arwalking","oldContent":"// RouteViewModel.kt (erweitert)"},{"type":"MODIFY","lineNumber":11,"content":"import kotlinx.coroutines.delay","oldContent":"import kotlinx.coroutines.flow.MutableStateFlow"},{"type":"MODIFY","lineNumber":60,"content":"    val currentNavigationStep: StateFlow<Int> = _currentNavigationStep.asStateFlow()","oldContent":"                    stepNumber = stepNumber,"},{"type":"MODIFY","lineNumber":92,"content":"     */","oldContent":"     */"},{"type":"DELETE","lineNumber":108,"oldContent":"    fun loadNavigationRoute(context: Context): NavigationRoute? {"},{"type":"DELETE","lineNumber":110,"oldContent":"        return try {"},{"type":"DELETE","lineNumber":113,"oldContent":"            Log.i(TAG, \"Lade Route aus JSON-Datei...\")"},{"type":"DELETE","lineNumber":115,"oldContent":"            "},{"type":"DELETE","lineNumber":118,"oldContent":"            // Stelle sicher, dass die ViewModel initialisiert ist"},{"type":"DELETE","lineNumber":121,"oldContent":"            initialize(context)"},{"type":"DELETE","lineNumber":123,"oldContent":"            "},{"type":"DELETE","lineNumber":126,"oldContent":"            // Lade Route aus JSON-Datei asynchron"},{"type":"DELETE","lineNumber":128,"oldContent":"            viewModelScope.launch {"},{"type":"DELETE","lineNumber":131,"oldContent":"                try {"},{"type":"INSERT","lineNumber":124,"content":"    fun loadNavigationRoute(context: Context): NavigationRoute? {"},{"type":"INSERT","lineNumber":125,"content":"        return try {"},{"type":"INSERT","lineNumber":126,"content":"            Log.i(TAG, \"Lade Route aus JSON-Datei...\")"},{"type":"INSERT","lineNumber":127,"content":"            "},{"type":"INSERT","lineNumber":128,"content":"            // Stelle sicher, dass die ViewModel initialisiert ist"},{"type":"INSERT","lineNumber":129,"content":"            initialize(context)"},{"type":"INSERT","lineNumber":130,"content":"            "},{"type":"INSERT","lineNumber":131,"content":"            // Lade Route aus JSON-Datei asynchron"},{"type":"INSERT","lineNumber":132,"content":"            viewModelScope.launch {"},{"type":"INSERT","lineNumber":133,"content":"                try {"},{"type":"DELETE","lineNumber":167,"oldContent":"    }"},{"type":"INSERT","lineNumber":168,"content":"            "},{"type":"INSERT","lineNumber":169,"content":"        } catch (e: Exception) {"},{"type":"INSERT","lineNumber":170,"content":"            Log.e(TAG, \"Fehler beim Laden der Route: ${e.message}\")"},{"type":"INSERT","lineNumber":171,"content":"            null"},{"type":"INSERT","lineNumber":172,"content":"        }"},{"type":"INSERT","lineNumber":173,"content":"    }"},{"type":"DELETE","lineNumber":171,"oldContent":"            "},{"type":"DELETE","lineNumber":174,"oldContent":"        } catch (e: Exception) {"},{"type":"DELETE","lineNumber":177,"oldContent":"            Log.e(TAG, \"Fehler beim Laden der Route: ${e.message}\")"},{"type":"DELETE","lineNumber":180,"oldContent":"            null"},{"type":"DELETE","lineNumber":183,"oldContent":"        }"},{"type":"MODIFY","lineNumber":196,"content":"    ","oldContent":"    "},{"type":"MODIFY","lineNumber":199,"content":"     */","oldContent":"     */"},{"type":"MODIFY","lineNumber":203,"content":"        ","oldContent":"        "},{"type":"INSERT","lineNumber":225,"content":"        }"},{"type":"INSERT","lineNumber":226,"content":"        "},{"type":"DELETE","lineNumber":227,"oldContent":"        }"},{"type":"DELETE","lineNumber":230,"oldContent":"        "},{"type":"DELETE","lineNumber":243,"oldContent":"                // Feature-Matching System initialisieren"},{"type":"INSERT","lineNumber":244,"content":"            try {"},{"type":"INSERT","lineNumber":245,"content":"                Log.i(TAG, \"Initialisiere neues Storage-System und Feature-Matching...\")"},{"type":"INSERT","lineNumber":246,"content":"                "},{"type":"INSERT","lineNumber":247,"content":"                // Neues Storage-System initialisieren"},{"type":"INSERT","lineNumber":248,"content":"                storageManager = ArWalkingStorageManager(context)"},{"type":"INSERT","lineNumber":249,"content":"                "},{"type":"INSERT","lineNumber":250,"content":"                // Feature-Matching System initialisieren"},{"type":"DELETE","lineNumber":247,"oldContent":"            try {"},{"type":"DELETE","lineNumber":250,"oldContent":"                Log.i(TAG, \"Initialisiere neues Storage-System und Feature-Matching...\")"},{"type":"DELETE","lineNumber":253,"oldContent":"                "},{"type":"DELETE","lineNumber":255,"oldContent":"                // Neues Storage-System initialisieren"},{"type":"DELETE","lineNumber":257,"oldContent":"                storageManager = ArWalkingStorageManager(context)"},{"type":"DELETE","lineNumber":260,"oldContent":"                "},{"type":"INSERT","lineNumber":283,"content":"                // Feature-Mapping ist verfügbar wenn Landmarks geladen wurden"},{"type":"DELETE","lineNumber":284,"oldContent":"                _isFeatureMappingEnabled.value = processedLandmarks.isNotEmpty()"},{"type":"INSERT","lineNumber":298,"content":"            }"},{"type":"INSERT","lineNumber":299,"content":"        }"},{"type":"INSERT","lineNumber":300,"content":"    }"},{"type":"INSERT","lineNumber":301,"content":"    "},{"type":"INSERT","lineNumber":302,"content":"    /**"},{"type":"DELETE","lineNumber":300,"oldContent":"            }"},{"type":"DELETE","lineNumber":303,"oldContent":"        }"},{"type":"DELETE","lineNumber":306,"oldContent":"    }"},{"type":"DELETE","lineNumber":309,"oldContent":"    "},{"type":"DELETE","lineNumber":312,"oldContent":"    /**"},{"type":"DELETE","lineNumber":317,"oldContent":"            "},{"type":"DELETE","lineNumber":318,"oldContent":"            val routeLandmarks = mutableListOf<FeatureLandmark>()"},{"type":"DELETE","lineNumber":319,"oldContent":"        return try {"},{"type":"DELETE","lineNumber":320,"oldContent":"    fun getAvailableLandmarks(): List<FeatureLandmark> {"},{"type":"DELETE","lineNumber":321,"oldContent":"     * Gibt verfügbare Landmarks zurück - verwendet Landmark-IDs aus der Route"},{"type":"DELETE","lineNumber":322,"oldContent":"    "},{"type":"DELETE","lineNumber":323,"oldContent":""},{"type":"INSERT","lineNumber":317,"content":"                    Log.i(TAG, \"Verfügbare Landmarks: ${landmarks.size}\")"},{"type":"INSERT","lineNumber":318,"content":"                    landmarks.forEach { landmark ->"},{"type":"INSERT","lineNumber":319,"content":"                        Log.d(TAG, \"- ${landmark.id} (${landmark.filename})\")"},{"type":"INSERT","lineNumber":320,"content":"                    }"},{"type":"INSERT","lineNumber":321,"content":"                } else {"},{"type":"INSERT","lineNumber":322,"content":"                    Log.w(TAG, \"Keine Landmark-Bilder im Projektverzeichnis gefunden\")"},{"type":"INSERT","lineNumber":323,"content":"                    Log.i(TAG, \"Tipp: Kopiere Bilder in /Users/florian/Documents/GitHub/ar-walking/landmark_images/\")"},{"type":"INSERT","lineNumber":354,"content":"    "},{"type":"DELETE","lineNumber":355,"oldContent":"                android.os.Build.BRAND.startsWith(\"generic\") && android.os.Build.DEVICE.startsWith(\"generic\") ||"},{"type":"INSERT","lineNumber":412,"content":"                Log.w(TAG, \"Storage-Manager nicht verfügbar\")"},{"type":"DELETE","lineNumber":413,"oldContent":"                false"},{"type":"INSERT","lineNumber":424,"content":""},{"type":"DELETE","lineNumber":426,"oldContent":""},{"type":"INSERT","lineNumber":436,"content":"                android.os.Build.BRAND.startsWith(\"generic\") && android.os.Build.DEVICE.startsWith(\"generic\") ||"},{"type":"DELETE","lineNumber":437,"oldContent":"                \"google_sdk\" == android.os.Build.PRODUCT)"},{"type":"DELETE","lineNumber":438,"oldContent":"                "},{"type":"MODIFY","lineNumber":439,"content":"    ","oldContent":"            try {"},{"type":"INSERT","lineNumber":441,"content":"    "},{"type":"INSERT","lineNumber":447,"content":"    }"},{"type":"DELETE","lineNumber":448,"oldContent":"    "},{"type":"MODIFY","lineNumber":450,"content":"     * Lädt ein Vollbild (mit Cache) - verwendet neues Storage-System","oldContent":"                routePart.landmarks?.forEach { landmark ->"},{"type":"DELETE","lineNumber":476,"oldContent":"}"},{"type":"DELETE","lineNumber":477,"oldContent":"        }"},{"type":"INSERT","lineNumber":476,"content":"     * Bereinigt Cache und defekte Dateien"},{"type":"INSERT","lineNumber":477,"content":"     */"},{"type":"MODIFY","lineNumber":482,"content":"    /**","oldContent":"                Log.i(TAG, \"RouteViewModel bereinigt\")"},{"type":"DELETE","lineNumber":489,"oldContent":"    }"},{"type":"DELETE","lineNumber":490,"oldContent":"    }"},{"type":"INSERT","lineNumber":489,"content":"                "},{"type":"INSERT","lineNumber":490,"content":"                if (storageManager != null) {"},{"type":"DELETE","lineNumber":496,"oldContent":"                "},{"type":"MODIFY","lineNumber":499,"content":"                ","oldContent":"    }"},{"type":"INSERT","lineNumber":500,"content":"            } catch (e: Exception) {"},{"type":"INSERT","lineNumber":501,"content":"                Log.e(TAG, \"Fehler beim Laden der Feature Maps: ${e.message}\")"},{"type":"INSERT","lineNumber":502,"content":"            }"},{"type":"INSERT","lineNumber":503,"content":"        }"},{"type":"INSERT","lineNumber":504,"content":"    }"},{"type":"DELETE","lineNumber":504,"oldContent":"            } catch (e: Exception) {"},{"type":"INSERT","lineNumber":508,"content":"    /**"},{"type":"DELETE","lineNumber":506,"oldContent":"                Log.e(TAG, \"Fehler beim Laden der Feature Maps: ${e.message}\")"},{"type":"DELETE","lineNumber":509,"oldContent":"            }"},{"type":"DELETE","lineNumber":512,"oldContent":"        }"},{"type":"DELETE","lineNumber":514,"oldContent":"    /**"},{"type":"MODIFY","lineNumber":518,"content":"     * Geht zum vorherigen Navigationsschritt","oldContent":"     * Geht zum vorherigen Navigationsschritt"},{"type":"INSERT","lineNumber":566,"content":"    "},{"type":"DELETE","lineNumber":567,"oldContent":"    /**"},{"type":"DELETE","lineNumber":589,"oldContent":"}"},{"type":"DELETE","lineNumber":590,"oldContent":"        }"},{"type":"DELETE","lineNumber":591,"oldContent":"            }"},{"type":"DELETE","lineNumber":592,"oldContent":"                Log.e(TAG, \"Fehler beim Bereinigen: ${e.message}\")"},{"type":"INSERT","lineNumber":589,"content":"                    ),"},{"type":"INSERT","lineNumber":590,"content":"                    FeatureNavigationStep("},{"type":"INSERT","lineNumber":591,"content":"                        stepNumber = 3,"},{"type":"INSERT","lineNumber":592,"content":"                        instruction = \"Gehen Sie die Treppe hoch zu Stockwerk $floor\","},{"type":"DELETE","lineNumber":595,"oldContent":"                landmarkFeatureStorage?.cleanup()"},{"type":"DELETE","lineNumber":596,"oldContent":"                // Bereinige Feature-Storage Cache"},{"type":"INSERT","lineNumber":595,"content":"                    FeatureNavigationStep("},{"type":"INSERT","lineNumber":596,"content":"                        stepNumber = 4,"},{"type":"INSERT","lineNumber":616,"content":"    "},{"type":"DELETE","lineNumber":617,"oldContent":"    /**"},{"type":"DELETE","lineNumber":621,"oldContent":"        viewModelScope.launch {"},{"type":"DELETE","lineNumber":624,"oldContent":"            try {"},{"type":"MODIFY","lineNumber":626,"content":"        viewModelScope.launch {","oldContent":"                Log.d(TAG, \"processFrameForFeatureMatching called\")"},{"type":"INSERT","lineNumber":627,"content":"            try {"},{"type":"INSERT","lineNumber":628,"content":"                Log.d(TAG, \"processFrameForFeatureMatching called\")"},{"type":"DELETE","lineNumber":637,"oldContent":"                } else {"},{"type":"DELETE","lineNumber":639,"oldContent":"                    _currentMatches.value = emptyList()"},{"type":"DELETE","lineNumber":641,"oldContent":"                }"},{"type":"DELETE","lineNumber":644,"oldContent":"     * Generiert simulierte Feature-Matches basierend auf der aktuellen Route"},{"type":"DELETE","lineNumber":646,"oldContent":"     */"},{"type":"DELETE","lineNumber":648,"oldContent":"    private fun generateSimulatedMatches(route: RouteData, currentStep: Int): List<FeatureMatchResult> {"},{"type":"DELETE","lineNumber":650,"oldContent":"        val matches = mutableListOf<FeatureMatchResult>()"},{"type":"INSERT","lineNumber":644,"content":"                } else {"},{"type":"DELETE","lineNumber":652,"oldContent":"        "},{"type":"INSERT","lineNumber":646,"content":"                    _currentMatches.value = emptyList()"},{"type":"INSERT","lineNumber":647,"content":"                }"},{"type":"DELETE","lineNumber":655,"oldContent":"        try {"},{"type":"DELETE","lineNumber":658,"oldContent":"            val steps = getCurrentNavigationSteps()"},{"type":"DELETE","lineNumber":661,"oldContent":"            if (currentStep > 0 && currentStep <= steps.size) {"},{"type":"INSERT","lineNumber":656,"content":"     * Generiert simulierte Feature-Matches basierend auf der aktuellen Route"},{"type":"INSERT","lineNumber":657,"content":"     */"},{"type":"INSERT","lineNumber":658,"content":"    private fun generateSimulatedMatches(route: RouteData, currentStep: Int): List<FeatureMatchResult> {"},{"type":"INSERT","lineNumber":659,"content":"        val matches = mutableListOf<FeatureMatchResult>()"},{"type":"INSERT","lineNumber":660,"content":"        "},{"type":"INSERT","lineNumber":661,"content":"        try {"},{"type":"INSERT","lineNumber":662,"content":"            val steps = getCurrentNavigationSteps()"},{"type":"INSERT","lineNumber":663,"content":"            if (currentStep > 0 && currentStep <= steps.size) {"},{"type":"MODIFY","lineNumber":704,"content":"     */","oldContent":"     */"},{"type":"DELETE","lineNumber":716,"oldContent":"    /**"},{"type":"INSERT","lineNumber":718,"content":"    /**"},{"type":"INSERT","lineNumber":727,"content":"        }"},{"type":"DELETE","lineNumber":729,"oldContent":"        }"},{"type":"DELETE","lineNumber":737,"oldContent":"        // Aktualisiere Matches für den neuen Schritt"},{"type":"DELETE","lineNumber":739,"oldContent":"        if (_isFeatureMappingEnabled.value && _currentRoute.value != null) {"},{"type":"DELETE","lineNumber":741,"oldContent":"            viewModelScope.launch {"},{"type":"INSERT","lineNumber":740,"content":"        // Aktualisiere Matches für den neuen Schritt"},{"type":"INSERT","lineNumber":741,"content":"        if (_isFeatureMappingEnabled.value && _currentRoute.value != null) {"},{"type":"INSERT","lineNumber":742,"content":"            viewModelScope.launch {"},{"type":"INSERT","lineNumber":743,"content":"                val simulatedMatches = generateSimulatedMatches(_currentRoute.value!!, validStep)"},{"type":"DELETE","lineNumber":745,"oldContent":"                val simulatedMatches = generateSimulatedMatches(_currentRoute.value!!, validStep)"},{"type":"DELETE","lineNumber":749,"oldContent":""},{"type":"DELETE","lineNumber":750,"oldContent":"    "},{"type":"DELETE","lineNumber":751,"oldContent":""},{"type":"DELETE","lineNumber":753,"oldContent":"    "},{"type":"DELETE","lineNumber":755,"oldContent":"    /**"},{"type":"DELETE","lineNumber":757,"oldContent":"     * Gibt verfügbare Landmarks zurück - verwendet Landmark-IDs aus der Route"},{"type":"DELETE","lineNumber":759,"oldContent":"     */"},{"type":"DELETE","lineNumber":761,"oldContent":"    fun getAvailableLandmarks(): List<FeatureLandmark> {"},{"type":"DELETE","lineNumber":763,"oldContent":"        return try {"},{"type":"DELETE","lineNumber":765,"oldContent":"            val routeLandmarks = mutableListOf<FeatureLandmark>()"},{"type":"DELETE","lineNumber":767,"oldContent":"            "},{"type":"DELETE","lineNumber":769,"oldContent":"            // Sammle alle Landmark-IDs aus der aktuellen Route"},{"type":"DELETE","lineNumber":771,"oldContent":"            _currentRoute.value?.route?.path?.forEach { pathItem ->"},{"type":"DELETE","lineNumber":773,"oldContent":"                pathItem.routeParts.forEach { routePart ->"},{"type":"DELETE","lineNumber":775,"oldContent":"                    routePart.landmarks?.forEach { landmark ->"},{"type":"DELETE","lineNumber":777,"oldContent":"                        // landmark ist bereits ein String (Landmark-ID)"},{"type":"DELETE","lineNumber":779,"oldContent":"                        routeLandmarks.add("},{"type":"DELETE","lineNumber":781,"oldContent":"                            FeatureLandmark("},{"type":"DELETE","lineNumber":783,"oldContent":"                                id = landmark, // String aus JSON"},{"type":"DELETE","lineNumber":785,"oldContent":"                                name = landmark,"},{"type":"DELETE","lineNumber":787,"oldContent":"                                description = \"Landmark\","},{"type":"DELETE","lineNumber":790,"oldContent":"                                position = Position(0.0, 0.0, 0.0),"},{"type":"DELETE","lineNumber":792,"oldContent":"                                imageUrl = \"\""},{"type":"DELETE","lineNumber":805,"oldContent":"                            )"},{"type":"DELETE","lineNumber":807,"oldContent":"                        )"},{"type":"DELETE","lineNumber":810,"oldContent":"                    }"},{"type":"DELETE","lineNumber":812,"oldContent":"                }"},{"type":"DELETE","lineNumber":815,"oldContent":"            "},{"type":"DELETE","lineNumber":817,"oldContent":"            // Zusätzlich: Lade verfügbare Bilder aus dem Storage-System"},{"type":"DELETE","lineNumber":820,"oldContent":"            if (storageManager != null) {"},{"type":"DELETE","lineNumber":823,"oldContent":"                val landmarkInfos = runBlocking { storageManager!!.getAvailableProjectLandmarks() }"},{"type":"DELETE","lineNumber":825,"oldContent":"                landmarkInfos.forEach { landmarkInfo ->"},{"type":"INSERT","lineNumber":796,"content":"    /**"},{"type":"INSERT","lineNumber":797,"content":"     * Gibt den aktuellen Status der RouteViewModel zurück"},{"type":"INSERT","lineNumber":798,"content":"     */"},{"type":"INSERT","lineNumber":799,"content":"    fun getStatus(): String {"},{"type":"INSERT","lineNumber":800,"content":"        val route = _currentRoute.value"},{"type":"INSERT","lineNumber":801,"content":"        val step = _currentNavigationStep.value"},{"type":"INSERT","lineNumber":802,"content":"        val totalSteps = getCurrentNavigationSteps().size"},{"type":"INSERT","lineNumber":803,"content":"        val matchesCount = _currentMatches.value.size"},{"type":"INSERT","lineNumber":804,"content":"        val isFeatureMappingEnabled = _isFeatureMappingEnabled.value"},{"type":"INSERT","lineNumber":805,"content":"        "},{"type":"INSERT","lineNumber":806,"content":"        return buildString {"},{"type":"INSERT","lineNumber":807,"content":"            appendLine(\"=== RouteViewModel Status ===\")"},{"type":"INSERT","lineNumber":808,"content":"            appendLine(\"Route geladen: ${route != null}\")"},{"type":"INSERT","lineNumber":809,"content":"            if (route != null) {"},{"type":"INSERT","lineNumber":810,"content":"                appendLine(\"Route ID: ${route.route.id}\")"},{"type":"INSERT","lineNumber":811,"content":"                appendLine(\"Aktueller Schritt: $step von $totalSteps\")"},{"type":"INSERT","lineNumber":812,"content":"            }"},{"type":"INSERT","lineNumber":813,"content":"            appendLine(\"Feature-Mapping: ${if (isFeatureMappingEnabled) \"Aktiviert\" else \"Deaktiviert\"}\")"},{"type":"INSERT","lineNumber":814,"content":"            appendLine(\"Aktuelle Matches: $matchesCount\")"},{"type":"INSERT","lineNumber":815,"content":"            appendLine(\"Storage-Manager: ${storageManager != null}\")"},{"type":"INSERT","lineNumber":816,"content":"            appendLine(\"Feature-Matching-Engine: ${featureMatchingEngine != null}\")"},{"type":"INSERT","lineNumber":817,"content":"            appendLine(\"=== Ende Status ===\")"},{"type":"INSERT","lineNumber":818,"content":"        }"},{"type":"INSERT","lineNumber":819,"content":"    }"},{"type":"INSERT","lineNumber":820,"content":"    "},{"type":"INSERT","lineNumber":821,"content":"    /**"},{"type":"INSERT","lineNumber":822,"content":"     * Cleanup-Funktion für die ViewModel"},{"type":"INSERT","lineNumber":823,"content":"     */"},{"type":"INSERT","lineNumber":824,"content":"    override fun onCleared() {"},{"type":"INSERT","lineNumber":825,"content":"        super.onCleared()"},{"type":"INSERT","lineNumber":826,"content":"        try {"},{"type":"INSERT","lineNumber":827,"content":"            Log.i(TAG, \"RouteViewModel wird bereinigt...\")"},{"type":"INSERT","lineNumber":828,"content":"            "},{"type":"INSERT","lineNumber":829,"content":"            // Stoppe Navigation"},{"type":"INSERT","lineNumber":830,"content":"            stopNavigation()"},{"type":"INSERT","lineNumber":831,"content":"            "},{"type":"INSERT","lineNumber":832,"content":"            // Bereinige Ressourcen"},{"type":"INSERT","lineNumber":833,"content":"            arTrackingSystem?.resetTracking()"},{"type":"INSERT","lineNumber":834,"content":"            processedLandmarks.clear()"},{"type":"INSERT","lineNumber":835,"content":"            "},{"type":"INSERT","lineNumber":836,"content":"            Log.i(TAG, \"RouteViewModel erfolgreich bereinigt\")"},{"type":"INSERT","lineNumber":837,"content":"        } catch (e: Exception) {"},{"type":"INSERT","lineNumber":838,"content":"            Log.e(TAG, \"Fehler beim Bereinigen der RouteViewModel: ${e.message}\")"},{"type":"INSERT","lineNumber":839,"content":"        }"},{"type":"INSERT","lineNumber":840,"content":"    }"},{"type":"INSERT","lineNumber":841,"content":"    "},{"type":"INSERT","lineNumber":842,"content":""},{"type":"INSERT","lineNumber":843,"content":"    "},{"type":"INSERT","lineNumber":844,"content":""},{"type":"INSERT","lineNumber":845,"content":"    "},{"type":"INSERT","lineNumber":846,"content":"    /**"},{"type":"INSERT","lineNumber":847,"content":"     * Gibt verfügbare Landmarks zurück - verwendet Landmark-IDs aus der Route"},{"type":"INSERT","lineNumber":848,"content":"     */"},{"type":"INSERT","lineNumber":849,"content":"    fun getAvailableLandmarks(): List<FeatureLandmark> {"},{"type":"INSERT","lineNumber":850,"content":"        return try {"},{"type":"INSERT","lineNumber":851,"content":"            val routeLandmarks = mutableListOf<FeatureLandmark>()"},{"type":"INSERT","lineNumber":852,"content":"            "},{"type":"INSERT","lineNumber":853,"content":"            // Sammle alle Landmark-IDs aus der aktuellen Route"},{"type":"INSERT","lineNumber":854,"content":"            _currentRoute.value?.route?.path?.forEach { pathItem ->"},{"type":"INSERT","lineNumber":855,"content":"                pathItem.routeParts.forEach { routePart ->"},{"type":"INSERT","lineNumber":856,"content":"                    routePart.landmarks?.forEach { landmark ->"},{"type":"INSERT","lineNumber":857,"content":"                        // landmark ist bereits ein String (Landmark-ID)"},{"type":"INSERT","lineNumber":858,"content":"                        routeLandmarks.add("},{"type":"INSERT","lineNumber":859,"content":"                            FeatureLandmark("},{"type":"INSERT","lineNumber":860,"content":"                                id = landmark, // String aus JSON"},{"type":"INSERT","lineNumber":861,"content":"                                name = landmark,"},{"type":"INSERT","lineNumber":862,"content":"                                description = \"Landmark\","},{"type":"INSERT","lineNumber":863,"content":"                                position = Position(0.0, 0.0, 0.0),"},{"type":"INSERT","lineNumber":864,"content":"                                imageUrl = \"\""},{"type":"INSERT","lineNumber":865,"content":"                            )"},{"type":"INSERT","lineNumber":866,"content":"                        )"},{"type":"INSERT","lineNumber":867,"content":"                    }"},{"type":"INSERT","lineNumber":868,"content":"                }"},{"type":"INSERT","lineNumber":869,"content":"            }"},{"type":"INSERT","lineNumber":870,"content":"            "},{"type":"INSERT","lineNumber":871,"content":"            // Zusätzlich: Lade verfügbare Bilder aus dem Storage-System"},{"type":"INSERT","lineNumber":872,"content":"            if (storageManager != null) {"},{"type":"INSERT","lineNumber":873,"content":"                val landmarkInfos = runBlocking { storageManager!!.getAvailableProjectLandmarks() }"},{"type":"INSERT","lineNumber":874,"content":"                landmarkInfos.forEach { landmarkInfo ->"},{"type":"INSERT","lineNumber":882,"content":"                                position = Position(0.0, 0.0, 0.0),"},{"type":"INSERT","lineNumber":883,"content":"                                imageUrl = \"\""},{"type":"INSERT","lineNumber":889,"content":"            "},{"type":"INSERT","lineNumber":890,"content":"            Log.d(TAG, \"Verfügbare Landmarks: ${routeLandmarks.size}\")"},{"type":"INSERT","lineNumber":891,"content":"            routeLandmarks.forEach { landmark ->"},{"type":"INSERT","lineNumber":892,"content":"                Log.d(TAG, \"- ${landmark.id}: ${landmark.name}\")"},{"type":"INSERT","lineNumber":893,"content":"            }"},{"type":"INSERT","lineNumber":894,"content":"            "},{"type":"INSERT","lineNumber":895,"content":"            routeLandmarks"},{"type":"INSERT","lineNumber":896,"content":"        } catch (e: Exception) {"},{"type":"INSERT","lineNumber":897,"content":"            Log.e(TAG, \"Fehler beim Laden der verfügbaren Landmarks: ${e.message}\")"},{"type":"INSERT","lineNumber":898,"content":"            emptyList()"},{"type":"INSERT","lineNumber":903,"content":"     * Gibt die aktuellen Navigationsschritte zurück"},{"type":"INSERT","lineNumber":904,"content":"     */"},{"type":"INSERT","lineNumber":905,"content":"    fun getCurrentNavigationSteps(): List<NavigationStep> {"},{"type":"INSERT","lineNumber":906,"content":"        return try {"},{"type":"INSERT","lineNumber":907,"content":"            val route = _currentRoute.value"},{"type":"INSERT","lineNumber":908,"content":"            if (route != null) {"},{"type":"INSERT","lineNumber":909,"content":"                convertToNavigationRoute(route).steps"},{"type":"INSERT","lineNumber":910,"content":"            } else {"},{"type":"INSERT","lineNumber":911,"content":"                emptyList()"},{"type":"INSERT","lineNumber":912,"content":"            }"},{"type":"INSERT","lineNumber":913,"content":"        } catch (e: Exception) {"},{"type":"INSERT","lineNumber":914,"content":"            Log.e(TAG, \"Fehler beim Laden der Navigationsschritte: ${e.message}\")"},{"type":"INSERT","lineNumber":915,"content":"            emptyList()"},{"type":"INSERT","lineNumber":918,"content":""},{"type":"INSERT","lineNumber":919,"content":""},{"type":"INSERT","lineNumber":920,"content":""},{"type":"INSERT","lineNumber":921,"content":"    /**"},{"type":"INSERT","lineNumber":922,"content":"     * Lädt Landmarks neu für eine spezifische Route (vereinfacht)"},{"type":"INSERT","lineNumber":924,"content":"    private suspend fun reloadLandmarksForRoute(route: com.example.arwalking.data.Route) {"},{"type":"INSERT","lineNumber":925,"content":"        try {"},{"type":"INSERT","lineNumber":926,"content":"            Log.d(TAG, \"reloadLandmarksForRoute called (stub)\")"},{"type":"INSERT","lineNumber":927,"content":"            // Stub implementation - verhindert Crashes"},{"type":"INSERT","lineNumber":928,"content":"        } catch (e: Exception) {"},{"type":"INSERT","lineNumber":929,"content":"            Log.e(TAG, \"Fehler beim Neuladen der Route-Landmarks: ${e.message}\")"},{"type":"INSERT","lineNumber":930,"content":"        }"},{"type":"INSERT","lineNumber":931,"content":"    }"},{"type":"DELETE","lineNumber":849,"oldContent":"            }"},{"type":"INSERT","lineNumber":934,"content":"     * Aktualisiert Landmarks wenn sich die aktuelle Route ändert"},{"type":"INSERT","lineNumber":936,"content":"    fun updateLandmarksForCurrentRoute() {"},{"type":"DELETE","lineNumber":859,"oldContent":"                                position = Position(0.0, 0.0, 0.0),"},{"type":"DELETE","lineNumber":861,"oldContent":"                                imageUrl = \"\""},{"type":"DELETE","lineNumber":865,"oldContent":"            "},{"type":"DELETE","lineNumber":866,"oldContent":"            Log.d(TAG, \"Verfügbare Landmarks: ${routeLandmarks.size}\")"},{"type":"DELETE","lineNumber":868,"oldContent":"            routeLandmarks.forEach { landmark ->"},{"type":"DELETE","lineNumber":869,"oldContent":"                Log.d(TAG, \"- ${landmark.id}: ${landmark.name}\")"},{"type":"DELETE","lineNumber":870,"oldContent":"            }"},{"type":"DELETE","lineNumber":872,"oldContent":"            "},{"type":"DELETE","lineNumber":873,"oldContent":"            routeLandmarks"},{"type":"DELETE","lineNumber":874,"oldContent":"        } catch (e: Exception) {"},{"type":"DELETE","lineNumber":876,"oldContent":"            Log.e(TAG, \"Fehler beim Laden der verfügbaren Landmarks: ${e.message}\")"},{"type":"DELETE","lineNumber":877,"oldContent":"            emptyList()"},{"type":"DELETE","lineNumber":880,"oldContent":"     * Gibt die aktuellen Navigationsschritte zurück"},{"type":"DELETE","lineNumber":883,"oldContent":"    fun getCurrentNavigationSteps(): List<NavigationStep> {"},{"type":"DELETE","lineNumber":884,"oldContent":"     */"},{"type":"DELETE","lineNumber":885,"oldContent":"        return try {"},{"type":"DELETE","lineNumber":887,"oldContent":"            val route = _currentRoute.value"},{"type":"DELETE","lineNumber":889,"oldContent":"            if (route != null) {"},{"type":"DELETE","lineNumber":891,"oldContent":"                convertToNavigationRoute(route).steps"},{"type":"DELETE","lineNumber":893,"oldContent":"            } else {"},{"type":"DELETE","lineNumber":895,"oldContent":"                emptyList()"},{"type":"DELETE","lineNumber":897,"oldContent":"            }"},{"type":"DELETE","lineNumber":899,"oldContent":"        } catch (e: Exception) {"},{"type":"DELETE","lineNumber":901,"oldContent":"            Log.e(TAG, \"Fehler beim Laden der Navigationsschritte: ${e.message}\")"},{"type":"DELETE","lineNumber":903,"oldContent":"            emptyList()"},{"type":"DELETE","lineNumber":907,"oldContent":""},{"type":"DELETE","lineNumber":909,"oldContent":""},{"type":"DELETE","lineNumber":912,"oldContent":""},{"type":"DELETE","lineNumber":914,"oldContent":"    /**"},{"type":"DELETE","lineNumber":915,"oldContent":"     * Lädt Landmarks neu für eine spezifische Route (vereinfacht)"},{"type":"DELETE","lineNumber":918,"oldContent":"    private suspend fun reloadLandmarksForRoute(route: com.example.arwalking.data.Route) {"},{"type":"DELETE","lineNumber":920,"oldContent":"        try {"},{"type":"DELETE","lineNumber":922,"oldContent":"            Log.d(TAG, \"reloadLandmarksForRoute called (stub)\")"},{"type":"DELETE","lineNumber":924,"oldContent":"            // Stub implementation - verhindert Crashes"},{"type":"DELETE","lineNumber":926,"oldContent":"        } catch (e: Exception) {"},{"type":"DELETE","lineNumber":928,"oldContent":"            Log.e(TAG, \"Fehler beim Neuladen der Route-Landmarks: ${e.message}\")"},{"type":"INSERT","lineNumber":979,"content":"    fun startFrameProcessing() {"},{"type":"DELETE","lineNumber":930,"oldContent":"        }"},{"type":"DELETE","lineNumber":933,"oldContent":"    }"},{"type":"INSERT","lineNumber":983,"content":"    "},{"type":"DELETE","lineNumber":936,"oldContent":"     * Aktualisiert Landmarks wenn sich die aktuelle Route ändert"},{"type":"DELETE","lineNumber":939,"oldContent":"    fun updateLandmarksForCurrentRoute() {"},{"type":"INSERT","lineNumber":999,"content":"    fun getCurrentStep(): NavigationStep? {"},{"type":"INSERT","lineNumber":1000,"content":"        Log.d(TAG, \"getCurrentStep called (stub)\")"},{"type":"INSERT","lineNumber":1001,"content":"        val steps = getCurrentNavigationSteps()"},{"type":"INSERT","lineNumber":1002,"content":"        val currentStepNumber = _currentNavigationStep.value"},{"type":"INSERT","lineNumber":1003,"content":"        return steps.find { it.stepNumber == currentStepNumber }"},{"type":"DELETE","lineNumber":952,"oldContent":"            }"},{"type":"DELETE","lineNumber":953,"oldContent":"    }"},{"type":"DELETE","lineNumber":962,"oldContent":"}"},{"type":"DELETE","lineNumber":963,"oldContent":"        }"},{"type":"INSERT","lineNumber":1013,"content":"        viewModelScope.launch {"},{"type":"INSERT","lineNumber":1014,"content":"            try {"},{"type":"INSERT","lineNumber":1015,"content":"                // Storage-Manager bereinigt sich selbst automatisch"},{"type":"INSERT","lineNumber":1016,"content":"                storageManager?.logPerformanceSummary()"},{"type":"INSERT","lineNumber":1017,"content":"                "},{"type":"INSERT","lineNumber":1018,"content":"                // Bereinige Feature-Storage Cache"},{"type":"INSERT","lineNumber":1019,"content":"                landmarkFeatureStorage?.cleanup()"},{"type":"INSERT","lineNumber":1020,"content":"                "},{"type":"INSERT","lineNumber":1021,"content":"                Log.i(TAG, \"RouteViewModel bereinigt\")"},{"type":"INSERT","lineNumber":1022,"content":"            } catch (e: Exception) {"},{"type":"INSERT","lineNumber":1025,"content":"        }"},{"type":"DELETE","lineNumber":967,"oldContent":"                Log.e(TAG, \"Fehler beim Bereinigen: ${e.message}\")"},{"type":"DELETE","lineNumber":968,"oldContent":"            } catch (e: Exception) {"},{"type":"DELETE","lineNumber":969,"oldContent":"                "},{"type":"DELETE","lineNumber":970,"oldContent":"    fun startFrameProcessing() {"},{"type":"DELETE","lineNumber":971,"oldContent":"                // Bereinige Feature-Storage Cache"},{"type":"DELETE","lineNumber":972,"oldContent":"                storageManager?.logPerformanceSummary()"},{"type":"DELETE","lineNumber":973,"oldContent":"        return steps.find { it.stepNumber == currentStepNumber }"},{"type":"DELETE","lineNumber":974,"oldContent":"        val currentStepNumber = _currentNavigationStep.value"},{"type":"DELETE","lineNumber":975,"oldContent":"    "},{"type":"DELETE","lineNumber":976,"oldContent":"        val steps = getCurrentNavigationSteps()"},{"type":"INSERT","lineNumber":1027,"content":"}"}]},{"timestamp":1754345899986,"changes":[{"type":"MODIFY","lineNumber":8,"content":"import kotlinx.coroutines.flow.StateFlow","oldContent":"import com.google.gson.Gson"},{"type":"INSERT","lineNumber":9,"content":"import kotlinx.coroutines.flow.asStateFlow"},{"type":"DELETE","lineNumber":10,"oldContent":"import kotlinx.coroutines.flow.MutableStateFlow"},{"type":"DELETE","lineNumber":21,"oldContent":"    // State für Feature-Navigation"},{"type":"DELETE","lineNumber":22,"oldContent":"    private val _featureNavigationRoute = MutableStateFlow<FeatureNavigationRoute?>(null)"},{"type":"INSERT","lineNumber":21,"content":" * ViewModel für Route-Management und Feature-Mapping"},{"type":"INSERT","lineNumber":22,"content":" * Verwendet das neue Storage-System - kein Trainingsmodus erforderlich!"},{"type":"DELETE","lineNumber":28,"oldContent":"    private val _isFeatureMappingEnabled = MutableStateFlow(false)"},{"type":"DELETE","lineNumber":29,"oldContent":"    val isFeatureMappingEnabled: StateFlow<Boolean> = _isFeatureMappingEnabled.asStateFlow()"},{"type":"INSERT","lineNumber":28,"content":"    // Neues Storage-System (ersetzt LocalFeatureMapManager)"},{"type":"INSERT","lineNumber":29,"content":"    private var storageManager: ArWalkingStorageManager? = null"},{"type":"DELETE","lineNumber":75,"oldContent":"            // Initialisiere Storage-System"},{"type":"DELETE","lineNumber":76,"oldContent":"            if (storageManager == null) {"},{"type":"DELETE","lineNumber":77,"oldContent":"                storageManager = ArWalkingStorageManager(context)"},{"type":"DELETE","lineNumber":78,"oldContent":"                Log.d(TAG, \"StorageManager initialisiert\")"},{"type":"DELETE","lineNumber":79,"oldContent":"            }"},{"type":"INSERT","lineNumber":75,"content":"            // Verwende die bestehende initializeStorage-Funktion"},{"type":"INSERT","lineNumber":76,"content":"            initializeStorage(context)"},{"type":"DELETE","lineNumber":81,"oldContent":"            // Initialisiere Feature-Matching-Systeme"},{"type":"DELETE","lineNumber":82,"oldContent":"            initializeFeatureMatchingSystems(context)"},{"type":"DELETE","lineNumber":83,"oldContent":"            "},{"type":"INSERT","lineNumber":85,"content":"     * Initialisiert die Feature-Matching-Systeme"},{"type":"DELETE","lineNumber":92,"oldContent":"     */"},{"type":"DELETE","lineNumber":117,"oldContent":"    fun loadNavigationRoute(context: Context): NavigationRoute? {"},{"type":"DELETE","lineNumber":119,"oldContent":"        return try {"},{"type":"INSERT","lineNumber":113,"content":"    }"},{"type":"INSERT","lineNumber":114,"content":""},{"type":"INSERT","lineNumber":115,"content":"    /**"},{"type":"INSERT","lineNumber":116,"content":"     * Lädt die Route aus der JSON-Datei"},{"type":"INSERT","lineNumber":117,"content":"     */"},{"type":"INSERT","lineNumber":118,"content":"    fun loadNavigationRoute(context: Context): NavigationRoute? {"},{"type":"INSERT","lineNumber":119,"content":"        return try {"},{"type":"DELETE","lineNumber":123,"oldContent":"    }"},{"type":"DELETE","lineNumber":126,"oldContent":""},{"type":"DELETE","lineNumber":128,"oldContent":"    /**"},{"type":"DELETE","lineNumber":131,"oldContent":"     * Lädt die Route aus der JSON-Datei"},{"type":"DELETE","lineNumber":133,"oldContent":"     */"},{"type":"DELETE","lineNumber":167,"oldContent":"            "},{"type":"INSERT","lineNumber":162,"content":"            "},{"type":"DELETE","lineNumber":170,"oldContent":"    "},{"type":"DELETE","lineNumber":172,"oldContent":"    /**"},{"type":"DELETE","lineNumber":175,"oldContent":"     * Loggt Informationen über die geladene NavigationRoute"},{"type":"INSERT","lineNumber":168,"content":"    "},{"type":"INSERT","lineNumber":169,"content":"    /**"},{"type":"INSERT","lineNumber":170,"content":"     * Loggt Informationen über die geladene NavigationRoute"},{"type":"INSERT","lineNumber":189,"content":"    }"},{"type":"DELETE","lineNumber":196,"oldContent":"    "},{"type":"INSERT","lineNumber":192,"content":"     * Konvertiert RouteData zu NavigationRoute"},{"type":"DELETE","lineNumber":199,"oldContent":"     */"},{"type":"INSERT","lineNumber":196,"content":"        var stepNumber = 1"},{"type":"DELETE","lineNumber":203,"oldContent":"        "},{"type":"DELETE","lineNumber":226,"oldContent":"        return NavigationRoute("},{"type":"INSERT","lineNumber":221,"content":"        return NavigationRoute("},{"type":"DELETE","lineNumber":243,"oldContent":"            try {"},{"type":"INSERT","lineNumber":238,"content":"            try {"},{"type":"DELETE","lineNumber":246,"oldContent":"                featureMatchingEngine = FeatureMatchingEngine()"},{"type":"DELETE","lineNumber":248,"oldContent":"                landmarkFeatureStorage = LandmarkFeatureStorage(context)"},{"type":"DELETE","lineNumber":251,"oldContent":"                arTrackingSystem = ARTrackingSystem()"},{"type":"DELETE","lineNumber":253,"oldContent":"                "},{"type":"INSERT","lineNumber":245,"content":"                featureMatchingEngine = FeatureMatchingEngine()"},{"type":"INSERT","lineNumber":246,"content":"                landmarkFeatureStorage = LandmarkFeatureStorage(context)"},{"type":"INSERT","lineNumber":247,"content":"                arTrackingSystem = ARTrackingSystem()"},{"type":"INSERT","lineNumber":248,"content":"                "},{"type":"DELETE","lineNumber":299,"oldContent":"     * Lädt verfügbare Landmarks aus dem Projektverzeichnis"},{"type":"DELETE","lineNumber":301,"oldContent":"     */"},{"type":"DELETE","lineNumber":304,"oldContent":"    fun loadAvailableLandmarks(context: Context) {"},{"type":"INSERT","lineNumber":297,"content":"     * Lädt verfügbare Landmarks aus dem Projektverzeichnis"},{"type":"INSERT","lineNumber":298,"content":"     */"},{"type":"INSERT","lineNumber":299,"content":"    fun loadAvailableLandmarks(context: Context) {"},{"type":"DELETE","lineNumber":339,"oldContent":"}"},{"type":"INSERT","lineNumber":333,"content":"                return null"},{"type":"DELETE","lineNumber":341,"oldContent":"        }"},{"type":"INSERT","lineNumber":335,"content":"            "},{"type":"INSERT","lineNumber":336,"content":"            val image = storageManager!!.loadFullImage(landmarkId)"},{"type":"INSERT","lineNumber":337,"content":"            if (image != null) {"},{"type":"INSERT","lineNumber":338,"content":"                Log.d(TAG, \"Landmark-Bild geladen: $landmarkId (${image.width}x${image.height})\")"},{"type":"INSERT","lineNumber":339,"content":"            } else {"},{"type":"INSERT","lineNumber":340,"content":"                Log.w(TAG, \"Landmark-Bild nicht gefunden: $landmarkId\")"},{"type":"DELETE","lineNumber":343,"oldContent":"                Log.e(TAG, \"Fehler beim Bereinigen: ${e.message}\")"},{"type":"DELETE","lineNumber":344,"oldContent":"            } catch (e: Exception) {"},{"type":"DELETE","lineNumber":345,"oldContent":"                Log.i(TAG, \"RouteViewModel bereinigt\")"},{"type":"DELETE","lineNumber":346,"oldContent":"                "},{"type":"DELETE","lineNumber":347,"oldContent":"                landmarkFeatureStorage?.cleanup()"},{"type":"DELETE","lineNumber":348,"oldContent":"                // Bereinige Feature-Storage Cache"},{"type":"DELETE","lineNumber":349,"oldContent":"        viewModelScope.launch {"},{"type":"DELETE","lineNumber":350,"oldContent":"        super.onCleared()"},{"type":"INSERT","lineNumber":342,"content":"            image"},{"type":"INSERT","lineNumber":343,"content":"        } catch (e: Exception) {"},{"type":"INSERT","lineNumber":344,"content":"            Log.e(TAG, \"Fehler beim Laden des Landmark-Bildes $landmarkId: ${e.message}\")"},{"type":"DELETE","lineNumber":356,"oldContent":""},{"type":"DELETE","lineNumber":357,"oldContent":"    "},{"type":"DELETE","lineNumber":358,"oldContent":"    }"},{"type":"DELETE","lineNumber":359,"oldContent":"        return \"Haupteingang\""},{"type":"DELETE","lineNumber":360,"oldContent":"        Log.d(TAG, \"getCurrentEndPoint called (stub)\")"},{"type":"DELETE","lineNumber":361,"oldContent":"    fun getCurrentEndPoint(): String {"},{"type":"DELETE","lineNumber":362,"oldContent":"    }"},{"type":"INSERT","lineNumber":350,"content":"     * Lädt ein Landmark-Thumbnail für die Anzeige"},{"type":"INSERT","lineNumber":351,"content":"     */"},{"type":"INSERT","lineNumber":352,"content":"    suspend fun loadLandmarkThumbnail(landmarkId: String): Bitmap? {"},{"type":"INSERT","lineNumber":353,"content":"        return try {"},{"type":"INSERT","lineNumber":354,"content":"            if (storageManager == null) {"},{"type":"INSERT","lineNumber":355,"content":"                Log.w(TAG, \"Storage-Manager nicht initialisiert\")"},{"type":"INSERT","lineNumber":356,"content":"                return null"},{"type":"DELETE","lineNumber":427,"oldContent":"        for (pathItem in currentRoute.route.path) {"},{"type":"INSERT","lineNumber":421,"content":"     * Prüft ob die App im Emulator läuft"},{"type":"INSERT","lineNumber":432,"content":"    }"},{"type":"INSERT","lineNumber":434,"content":""},{"type":"DELETE","lineNumber":440,"oldContent":"    "},{"type":"DELETE","lineNumber":441,"oldContent":"    "},{"type":"DELETE","lineNumber":457,"oldContent":"    }"},{"type":"DELETE","lineNumber":458,"oldContent":"        }"},{"type":"INSERT","lineNumber":451,"content":"     * Löscht ein Landmark - verwendet neues Storage-System"},{"type":"INSERT","lineNumber":452,"content":"     */"},{"type":"DELETE","lineNumber":464,"oldContent":"                // Bereinige Feature-Storage Cache"},{"type":"DELETE","lineNumber":465,"oldContent":"    "},{"type":"INSERT","lineNumber":458,"content":"     * Gibt Performance-Informationen zurück"},{"type":"INSERT","lineNumber":459,"content":"     */"},{"type":"INSERT","lineNumber":492,"content":"                }"},{"type":"DELETE","lineNumber":500,"oldContent":"                }"},{"type":"DELETE","lineNumber":502,"oldContent":"    "},{"type":"DELETE","lineNumber":504,"oldContent":""},{"type":"DELETE","lineNumber":506,"oldContent":"    "},{"type":"INSERT","lineNumber":499,"content":"    "},{"type":"INSERT","lineNumber":500,"content":""},{"type":"INSERT","lineNumber":501,"content":"    "},{"type":"INSERT","lineNumber":502,"content":"    /**"},{"type":"MODIFY","lineNumber":511,"content":"    /**","oldContent":"    /**"},{"type":"DELETE","lineNumber":518,"oldContent":"     * Geht zum vorherigen Navigationsschritt"},{"type":"DELETE","lineNumber":582,"oldContent":"        }"},{"type":"INSERT","lineNumber":576,"content":"                        instruction = \"Gehen Sie geradeaus zum Haupteingang\","},{"type":"DELETE","lineNumber":584,"oldContent":"            } catch (e: Exception) {"},{"type":"DELETE","lineNumber":585,"oldContent":"                Log.i(TAG, \"RouteViewModel bereinigt\")"},{"type":"DELETE","lineNumber":586,"oldContent":"                "},{"type":"INSERT","lineNumber":578,"content":"                    ),"},{"type":"INSERT","lineNumber":579,"content":"                    FeatureNavigationStep("},{"type":"INSERT","lineNumber":580,"content":"                        stepNumber = 2,"},{"type":"INSERT","lineNumber":618,"content":"        }"},{"type":"INSERT","lineNumber":619,"content":"        "},{"type":"DELETE","lineNumber":626,"oldContent":"        }"},{"type":"DELETE","lineNumber":628,"oldContent":"        "},{"type":"DELETE","lineNumber":641,"oldContent":"                } else {"},{"type":"DELETE","lineNumber":643,"oldContent":"                    _currentMatches.value = emptyList()"},{"type":"DELETE","lineNumber":644,"oldContent":"                }"},{"type":"INSERT","lineNumber":638,"content":"                } else {"},{"type":"INSERT","lineNumber":640,"content":"                    _currentMatches.value = emptyList()"},{"type":"INSERT","lineNumber":641,"content":"                }"},{"type":"DELETE","lineNumber":650,"oldContent":"     * Generiert simulierte Feature-Matches basierend auf der aktuellen Route"},{"type":"DELETE","lineNumber":652,"oldContent":"     */"},{"type":"INSERT","lineNumber":646,"content":"        }"},{"type":"INSERT","lineNumber":647,"content":"    }"},{"type":"INSERT","lineNumber":648,"content":"    "},{"type":"INSERT","lineNumber":649,"content":"    /**"},{"type":"INSERT","lineNumber":650,"content":"     * Generiert simulierte Feature-Matches basierend auf der aktuellen Route"},{"type":"INSERT","lineNumber":651,"content":"     */"},{"type":"DELETE","lineNumber":656,"oldContent":"        }"},{"type":"DELETE","lineNumber":658,"oldContent":"    }"},{"type":"DELETE","lineNumber":661,"oldContent":"    "},{"type":"DELETE","lineNumber":663,"oldContent":"    /**"},{"type":"INSERT","lineNumber":697,"content":"     * Gibt einen benutzerfreundlichen Namen für eine Landmark-ID zurück"},{"type":"DELETE","lineNumber":704,"oldContent":"     */"},{"type":"DELETE","lineNumber":717,"oldContent":"    /**"},{"type":"INSERT","lineNumber":712,"content":"    /**"},{"type":"DELETE","lineNumber":738,"oldContent":"        // Aktualisiere Matches für den neuen Schritt"},{"type":"INSERT","lineNumber":733,"content":"        "},{"type":"INSERT","lineNumber":734,"content":"        // Aktualisiere Matches für den neuen Schritt"},{"type":"DELETE","lineNumber":742,"oldContent":"        "},{"type":"DELETE","lineNumber":773,"oldContent":"    /**"},{"type":"DELETE","lineNumber":775,"oldContent":"     * Gibt den aktuellen Status der RouteViewModel zurück"},{"type":"DELETE","lineNumber":777,"oldContent":"     */"},{"type":"DELETE","lineNumber":779,"oldContent":"    fun getStatus(): String {"},{"type":"DELETE","lineNumber":781,"oldContent":"        val route = _currentRoute.value"},{"type":"DELETE","lineNumber":783,"oldContent":"        val step = _currentNavigationStep.value"},{"type":"DELETE","lineNumber":785,"oldContent":"        val totalSteps = getCurrentNavigationSteps().size"},{"type":"DELETE","lineNumber":787,"oldContent":"        val matchesCount = _currentMatches.value.size"},{"type":"DELETE","lineNumber":789,"oldContent":"        val isFeatureMappingEnabled = _isFeatureMappingEnabled.value"},{"type":"INSERT","lineNumber":776,"content":"        Log.i(TAG, \"Navigation gestartet\")"},{"type":"INSERT","lineNumber":777,"content":"        setCurrentNavigationStep(1)"},{"type":"INSERT","lineNumber":778,"content":"        setFeatureMappingEnabled(true)"},{"type":"INSERT","lineNumber":779,"content":"    }"},{"type":"INSERT","lineNumber":780,"content":"    "},{"type":"INSERT","lineNumber":781,"content":"    /**"},{"type":"INSERT","lineNumber":782,"content":"     * Stoppt die Navigation"},{"type":"INSERT","lineNumber":783,"content":"     */"},{"type":"INSERT","lineNumber":784,"content":"    fun stopNavigation() {"},{"type":"INSERT","lineNumber":785,"content":"        Log.i(TAG, \"Navigation gestoppt\")"},{"type":"INSERT","lineNumber":786,"content":"        setFeatureMappingEnabled(false)"},{"type":"INSERT","lineNumber":787,"content":"        _currentMatches.value = emptyList()"},{"type":"INSERT","lineNumber":788,"content":"    }"},{"type":"INSERT","lineNumber":789,"content":"    "},{"type":"INSERT","lineNumber":790,"content":"    /**"},{"type":"INSERT","lineNumber":791,"content":"     * Gibt den aktuellen Status der RouteViewModel zurück"},{"type":"INSERT","lineNumber":792,"content":"     */"},{"type":"INSERT","lineNumber":793,"content":"    fun getStatus(): String {"},{"type":"INSERT","lineNumber":794,"content":"        val route = _currentRoute.value"},{"type":"INSERT","lineNumber":795,"content":"        val step = _currentNavigationStep.value"},{"type":"INSERT","lineNumber":796,"content":"        val totalSteps = getCurrentNavigationSteps().size"},{"type":"INSERT","lineNumber":797,"content":"        val matchesCount = _currentMatches.value.size"},{"type":"INSERT","lineNumber":798,"content":"        val isFeatureMappingEnabled = _isFeatureMappingEnabled.value"},{"type":"DELETE","lineNumber":793,"oldContent":"        Log.i(TAG, \"Navigation gestartet\")"},{"type":"DELETE","lineNumber":796,"oldContent":"        setCurrentNavigationStep(1)"},{"type":"DELETE","lineNumber":798,"oldContent":"        setFeatureMappingEnabled(true)"},{"type":"DELETE","lineNumber":801,"oldContent":"    }"},{"type":"DELETE","lineNumber":804,"oldContent":"    "},{"type":"DELETE","lineNumber":806,"oldContent":"    /**"},{"type":"DELETE","lineNumber":809,"oldContent":"     * Stoppt die Navigation"},{"type":"DELETE","lineNumber":812,"oldContent":"     */"},{"type":"DELETE","lineNumber":814,"oldContent":"    fun stopNavigation() {"},{"type":"DELETE","lineNumber":817,"oldContent":"        Log.i(TAG, \"Navigation gestoppt\")"},{"type":"DELETE","lineNumber":819,"oldContent":"        setFeatureMappingEnabled(false)"},{"type":"DELETE","lineNumber":822,"oldContent":"        _currentMatches.value = emptyList()"},{"type":"DELETE","lineNumber":825,"oldContent":"    }"},{"type":"DELETE","lineNumber":827,"oldContent":"    "},{"type":"DELETE","lineNumber":829,"oldContent":"                    // Füge nur hinzu, wenn nicht bereits in der Route vorhanden"},{"type":"DELETE","lineNumber":831,"oldContent":"                    if (routeLandmarks.none { it.id == landmarkInfo.id }) {"},{"type":"DELETE","lineNumber":833,"oldContent":"                        routeLandmarks.add("},{"type":"DELETE","lineNumber":835,"oldContent":"                            FeatureLandmark("},{"type":"DELETE","lineNumber":837,"oldContent":"                                id = landmarkInfo.id, // Exakte ID aus Dateiname"},{"type":"DELETE","lineNumber":839,"oldContent":"                                name = landmarkInfo.filename.substringBeforeLast('.'),"},{"type":"DELETE","lineNumber":841,"oldContent":"                                description = \"Verfügbares Landmark\","},{"type":"DELETE","lineNumber":843,"oldContent":"                            )"},{"type":"DELETE","lineNumber":845,"oldContent":"                        )"},{"type":"DELETE","lineNumber":847,"oldContent":"                    }"},{"type":"DELETE","lineNumber":849,"oldContent":"                }"},{"type":"DELETE","lineNumber":851,"oldContent":"            }"},{"type":"DELETE","lineNumber":853,"oldContent":"        }"},{"type":"DELETE","lineNumber":855,"oldContent":"    }"},{"type":"DELETE","lineNumber":858,"oldContent":"    "},{"type":"DELETE","lineNumber":859,"oldContent":"    /**"},{"type":"DELETE","lineNumber":861,"oldContent":"        }"},{"type":"DELETE","lineNumber":863,"oldContent":"    }"},{"type":"DELETE","lineNumber":865,"oldContent":"     */"},{"type":"DELETE","lineNumber":867,"oldContent":"    "},{"type":"DELETE","lineNumber":869,"oldContent":"    /**"},{"type":"DELETE","lineNumber":872,"oldContent":"     */"},{"type":"DELETE","lineNumber":874,"oldContent":"        viewModelScope.launch {"},{"type":"DELETE","lineNumber":876,"oldContent":"            val currentRoute = _currentRoute.value"},{"type":"DELETE","lineNumber":878,"oldContent":"            if (currentRoute != null) {"},{"type":"DELETE","lineNumber":880,"oldContent":"                reloadLandmarksForRoute(currentRoute.route)"},{"type":"DELETE","lineNumber":882,"oldContent":"            }"},{"type":"DELETE","lineNumber":884,"oldContent":"        }"},{"type":"DELETE","lineNumber":886,"oldContent":"    }"},{"type":"DELETE","lineNumber":888,"oldContent":"    "},{"type":"DELETE","lineNumber":891,"oldContent":"    /**"},{"type":"DELETE","lineNumber":894,"oldContent":"     * Gibt die aktuell geladenen Landmark-IDs zurück (für Debugging)"},{"type":"DELETE","lineNumber":896,"oldContent":"     */"},{"type":"DELETE","lineNumber":898,"oldContent":"    fun getCurrentlyLoadedLandmarkIds(): List<String> {"},{"type":"DELETE","lineNumber":902,"oldContent":"        Log.d(TAG, \"getCurrentlyLoadedLandmarkIds called (stub)\")"},{"type":"DELETE","lineNumber":907,"oldContent":"        return emptyList()"},{"type":"DELETE","lineNumber":911,"oldContent":"    }"},{"type":"DELETE","lineNumber":912,"oldContent":"    "},{"type":"DELETE","lineNumber":913,"oldContent":"    /**"},{"type":"DELETE","lineNumber":914,"oldContent":"     * Gibt die Landmark-IDs zurück, die in der aktuellen Route benötigt werden"},{"type":"INSERT","lineNumber":869,"content":"                    // Füge nur hinzu, wenn nicht bereits in der Route vorhanden"},{"type":"INSERT","lineNumber":870,"content":"                    if (routeLandmarks.none { it.id == landmarkInfo.id }) {"},{"type":"INSERT","lineNumber":871,"content":"                        routeLandmarks.add("},{"type":"INSERT","lineNumber":872,"content":"                            FeatureLandmark("},{"type":"INSERT","lineNumber":873,"content":"                                id = landmarkInfo.id, // Exakte ID aus Dateiname"},{"type":"INSERT","lineNumber":874,"content":"                                name = landmarkInfo.filename.substringBeforeLast('.'),"},{"type":"INSERT","lineNumber":875,"content":"                                description = \"Verfügbares Landmark\","},{"type":"DELETE","lineNumber":916,"oldContent":"     */"},{"type":"DELETE","lineNumber":918,"oldContent":"    fun getRequiredLandmarkIds(): List<String> {"},{"type":"DELETE","lineNumber":919,"oldContent":"        val currentRoute = _currentRoute.value ?: return emptyList()"},{"type":"INSERT","lineNumber":878,"content":"                            )"},{"type":"INSERT","lineNumber":879,"content":"                        )"},{"type":"INSERT","lineNumber":880,"content":"                    }"},{"type":"INSERT","lineNumber":881,"content":"                }"},{"type":"INSERT","lineNumber":882,"content":"            }"},{"type":"DELETE","lineNumber":922,"oldContent":"        "},{"type":"DELETE","lineNumber":925,"oldContent":"        val landmarkIds = mutableSetOf<String>()"},{"type":"DELETE","lineNumber":928,"oldContent":"        for (pathItem in currentRoute.route.path) {"},{"type":"DELETE","lineNumber":931,"oldContent":"            for (routePart in pathItem.routeParts) {"},{"type":"DELETE","lineNumber":934,"oldContent":"                routePart.landmarks?.forEach { landmark ->"},{"type":"DELETE","lineNumber":935,"oldContent":"                    landmarkIds.add(landmark) // landmarks ist bereits List<String>"},{"type":"DELETE","lineNumber":936,"oldContent":"                }"},{"type":"INSERT","lineNumber":893,"content":"        }"},{"type":"INSERT","lineNumber":894,"content":"    }"},{"type":"INSERT","lineNumber":895,"content":"    "},{"type":"INSERT","lineNumber":896,"content":"    /**"},{"type":"DELETE","lineNumber":939,"oldContent":"            }"},{"type":"DELETE","lineNumber":941,"oldContent":"        }"},{"type":"DELETE","lineNumber":943,"oldContent":"        "},{"type":"DELETE","lineNumber":946,"oldContent":"        return landmarkIds.toList()"},{"type":"DELETE","lineNumber":949,"oldContent":"    }"},{"type":"DELETE","lineNumber":951,"oldContent":""},{"type":"DELETE","lineNumber":954,"oldContent":"    /**"},{"type":"DELETE","lineNumber":957,"oldContent":"     * Fehlende Methoden für Navigation.kt"},{"type":"DELETE","lineNumber":958,"oldContent":"     */"},{"type":"INSERT","lineNumber":910,"content":"        }"},{"type":"INSERT","lineNumber":911,"content":"    }"},{"type":"DELETE","lineNumber":961,"oldContent":"    fun enableStorageSystemImmediately(context: Context) {"},{"type":"DELETE","lineNumber":964,"oldContent":"        Log.d(TAG, \"enableStorageSystemImmediately called (stub)\")"},{"type":"DELETE","lineNumber":966,"oldContent":"        // Stub implementation - verhindert Crashes"},{"type":"INSERT","lineNumber":917,"content":"     */"},{"type":"DELETE","lineNumber":969,"oldContent":"    }"},{"type":"DELETE","lineNumber":972,"oldContent":"    "},{"type":"DELETE","lineNumber":975,"oldContent":"        Log.d(TAG, \"startFrameProcessing called (stub)\")"},{"type":"INSERT","lineNumber":926,"content":"    "},{"type":"INSERT","lineNumber":927,"content":"    /**"},{"type":"INSERT","lineNumber":928,"content":"     * Aktualisiert Landmarks wenn sich die aktuelle Route ändert"},{"type":"INSERT","lineNumber":929,"content":"     */"},{"type":"INSERT","lineNumber":930,"content":"    fun updateLandmarksForCurrentRoute() {"},{"type":"INSERT","lineNumber":931,"content":"        viewModelScope.launch {"},{"type":"INSERT","lineNumber":932,"content":"            val currentRoute = _currentRoute.value"},{"type":"INSERT","lineNumber":933,"content":"            if (currentRoute != null) {"},{"type":"INSERT","lineNumber":934,"content":"                reloadLandmarksForRoute(currentRoute.route)"},{"type":"INSERT","lineNumber":935,"content":"            }"},{"type":"INSERT","lineNumber":936,"content":"        }"},{"type":"INSERT","lineNumber":937,"content":"    }"},{"type":"INSERT","lineNumber":938,"content":"    "},{"type":"INSERT","lineNumber":939,"content":"    /**"},{"type":"INSERT","lineNumber":940,"content":"     * Gibt die aktuell geladenen Landmark-IDs zurück (für Debugging)"},{"type":"INSERT","lineNumber":941,"content":"     */"},{"type":"INSERT","lineNumber":942,"content":"    fun getCurrentlyLoadedLandmarkIds(): List<String> {"},{"type":"INSERT","lineNumber":943,"content":"        Log.d(TAG, \"getCurrentlyLoadedLandmarkIds called (stub)\")"},{"type":"INSERT","lineNumber":944,"content":"        return emptyList()"},{"type":"INSERT","lineNumber":945,"content":"    }"},{"type":"INSERT","lineNumber":946,"content":"    "},{"type":"INSERT","lineNumber":947,"content":"    /**"},{"type":"INSERT","lineNumber":948,"content":"     * Gibt die Landmark-IDs zurück, die in der aktuellen Route benötigt werden"},{"type":"INSERT","lineNumber":949,"content":"     */"},{"type":"INSERT","lineNumber":950,"content":"    fun getRequiredLandmarkIds(): List<String> {"},{"type":"INSERT","lineNumber":951,"content":"        val currentRoute = _currentRoute.value ?: return emptyList()"},{"type":"INSERT","lineNumber":952,"content":"        "},{"type":"INSERT","lineNumber":953,"content":"        val landmarkIds = mutableSetOf<String>()"},{"type":"INSERT","lineNumber":954,"content":"        for (pathItem in currentRoute.route.path) {"},{"type":"INSERT","lineNumber":955,"content":"            for (routePart in pathItem.routeParts) {"},{"type":"INSERT","lineNumber":956,"content":"                routePart.landmarks?.forEach { landmark ->"},{"type":"INSERT","lineNumber":957,"content":"                    landmarkIds.add(landmark) // landmarks ist bereits List<String>"},{"type":"INSERT","lineNumber":958,"content":"                }"},{"type":"INSERT","lineNumber":959,"content":"            }"},{"type":"INSERT","lineNumber":960,"content":"        }"},{"type":"INSERT","lineNumber":961,"content":"        "},{"type":"INSERT","lineNumber":962,"content":"        return landmarkIds.toList()"},{"type":"INSERT","lineNumber":963,"content":"    }"},{"type":"INSERT","lineNumber":964,"content":""},{"type":"INSERT","lineNumber":965,"content":"    /**"},{"type":"INSERT","lineNumber":966,"content":"     * Fehlende Methoden für Navigation.kt"},{"type":"INSERT","lineNumber":967,"content":"     */"},{"type":"INSERT","lineNumber":968,"content":"    fun enableStorageSystemImmediately(context: Context) {"},{"type":"INSERT","lineNumber":969,"content":"        Log.d(TAG, \"enableStorageSystemImmediately called (stub)\")"},{"type":"DELETE","lineNumber":980,"oldContent":"     * Aktualisiert Landmarks wenn sich die aktuelle Route ändert"},{"type":"INSERT","lineNumber":972,"content":"    "},{"type":"INSERT","lineNumber":973,"content":"    fun startFrameProcessing() {"},{"type":"INSERT","lineNumber":974,"content":"        Log.d(TAG, \"startFrameProcessing called (stub)\")"},{"type":"INSERT","lineNumber":975,"content":"        // Stub implementation - verhindert Crashes"},{"type":"INSERT","lineNumber":976,"content":"    }"},{"type":"INSERT","lineNumber":977,"content":"    "},{"type":"DELETE","lineNumber":983,"oldContent":"    fun updateLandmarksForCurrentRoute() {"},{"type":"DELETE","lineNumber":994,"oldContent":"}"},{"type":"DELETE","lineNumber":995,"oldContent":"        }"},{"type":"DELETE","lineNumber":996,"oldContent":"                Log.e(TAG, \"Fehler beim Bereinigen: ${e.message}\")"},{"type":"DELETE","lineNumber":997,"oldContent":"                Log.i(TAG, \"RouteViewModel bereinigt\")"},{"type":"INSERT","lineNumber":990,"content":"        _currentNavigationStep.value = step"},{"type":"INSERT","lineNumber":991,"content":"    }"},{"type":"INSERT","lineNumber":993,"content":"    fun getCurrentStep(): NavigationStep? {"},{"type":"INSERT","lineNumber":994,"content":"        Log.d(TAG, \"getCurrentStep called (stub)\")"},{"type":"INSERT","lineNumber":995,"content":"        val steps = getCurrentNavigationSteps()"},{"type":"INSERT","lineNumber":996,"content":"        val currentStepNumber = _currentNavigationStep.value"},{"type":"INSERT","lineNumber":997,"content":"        return steps.find { it.stepNumber == currentStepNumber }"},{"type":"INSERT","lineNumber":998,"content":"    }"},{"type":"INSERT","lineNumber":999,"content":"    "},{"type":"DELETE","lineNumber":1004,"oldContent":"    }"},{"type":"DELETE","lineNumber":1005,"oldContent":"            }"},{"type":"DELETE","lineNumber":1006,"oldContent":"                // Bereinige Feature-Storage Cache"},{"type":"DELETE","lineNumber":1007,"oldContent":"}"},{"type":"DELETE","lineNumber":1008,"oldContent":"            } catch (e: Exception) {"},{"type":"INSERT","lineNumber":1005,"content":"    override fun onCleared() {"},{"type":"INSERT","lineNumber":1006,"content":"        super.onCleared()"},{"type":"INSERT","lineNumber":1007,"content":"        viewModelScope.launch {"},{"type":"INSERT","lineNumber":1008,"content":"            try {"},{"type":"INSERT","lineNumber":1009,"content":"                // Storage-Manager bereinigt sich selbst automatisch"},{"type":"INSERT","lineNumber":1010,"content":"                storageManager?.logPerformanceSummary()"},{"type":"DELETE","lineNumber":1010,"oldContent":"                landmarkFeatureStorage?.cleanup()"},{"type":"DELETE","lineNumber":1011,"oldContent":"    fun startFrameProcessing() {"},{"type":"INSERT","lineNumber":1013,"content":"                landmarkFeatureStorage?.cleanup()"},{"type":"DELETE","lineNumber":1014,"oldContent":"                storageManager?.logPerformanceSummary()"},{"type":"DELETE","lineNumber":1015,"oldContent":"                // Storage-Manager bereinigt sich selbst automatisch"},{"type":"DELETE","lineNumber":1016,"oldContent":"    "},{"type":"DELETE","lineNumber":1017,"oldContent":"            try {"},{"type":"DELETE","lineNumber":1018,"oldContent":"        viewModelScope.launch {"},{"type":"DELETE","lineNumber":1019,"oldContent":"        return steps.find { it.stepNumber == currentStepNumber }"},{"type":"DELETE","lineNumber":1020,"oldContent":"        val currentStepNumber = _currentNavigationStep.value"},{"type":"DELETE","lineNumber":1021,"oldContent":"        val steps = getCurrentNavigationSteps()"},{"type":"DELETE","lineNumber":1022,"oldContent":"        Log.d(TAG, \"getCurrentStep called (stub)\")"},{"type":"DELETE","lineNumber":1023,"oldContent":"    fun getCurrentStep(): NavigationStep? {"},{"type":"INSERT","lineNumber":1015,"content":"                Log.i(TAG, \"RouteViewModel bereinigt\")"},{"type":"INSERT","lineNumber":1016,"content":"            } catch (e: Exception) {"},{"type":"INSERT","lineNumber":1017,"content":"                Log.e(TAG, \"Fehler beim Bereinigen: ${e.message}\")"},{"type":"INSERT","lineNumber":1018,"content":"            }"},{"type":"INSERT","lineNumber":1019,"content":"        }"},{"type":"INSERT","lineNumber":1020,"content":"    }"},{"type":"INSERT","lineNumber":1021,"content":"}"}]},{"timestamp":1754345906560,"changes":[{"type":"MODIFY","lineNumber":14,"content":"import com.example.arwalking.storage.ArWalkingStorageManager","oldContent":"class RouteViewModel : ViewModel() {"},{"type":"DELETE","lineNumber":79,"oldContent":"     * Initialisiert die Feature-Matching-Systeme"},{"type":"DELETE","lineNumber":85,"oldContent":"    /**"},{"type":"DELETE","lineNumber":86,"oldContent":"     */"},{"type":"DELETE","lineNumber":87,"oldContent":"    private fun initializeFeatureMatchingSystems(context: Context) {"},{"type":"DELETE","lineNumber":88,"oldContent":"        try {"},{"type":"DELETE","lineNumber":89,"oldContent":"            Log.d(TAG, \"Initialisiere Feature-Matching-Systeme...\")"},{"type":"DELETE","lineNumber":90,"oldContent":"            "},{"type":"DELETE","lineNumber":91,"oldContent":"            // Initialisiere Feature-Matching-Engine"},{"type":"DELETE","lineNumber":92,"oldContent":"            if (featureMatchingEngine == null) {"},{"type":"DELETE","lineNumber":93,"oldContent":"                featureMatchingEngine = FeatureMatchingEngine()"},{"type":"DELETE","lineNumber":94,"oldContent":"                Log.d(TAG, \"FeatureMatchingEngine initialisiert\")"},{"type":"DELETE","lineNumber":95,"oldContent":"            }"},{"type":"DELETE","lineNumber":96,"oldContent":"            "},{"type":"DELETE","lineNumber":97,"oldContent":"            // Initialisiere Landmark-Feature-Storage"},{"type":"DELETE","lineNumber":98,"oldContent":"            if (landmarkFeatureStorage == null) {"},{"type":"DELETE","lineNumber":99,"oldContent":"                landmarkFeatureStorage = LandmarkFeatureStorage(context)"},{"type":"DELETE","lineNumber":100,"oldContent":"                Log.d(TAG, \"LandmarkFeatureStorage initialisiert\")"},{"type":"DELETE","lineNumber":101,"oldContent":"            }"},{"type":"DELETE","lineNumber":102,"oldContent":"            "},{"type":"DELETE","lineNumber":103,"oldContent":"            // Initialisiere AR-Tracking-System"},{"type":"DELETE","lineNumber":104,"oldContent":"            if (arTrackingSystem == null) {"},{"type":"DELETE","lineNumber":105,"oldContent":"                arTrackingSystem = ARTrackingSystem()"},{"type":"DELETE","lineNumber":106,"oldContent":"                Log.d(TAG, \"ARTrackingSystem initialisiert\")"},{"type":"DELETE","lineNumber":107,"oldContent":"    }"},{"type":"DELETE","lineNumber":108,"oldContent":"            }"},{"type":"DELETE","lineNumber":110,"oldContent":"            "},{"type":"INSERT","lineNumber":85,"content":""},{"type":"DELETE","lineNumber":112,"oldContent":"            Log.d(TAG, \"Feature-Matching-Systeme erfolgreich initialisiert\")"},{"type":"DELETE","lineNumber":114,"oldContent":"        } catch (e: Exception) {"},{"type":"DELETE","lineNumber":117,"oldContent":"            Log.e(TAG, \"Fehler bei der Initialisierung der Feature-Matching-Systeme: ${e.message}\")"},{"type":"DELETE","lineNumber":119,"oldContent":"        }"},{"type":"DELETE","lineNumber":156,"oldContent":"            "},{"type":"DELETE","lineNumber":162,"oldContent":"    "},{"type":"DELETE","lineNumber":164,"oldContent":"    /**"},{"type":"INSERT","lineNumber":133,"content":"            "},{"type":"DELETE","lineNumber":166,"oldContent":"     * Loggt Informationen über die geladene NavigationRoute"},{"type":"INSERT","lineNumber":139,"content":"    "},{"type":"INSERT","lineNumber":140,"content":"    /**"},{"type":"INSERT","lineNumber":141,"content":"     * Loggt Informationen über die geladene NavigationRoute"},{"type":"DELETE","lineNumber":183,"oldContent":"    }"},{"type":"DELETE","lineNumber":187,"oldContent":"     * Konvertiert RouteData zu NavigationRoute"},{"type":"INSERT","lineNumber":160,"content":"    }"},{"type":"DELETE","lineNumber":192,"oldContent":"        var stepNumber = 1"},{"type":"INSERT","lineNumber":163,"content":"     * Konvertiert RouteData zu NavigationRoute"},{"type":"INSERT","lineNumber":167,"content":"        var stepNumber = 1"},{"type":"DELETE","lineNumber":215,"oldContent":"        return NavigationRoute("},{"type":"INSERT","lineNumber":192,"content":"        return NavigationRoute("},{"type":"DELETE","lineNumber":232,"oldContent":"            try {"},{"type":"DELETE","lineNumber":239,"oldContent":"                featureMatchingEngine = FeatureMatchingEngine()"},{"type":"INSERT","lineNumber":209,"content":"            try {"},{"type":"DELETE","lineNumber":241,"oldContent":"                landmarkFeatureStorage = LandmarkFeatureStorage(context)"},{"type":"DELETE","lineNumber":242,"oldContent":"                arTrackingSystem = ARTrackingSystem()"},{"type":"DELETE","lineNumber":244,"oldContent":"                "},{"type":"INSERT","lineNumber":216,"content":"                featureMatchingEngine = FeatureMatchingEngine()"},{"type":"INSERT","lineNumber":217,"content":"                landmarkFeatureStorage = LandmarkFeatureStorage(context)"},{"type":"INSERT","lineNumber":218,"content":"                arTrackingSystem = ARTrackingSystem()"},{"type":"INSERT","lineNumber":219,"content":"                "},{"type":"DELETE","lineNumber":291,"oldContent":"     * Lädt verfügbare Landmarks aus dem Projektverzeichnis"},{"type":"DELETE","lineNumber":293,"oldContent":"     */"},{"type":"DELETE","lineNumber":295,"oldContent":"    fun loadAvailableLandmarks(context: Context) {"},{"type":"INSERT","lineNumber":268,"content":"     * Lädt verfügbare Landmarks aus dem Projektverzeichnis"},{"type":"INSERT","lineNumber":269,"content":"     */"},{"type":"INSERT","lineNumber":270,"content":"    fun loadAvailableLandmarks(context: Context) {"},{"type":"DELETE","lineNumber":322,"oldContent":"            \"Storage-Status: ${status.getHealthStatus()}, Bilder: ${status.totalImages}, Cache-Hit-Rate: ${String.format(\"%.1f\", status.cacheHitRate)}%\""},{"type":"INSERT","lineNumber":293,"content":"            }"},{"type":"DELETE","lineNumber":324,"oldContent":"    suspend fun deleteLandmark(landmarkId: String): Boolean {"},{"type":"INSERT","lineNumber":295,"content":"    }"},{"type":"DELETE","lineNumber":327,"oldContent":"                return null"},{"type":"DELETE","lineNumber":328,"oldContent":"     * Lädt ein Vollbild (mit Cache) - verwendet neues Storage-System"},{"type":"INSERT","lineNumber":298,"content":"     * Lädt ein Landmark-Bild für die Anzeige"},{"type":"DELETE","lineNumber":330,"oldContent":"            "},{"type":"INSERT","lineNumber":301,"content":"        return try {"},{"type":"INSERT","lineNumber":302,"content":"            if (storageManager == null) {"},{"type":"INSERT","lineNumber":303,"content":"                Log.w(TAG, \"Storage-Manager nicht initialisiert\")"},{"type":"INSERT","lineNumber":304,"content":"                return null"},{"type":"INSERT","lineNumber":305,"content":"            }"},{"type":"INSERT","lineNumber":306,"content":"            "},{"type":"DELETE","lineNumber":333,"oldContent":""},{"type":"DELETE","lineNumber":335,"oldContent":"    "},{"type":"DELETE","lineNumber":337,"oldContent":"    }"},{"type":"DELETE","lineNumber":342,"oldContent":"        context: Context,"},{"type":"INSERT","lineNumber":316,"content":"            null"},{"type":"INSERT","lineNumber":317,"content":"        }"},{"type":"INSERT","lineNumber":318,"content":"    }"},{"type":"INSERT","lineNumber":319,"content":"    "},{"type":"INSERT","lineNumber":320,"content":"    /**"},{"type":"DELETE","lineNumber":347,"oldContent":"            null"},{"type":"DELETE","lineNumber":349,"oldContent":"    /**"},{"type":"DELETE","lineNumber":351,"oldContent":"    }"},{"type":"DELETE","lineNumber":353,"oldContent":"    "},{"type":"DELETE","lineNumber":355,"oldContent":"    /**"},{"type":"DELETE","lineNumber":358,"oldContent":"        "},{"type":"INSERT","lineNumber":329,"content":"            "},{"type":"DELETE","lineNumber":375,"oldContent":"                "},{"type":"DELETE","lineNumber":376,"oldContent":"                Log.i(TAG, \"Lade verfügbare Storage-Daten...\")"},{"type":"DELETE","lineNumber":377,"oldContent":"    suspend fun cleanup(): CleanupSummary? {"},{"type":"INSERT","lineNumber":346,"content":"    suspend fun addLandmark("},{"type":"INSERT","lineNumber":347,"content":"        context: Context,"},{"type":"INSERT","lineNumber":348,"content":"        bitmap: Bitmap,"},{"type":"DELETE","lineNumber":415,"oldContent":"     * Prüft ob die App im Emulator läuft"},{"type":"INSERT","lineNumber":392,"content":"     * Prüft ob die App im Emulator läuft"},{"type":"DELETE","lineNumber":426,"oldContent":"    }"},{"type":"DELETE","lineNumber":429,"oldContent":""},{"type":"DELETE","lineNumber":433,"oldContent":"            } catch (e: Exception) {"},{"type":"INSERT","lineNumber":402,"content":"                \"google_sdk\" == android.os.Build.PRODUCT)"},{"type":"INSERT","lineNumber":403,"content":"    }"},{"type":"DELETE","lineNumber":435,"oldContent":"                Log.i(TAG, \"Lade verfügbare Storage-Daten...\")"},{"type":"INSERT","lineNumber":405,"content":""},{"type":"INSERT","lineNumber":406,"content":"    "},{"type":"DELETE","lineNumber":443,"oldContent":"                storageManager?.logPerformanceSummary()"},{"type":"INSERT","lineNumber":414,"content":"    /**"},{"type":"DELETE","lineNumber":445,"oldContent":"     * Löscht ein Landmark - verwendet neues Storage-System"},{"type":"DELETE","lineNumber":447,"oldContent":"     */"},{"type":"DELETE","lineNumber":453,"oldContent":"     * Gibt Performance-Informationen zurück"},{"type":"INSERT","lineNumber":422,"content":"     * Löscht ein Landmark - verwendet neues Storage-System"},{"type":"INSERT","lineNumber":429,"content":"     * Gibt Performance-Informationen zurück"},{"type":"INSERT","lineNumber":430,"content":"     */"},{"type":"DELETE","lineNumber":461,"oldContent":"    }"},{"type":"DELETE","lineNumber":462,"oldContent":"            }"},{"type":"INSERT","lineNumber":432,"content":"        return if (storageManager != null) {"},{"type":"INSERT","lineNumber":433,"content":"            val status = runBlocking { storageManager!!.getStorageStatus() }"},{"type":"DELETE","lineNumber":473,"oldContent":"            Log.e(TAG, \"Fehler beim Laden des aktuellen Schritts: ${e.message}\")"},{"type":"INSERT","lineNumber":444,"content":"        return storageManager?.cleanup()"},{"type":"DELETE","lineNumber":481,"oldContent":"            val currentStepNumber = _currentNavigationStep.value"},{"type":"DELETE","lineNumber":482,"oldContent":"        return try {"},{"type":"INSERT","lineNumber":452,"content":"            try {"},{"type":"INSERT","lineNumber":453,"content":"                Log.i(TAG, \"Lade verfügbare Storage-Daten...\")"},{"type":"DELETE","lineNumber":486,"oldContent":"                }"},{"type":"INSERT","lineNumber":463,"content":"                }"},{"type":"DELETE","lineNumber":494,"oldContent":"    "},{"type":"DELETE","lineNumber":496,"oldContent":""},{"type":"DELETE","lineNumber":497,"oldContent":"    "},{"type":"DELETE","lineNumber":499,"oldContent":"    /**"},{"type":"INSERT","lineNumber":470,"content":"    "},{"type":"INSERT","lineNumber":471,"content":""},{"type":"INSERT","lineNumber":472,"content":"    "},{"type":"INSERT","lineNumber":473,"content":"    /**"},{"type":"DELETE","lineNumber":505,"oldContent":"    /**"},{"type":"DELETE","lineNumber":506,"oldContent":"    /**"},{"type":"INSERT","lineNumber":476,"content":"    fun nextNavigationStep() {"},{"type":"INSERT","lineNumber":482,"content":"    /**"},{"type":"DELETE","lineNumber":570,"oldContent":"                        instruction = \"Gehen Sie geradeaus zum Haupteingang\","},{"type":"INSERT","lineNumber":543,"content":"                // Fallback: Erstelle eine Demo-Route mit Feature-Navigation"},{"type":"INSERT","lineNumber":544,"content":"                val demoSteps = listOf("},{"type":"INSERT","lineNumber":545,"content":"                    FeatureNavigationStep("},{"type":"INSERT","lineNumber":546,"content":"                        stepNumber = 1,"},{"type":"INSERT","lineNumber":547,"content":"                        instruction = \"Gehen Sie geradeaus zum Haupteingang\","},{"type":"INSERT","lineNumber":548,"content":"                        landmarks = emptyList()"},{"type":"DELETE","lineNumber":574,"oldContent":"}"},{"type":"DELETE","lineNumber":576,"oldContent":"    }"},{"type":"DELETE","lineNumber":578,"oldContent":"        }"},{"type":"DELETE","lineNumber":579,"oldContent":"            }"},{"type":"DELETE","lineNumber":580,"oldContent":"                        landmarks = emptyList()"},{"type":"DELETE","lineNumber":612,"oldContent":"        }"},{"type":"DELETE","lineNumber":614,"oldContent":"        "},{"type":"INSERT","lineNumber":589,"content":"        }"},{"type":"INSERT","lineNumber":590,"content":"        "},{"type":"DELETE","lineNumber":632,"oldContent":"                } else {"},{"type":"DELETE","lineNumber":635,"oldContent":"                    _currentMatches.value = emptyList()"},{"type":"DELETE","lineNumber":637,"oldContent":"                }"},{"type":"DELETE","lineNumber":640,"oldContent":"        }"},{"type":"DELETE","lineNumber":642,"oldContent":"    }"},{"type":"INSERT","lineNumber":609,"content":"                } else {"},{"type":"DELETE","lineNumber":644,"oldContent":"    "},{"type":"INSERT","lineNumber":611,"content":"                    _currentMatches.value = emptyList()"},{"type":"INSERT","lineNumber":612,"content":"                }"},{"type":"DELETE","lineNumber":646,"oldContent":"    /**"},{"type":"DELETE","lineNumber":648,"oldContent":"     * Generiert simulierte Feature-Matches basierend auf der aktuellen Route"},{"type":"DELETE","lineNumber":649,"oldContent":"     */"},{"type":"INSERT","lineNumber":617,"content":"        }"},{"type":"INSERT","lineNumber":618,"content":"    }"},{"type":"INSERT","lineNumber":619,"content":"    "},{"type":"INSERT","lineNumber":620,"content":"    /**"},{"type":"INSERT","lineNumber":621,"content":"     * Generiert simulierte Feature-Matches basierend auf der aktuellen Route"},{"type":"INSERT","lineNumber":622,"content":"     */"},{"type":"DELETE","lineNumber":691,"oldContent":"     * Gibt einen benutzerfreundlichen Namen für eine Landmark-ID zurück"},{"type":"INSERT","lineNumber":668,"content":"     * Gibt einen benutzerfreundlichen Namen für eine Landmark-ID zurück"},{"type":"DELETE","lineNumber":706,"oldContent":"    /**"},{"type":"INSERT","lineNumber":683,"content":"    /**"},{"type":"DELETE","lineNumber":727,"oldContent":"        "},{"type":"DELETE","lineNumber":729,"oldContent":"        // Aktualisiere Matches für den neuen Schritt"},{"type":"INSERT","lineNumber":704,"content":"        "},{"type":"INSERT","lineNumber":705,"content":"        // Aktualisiere Matches für den neuen Schritt"},{"type":"DELETE","lineNumber":768,"oldContent":"        Log.i(TAG, \"Navigation gestartet\")"},{"type":"DELETE","lineNumber":770,"oldContent":"        setCurrentNavigationStep(1)"},{"type":"DELETE","lineNumber":771,"oldContent":"        setFeatureMappingEnabled(true)"},{"type":"INSERT","lineNumber":743,"content":"    /**"},{"type":"INSERT","lineNumber":744,"content":"     * Startet die Navigation von Anfang an"},{"type":"INSERT","lineNumber":745,"content":"     */"},{"type":"INSERT","lineNumber":746,"content":"    fun startNavigation() {"},{"type":"INSERT","lineNumber":747,"content":"        Log.i(TAG, \"Navigation gestartet\")"},{"type":"INSERT","lineNumber":748,"content":"        setCurrentNavigationStep(1)"},{"type":"INSERT","lineNumber":749,"content":"        setFeatureMappingEnabled(true)"},{"type":"INSERT","lineNumber":751,"content":"    "},{"type":"DELETE","lineNumber":778,"oldContent":"    "},{"type":"DELETE","lineNumber":781,"oldContent":"    /**"},{"type":"DELETE","lineNumber":784,"oldContent":"     * Startet die Navigation von Anfang an"},{"type":"DELETE","lineNumber":787,"oldContent":"     */"},{"type":"DELETE","lineNumber":790,"oldContent":"    fun startNavigation() {"},{"type":"DELETE","lineNumber":792,"oldContent":"        "},{"type":"DELETE","lineNumber":794,"oldContent":"        return buildString {"},{"type":"DELETE","lineNumber":797,"oldContent":"            appendLine(\"=== RouteViewModel Status ===\")"},{"type":"DELETE","lineNumber":799,"oldContent":"            appendLine(\"Route geladen: ${route != null}\")"},{"type":"DELETE","lineNumber":802,"oldContent":"            if (route != null) {"},{"type":"INSERT","lineNumber":770,"content":"        "},{"type":"INSERT","lineNumber":771,"content":"        return buildString {"},{"type":"INSERT","lineNumber":772,"content":"            appendLine(\"=== RouteViewModel Status ===\")"},{"type":"INSERT","lineNumber":773,"content":"            appendLine(\"Route geladen: ${route != null}\")"},{"type":"INSERT","lineNumber":774,"content":"            if (route != null) {"},{"type":"DELETE","lineNumber":843,"oldContent":"                    // Füge nur hinzu, wenn nicht bereits in der Route vorhanden"},{"type":"DELETE","lineNumber":844,"oldContent":"                    if (routeLandmarks.none { it.id == landmarkInfo.id }) {"},{"type":"DELETE","lineNumber":846,"oldContent":"                        routeLandmarks.add("},{"type":"DELETE","lineNumber":848,"oldContent":"                            FeatureLandmark("},{"type":"DELETE","lineNumber":849,"oldContent":"                                id = landmarkInfo.id, // Exakte ID aus Dateiname"},{"type":"DELETE","lineNumber":851,"oldContent":"                                name = landmarkInfo.filename.substringBeforeLast('.'),"},{"type":"DELETE","lineNumber":852,"oldContent":"                                description = \"Verfügbares Landmark\","},{"type":"DELETE","lineNumber":855,"oldContent":"                            )"},{"type":"DELETE","lineNumber":856,"oldContent":"                        )"},{"type":"DELETE","lineNumber":858,"oldContent":"                    }"},{"type":"DELETE","lineNumber":859,"oldContent":"                }"},{"type":"DELETE","lineNumber":861,"oldContent":"            }"},{"type":"DELETE","lineNumber":868,"oldContent":"        }"},{"type":"DELETE","lineNumber":870,"oldContent":"    }"},{"type":"DELETE","lineNumber":871,"oldContent":"    "},{"type":"DELETE","lineNumber":873,"oldContent":"    /**"},{"type":"DELETE","lineNumber":884,"oldContent":"        }"},{"type":"DELETE","lineNumber":886,"oldContent":"    }"},{"type":"INSERT","lineNumber":840,"content":"                    // Füge nur hinzu, wenn nicht bereits in der Route vorhanden"},{"type":"INSERT","lineNumber":841,"content":"                    if (routeLandmarks.none { it.id == landmarkInfo.id }) {"},{"type":"INSERT","lineNumber":842,"content":"                        routeLandmarks.add("},{"type":"INSERT","lineNumber":843,"content":"                            FeatureLandmark("},{"type":"INSERT","lineNumber":844,"content":"                                id = landmarkInfo.id, // Exakte ID aus Dateiname"},{"type":"INSERT","lineNumber":845,"content":"                                name = landmarkInfo.filename.substringBeforeLast('.'),"},{"type":"INSERT","lineNumber":846,"content":"                                description = \"Verfügbares Landmark\","},{"type":"DELETE","lineNumber":888,"oldContent":"     */"},{"type":"INSERT","lineNumber":849,"content":"                            )"},{"type":"INSERT","lineNumber":850,"content":"                        )"},{"type":"INSERT","lineNumber":851,"content":"                    }"},{"type":"INSERT","lineNumber":852,"content":"                }"},{"type":"INSERT","lineNumber":853,"content":"            }"},{"type":"INSERT","lineNumber":858,"content":"            }"},{"type":"INSERT","lineNumber":859,"content":"            "},{"type":"INSERT","lineNumber":860,"content":"            routeLandmarks"},{"type":"INSERT","lineNumber":861,"content":"        } catch (e: Exception) {"},{"type":"INSERT","lineNumber":862,"content":"            Log.e(TAG, \"Fehler beim Laden der verfügbaren Landmarks: ${e.message}\")"},{"type":"INSERT","lineNumber":863,"content":"            emptyList()"},{"type":"INSERT","lineNumber":864,"content":"        }"},{"type":"INSERT","lineNumber":865,"content":"    }"},{"type":"INSERT","lineNumber":867,"content":"    /**"},{"type":"INSERT","lineNumber":868,"content":"     * Gibt die aktuellen Navigationsschritte zurück"},{"type":"INSERT","lineNumber":869,"content":"     */"},{"type":"INSERT","lineNumber":870,"content":"    fun getCurrentNavigationSteps(): List<NavigationStep> {"},{"type":"INSERT","lineNumber":871,"content":"        return try {"},{"type":"INSERT","lineNumber":872,"content":"            val route = _currentRoute.value"},{"type":"INSERT","lineNumber":873,"content":"            if (route != null) {"},{"type":"INSERT","lineNumber":874,"content":"                convertToNavigationRoute(route).steps"},{"type":"INSERT","lineNumber":875,"content":"            } else {"},{"type":"INSERT","lineNumber":876,"content":"                emptyList()"},{"type":"INSERT","lineNumber":878,"content":"        } catch (e: Exception) {"},{"type":"INSERT","lineNumber":879,"content":"            Log.e(TAG, \"Fehler beim Laden der Navigationsschritte: ${e.message}\")"},{"type":"INSERT","lineNumber":880,"content":"            emptyList()"},{"type":"INSERT","lineNumber":881,"content":"        }"},{"type":"INSERT","lineNumber":882,"content":"    }"},{"type":"INSERT","lineNumber":883,"content":""},{"type":"INSERT","lineNumber":884,"content":""},{"type":"INSERT","lineNumber":885,"content":""},{"type":"DELETE","lineNumber":897,"oldContent":"            "},{"type":"INSERT","lineNumber":887,"content":"     * Lädt Landmarks neu für eine spezifische Route (vereinfacht)"},{"type":"INSERT","lineNumber":888,"content":"     */"},{"type":"INSERT","lineNumber":889,"content":"    private suspend fun reloadLandmarksForRoute(route: com.example.arwalking.data.Route) {"},{"type":"INSERT","lineNumber":890,"content":"        try {"},{"type":"INSERT","lineNumber":891,"content":"            Log.d(TAG, \"reloadLandmarksForRoute called (stub)\")"},{"type":"INSERT","lineNumber":892,"content":"            // Stub implementation - verhindert Crashes"},{"type":"INSERT","lineNumber":893,"content":"        } catch (e: Exception) {"},{"type":"INSERT","lineNumber":894,"content":"            Log.e(TAG, \"Fehler beim Neuladen der Route-Landmarks: ${e.message}\")"},{"type":"INSERT","lineNumber":895,"content":"        }"},{"type":"INSERT","lineNumber":896,"content":"    }"},{"type":"INSERT","lineNumber":897,"content":"    "},{"type":"INSERT","lineNumber":898,"content":"    /**"},{"type":"DELETE","lineNumber":900,"oldContent":"            routeLandmarks"},{"type":"DELETE","lineNumber":902,"oldContent":"        } catch (e: Exception) {"},{"type":"DELETE","lineNumber":905,"oldContent":"            Log.e(TAG, \"Fehler beim Laden der verfügbaren Landmarks: ${e.message}\")"},{"type":"DELETE","lineNumber":907,"oldContent":"            emptyList()"},{"type":"DELETE","lineNumber":912,"oldContent":"     * Gibt die aktuellen Navigationsschritte zurück"},{"type":"DELETE","lineNumber":914,"oldContent":"     */"},{"type":"DELETE","lineNumber":917,"oldContent":"    fun getCurrentNavigationSteps(): List<NavigationStep> {"},{"type":"DELETE","lineNumber":920,"oldContent":"        return try {"},{"type":"DELETE","lineNumber":923,"oldContent":"            val route = _currentRoute.value"},{"type":"DELETE","lineNumber":925,"oldContent":"            if (route != null) {"},{"type":"DELETE","lineNumber":928,"oldContent":"                convertToNavigationRoute(route).steps"},{"type":"DELETE","lineNumber":930,"oldContent":"            } else {"},{"type":"DELETE","lineNumber":933,"oldContent":"                emptyList()"},{"type":"DELETE","lineNumber":936,"oldContent":"            }"},{"type":"DELETE","lineNumber":938,"oldContent":"        } catch (e: Exception) {"},{"type":"DELETE","lineNumber":941,"oldContent":"            Log.e(TAG, \"Fehler beim Laden der Navigationsschritte: ${e.message}\")"},{"type":"DELETE","lineNumber":943,"oldContent":"            emptyList()"},{"type":"DELETE","lineNumber":947,"oldContent":""},{"type":"DELETE","lineNumber":949,"oldContent":""},{"type":"DELETE","lineNumber":952,"oldContent":""},{"type":"DELETE","lineNumber":954,"oldContent":"    /**"},{"type":"DELETE","lineNumber":957,"oldContent":"     * Lädt Landmarks neu für eine spezifische Route (vereinfacht)"},{"type":"DELETE","lineNumber":960,"oldContent":"    private suspend fun reloadLandmarksForRoute(route: com.example.arwalking.data.Route) {"},{"type":"DELETE","lineNumber":962,"oldContent":"        try {"},{"type":"DELETE","lineNumber":964,"oldContent":"            Log.d(TAG, \"reloadLandmarksForRoute called (stub)\")"},{"type":"DELETE","lineNumber":965,"oldContent":"            // Stub implementation - verhindert Crashes"},{"type":"INSERT","lineNumber":941,"content":"        // Stub implementation - verhindert Crashes"},{"type":"INSERT","lineNumber":942,"content":"    }"},{"type":"DELETE","lineNumber":968,"oldContent":"        } catch (e: Exception) {"},{"type":"DELETE","lineNumber":970,"oldContent":"            Log.e(TAG, \"Fehler beim Neuladen der Route-Landmarks: ${e.message}\")"},{"type":"DELETE","lineNumber":973,"oldContent":"        }"},{"type":"DELETE","lineNumber":975,"oldContent":"    }"},{"type":"DELETE","lineNumber":976,"oldContent":"        // Stub implementation - verhindert Crashes"},{"type":"DELETE","lineNumber":977,"oldContent":"    }"},{"type":"INSERT","lineNumber":954,"content":"    fun getCurrentEndPoint(): String {"},{"type":"INSERT","lineNumber":955,"content":"        Log.d(TAG, \"getCurrentEndPoint called (stub)\")"},{"type":"INSERT","lineNumber":956,"content":"        return \"Haupteingang\""},{"type":"DELETE","lineNumber":984,"oldContent":"        }"},{"type":"DELETE","lineNumber":985,"oldContent":"                Log.e(TAG, \"Fehler beim Bereinigen: ${e.message}\")"},{"type":"INSERT","lineNumber":958,"content":"    "},{"type":"INSERT","lineNumber":959,"content":"    fun setCurrentNavigationStep(step: Int) {"},{"type":"INSERT","lineNumber":960,"content":"        Log.d(TAG, \"setCurrentNavigationStep called (stub): $step\")"},{"type":"DELETE","lineNumber":987,"oldContent":"                Log.i(TAG, \"RouteViewModel bereinigt\")"},{"type":"DELETE","lineNumber":989,"oldContent":"                landmarkFeatureStorage?.cleanup()"},{"type":"DELETE","lineNumber":990,"oldContent":"                "},{"type":"INSERT","lineNumber":963,"content":"    "},{"type":"DELETE","lineNumber":992,"oldContent":"                // Storage-Manager bereinigt sich selbst automatisch"},{"type":"DELETE","lineNumber":998,"oldContent":"        }"},{"type":"DELETE","lineNumber":1000,"oldContent":"                Log.e(TAG, \"Fehler beim Bereinigen: ${e.message}\")"},{"type":"DELETE","lineNumber":1001,"oldContent":"            } catch (e: Exception) {"},{"type":"DELETE","lineNumber":1002,"oldContent":"                "},{"type":"DELETE","lineNumber":1003,"oldContent":"                // Bereinige Feature-Storage Cache"},{"type":"DELETE","lineNumber":1004,"oldContent":"        return steps.find { it.stepNumber == currentStepNumber }"},{"type":"INSERT","lineNumber":971,"content":""},{"type":"INSERT","lineNumber":972,"content":""},{"type":"INSERT","lineNumber":973,"content":"    /**"},{"type":"INSERT","lineNumber":974,"content":"     * Cleanup beim Destroy"},{"type":"INSERT","lineNumber":975,"content":"     */"},{"type":"DELETE","lineNumber":1010,"oldContent":"                landmarkFeatureStorage?.cleanup()"},{"type":"INSERT","lineNumber":983,"content":"                // Bereinige Feature-Storage Cache"},{"type":"DELETE","lineNumber":1014,"oldContent":"                storageManager?.logPerformanceSummary()"},{"type":"INSERT","lineNumber":985,"content":"                "}]},{"timestamp":1754345916994,"changes":[{"type":"DELETE","lineNumber":104,"oldContent":"            "},{"type":"DELETE","lineNumber":111,"oldContent":"    "},{"type":"DELETE","lineNumber":113,"oldContent":"    /**"},{"type":"DELETE","lineNumber":115,"oldContent":"     * Loggt Informationen über die geladene NavigationRoute"},{"type":"DELETE","lineNumber":134,"oldContent":"    }"},{"type":"DELETE","lineNumber":137,"oldContent":"     * Konvertiert RouteData zu NavigationRoute"},{"type":"INSERT","lineNumber":133,"content":"            "},{"type":"DELETE","lineNumber":140,"oldContent":"        var stepNumber = 1"},{"type":"INSERT","lineNumber":139,"content":"    "},{"type":"INSERT","lineNumber":140,"content":"    /**"},{"type":"INSERT","lineNumber":141,"content":"     * Loggt Informationen über die geladene NavigationRoute"},{"type":"INSERT","lineNumber":160,"content":"    }"},{"type":"MODIFY","lineNumber":163,"content":"     * Konvertiert RouteData zu NavigationRoute","oldContent":"        return NavigationRoute("},{"type":"INSERT","lineNumber":167,"content":"        var stepNumber = 1"},{"type":"DELETE","lineNumber":181,"oldContent":"            try {"},{"type":"DELETE","lineNumber":188,"oldContent":"                featureMatchingEngine = FeatureMatchingEngine()"},{"type":"DELETE","lineNumber":190,"oldContent":"                landmarkFeatureStorage = LandmarkFeatureStorage(context)"},{"type":"DELETE","lineNumber":192,"oldContent":"                arTrackingSystem = ARTrackingSystem()"},{"type":"DELETE","lineNumber":194,"oldContent":"                "},{"type":"INSERT","lineNumber":192,"content":"        return NavigationRoute("},{"type":"INSERT","lineNumber":209,"content":"            try {"},{"type":"INSERT","lineNumber":216,"content":"                featureMatchingEngine = FeatureMatchingEngine()"},{"type":"INSERT","lineNumber":217,"content":"                landmarkFeatureStorage = LandmarkFeatureStorage(context)"},{"type":"INSERT","lineNumber":218,"content":"                arTrackingSystem = ARTrackingSystem()"},{"type":"INSERT","lineNumber":219,"content":"                "},{"type":"DELETE","lineNumber":239,"oldContent":"     * Lädt verfügbare Landmarks aus dem Projektverzeichnis"},{"type":"DELETE","lineNumber":241,"oldContent":"     */"},{"type":"DELETE","lineNumber":243,"oldContent":"    fun loadAvailableLandmarks(context: Context) {"},{"type":"DELETE","lineNumber":267,"oldContent":"            }"},{"type":"DELETE","lineNumber":268,"oldContent":"    }"},{"type":"DELETE","lineNumber":271,"oldContent":"     * Lädt ein Landmark-Bild für die Anzeige"},{"type":"INSERT","lineNumber":268,"content":"     * Lädt verfügbare Landmarks aus dem Projektverzeichnis"},{"type":"INSERT","lineNumber":269,"content":"     */"},{"type":"INSERT","lineNumber":270,"content":"    fun loadAvailableLandmarks(context: Context) {"},{"type":"DELETE","lineNumber":275,"oldContent":"        return try {"},{"type":"DELETE","lineNumber":277,"oldContent":"            if (storageManager == null) {"},{"type":"DELETE","lineNumber":279,"oldContent":"                Log.w(TAG, \"Storage-Manager nicht initialisiert\")"},{"type":"DELETE","lineNumber":281,"oldContent":"                return null"},{"type":"DELETE","lineNumber":283,"oldContent":"            }"},{"type":"DELETE","lineNumber":285,"oldContent":"            "},{"type":"DELETE","lineNumber":288,"oldContent":"                storageManager?.logPerformanceSummary()"},{"type":"DELETE","lineNumber":289,"oldContent":"    "},{"type":"DELETE","lineNumber":290,"oldContent":"    }"},{"type":"INSERT","lineNumber":279,"content":"                val landmarks = storageManager?.getAvailableProjectLandmarks() ?: emptyList()"},{"type":"INSERT","lineNumber":280,"content":"                "},{"type":"INSERT","lineNumber":281,"content":"                if (landmarks.isNotEmpty()) {"},{"type":"DELETE","lineNumber":296,"oldContent":"            null"},{"type":"DELETE","lineNumber":298,"oldContent":"        }"},{"type":"DELETE","lineNumber":300,"oldContent":"    }"},{"type":"DELETE","lineNumber":302,"oldContent":"    "},{"type":"DELETE","lineNumber":304,"oldContent":"    /**"},{"type":"DELETE","lineNumber":306,"oldContent":"    }"},{"type":"INSERT","lineNumber":292,"content":"                Log.e(TAG, \"Fehler beim Laden der Landmarks: ${e.message}\")"},{"type":"INSERT","lineNumber":293,"content":"            }"},{"type":"INSERT","lineNumber":295,"content":"    }"},{"type":"DELETE","lineNumber":310,"oldContent":"            "},{"type":"INSERT","lineNumber":298,"content":"     * Lädt ein Landmark-Bild für die Anzeige"},{"type":"INSERT","lineNumber":301,"content":"        return try {"},{"type":"INSERT","lineNumber":302,"content":"            if (storageManager == null) {"},{"type":"INSERT","lineNumber":303,"content":"                Log.w(TAG, \"Storage-Manager nicht initialisiert\")"},{"type":"INSERT","lineNumber":304,"content":"                return null"},{"type":"INSERT","lineNumber":305,"content":"            }"},{"type":"INSERT","lineNumber":306,"content":"            "},{"type":"DELETE","lineNumber":318,"oldContent":"            Log.d(TAG, \"reloadLandmarksForRoute called (stub)\")"},{"type":"INSERT","lineNumber":312,"content":"            }"},{"type":"INSERT","lineNumber":316,"content":"            null"},{"type":"INSERT","lineNumber":317,"content":"        }"},{"type":"INSERT","lineNumber":318,"content":"    }"},{"type":"INSERT","lineNumber":319,"content":"    "},{"type":"INSERT","lineNumber":320,"content":"    /**"},{"type":"DELETE","lineNumber":323,"oldContent":"    suspend fun addLandmark("},{"type":"DELETE","lineNumber":325,"oldContent":"        context: Context,"},{"type":"DELETE","lineNumber":326,"oldContent":"        bitmap: Bitmap,"},{"type":"INSERT","lineNumber":329,"content":"            "},{"type":"DELETE","lineNumber":342,"oldContent":"     */"},{"type":"DELETE","lineNumber":343,"oldContent":"    /**"},{"type":"DELETE","lineNumber":344,"oldContent":"    "},{"type":"INSERT","lineNumber":339,"content":"            null"},{"type":"INSERT","lineNumber":340,"content":"        }"},{"type":"DELETE","lineNumber":346,"oldContent":"    }"},{"type":"INSERT","lineNumber":342,"content":"    "},{"type":"INSERT","lineNumber":343,"content":"    /**"},{"type":"DELETE","lineNumber":348,"oldContent":"        Log.d(TAG, \"enableStorageSystemImmediately called (stub)\")"},{"type":"DELETE","lineNumber":349,"oldContent":""},{"type":"DELETE","lineNumber":350,"oldContent":"    }"},{"type":"DELETE","lineNumber":351,"oldContent":"            }"},{"type":"DELETE","lineNumber":352,"oldContent":"    }"},{"type":"INSERT","lineNumber":345,"content":"     */"},{"type":"INSERT","lineNumber":346,"content":"    suspend fun addLandmark("},{"type":"INSERT","lineNumber":347,"content":"        context: Context,"},{"type":"INSERT","lineNumber":348,"content":"        bitmap: Bitmap,"},{"type":"INSERT","lineNumber":349,"content":"        landmarkId: String,"},{"type":"INSERT","lineNumber":350,"content":"        landmarkName: String,"},{"type":"INSERT","lineNumber":351,"content":"        description: String,"},{"type":"INSERT","lineNumber":352,"content":"        onProgress: (String) -> Unit = {}"},{"type":"DELETE","lineNumber":354,"oldContent":"        }"},{"type":"DELETE","lineNumber":355,"oldContent":"            }"},{"type":"DELETE","lineNumber":356,"oldContent":"    }"},{"type":"INSERT","lineNumber":354,"content":"        return try {"},{"type":"INSERT","lineNumber":355,"content":"            Log.i(TAG, \"Füge neuen Landmark hinzu: $landmarkId\")"},{"type":"INSERT","lineNumber":356,"content":"            "},{"type":"DELETE","lineNumber":363,"oldContent":"     * Prüft ob die App im Emulator läuft"},{"type":"DELETE","lineNumber":374,"oldContent":"                \"google_sdk\" == android.os.Build.PRODUCT)"},{"type":"DELETE","lineNumber":376,"oldContent":"    }"},{"type":"DELETE","lineNumber":379,"oldContent":""},{"type":"DELETE","lineNumber":381,"oldContent":"    "},{"type":"DELETE","lineNumber":390,"oldContent":"    /**"},{"type":"DELETE","lineNumber":398,"oldContent":"     * Löscht ein Landmark - verwendet neues Storage-System"},{"type":"DELETE","lineNumber":399,"oldContent":"                )"},{"type":"INSERT","lineNumber":392,"content":"     * Prüft ob die App im Emulator läuft"},{"type":"INSERT","lineNumber":393,"content":"     */"},{"type":"DELETE","lineNumber":405,"oldContent":"     * Gibt Performance-Informationen zurück"},{"type":"DELETE","lineNumber":406,"oldContent":"     */"},{"type":"DELETE","lineNumber":409,"oldContent":"        return if (storageManager != null) {"},{"type":"DELETE","lineNumber":411,"oldContent":"            val status = runBlocking { storageManager!!.getStorageStatus() }"},{"type":"INSERT","lineNumber":402,"content":"                \"google_sdk\" == android.os.Build.PRODUCT)"},{"type":"INSERT","lineNumber":403,"content":"    }"},{"type":"INSERT","lineNumber":405,"content":""},{"type":"INSERT","lineNumber":406,"content":"    "},{"type":"DELETE","lineNumber":414,"oldContent":"                        targetLandmark = null"},{"type":"DELETE","lineNumber":415,"oldContent":"                        building = building,"},{"type":"INSERT","lineNumber":408,"content":"     * Lädt ein Thumbnail (schnell) - verwendet neues Storage-System"},{"type":"INSERT","lineNumber":409,"content":"     */"},{"type":"DELETE","lineNumber":420,"oldContent":"        return storageManager?.cleanup()"},{"type":"INSERT","lineNumber":414,"content":"    /**"},{"type":"DELETE","lineNumber":427,"oldContent":"            try {"},{"type":"DELETE","lineNumber":428,"oldContent":"            } catch (e: Exception) {"},{"type":"DELETE","lineNumber":429,"oldContent":"                Log.i(TAG, \"Lade verfügbare Storage-Daten...\")"},{"type":"INSERT","lineNumber":421,"content":"    /**"},{"type":"INSERT","lineNumber":422,"content":"     * Löscht ein Landmark - verwendet neues Storage-System"},{"type":"DELETE","lineNumber":436,"oldContent":"        val currentStepNumber = _currentNavigationStep.value"},{"type":"DELETE","lineNumber":437,"oldContent":"                }"},{"type":"INSERT","lineNumber":429,"content":"     * Gibt Performance-Informationen zurück"},{"type":"INSERT","lineNumber":430,"content":"     */"},{"type":"INSERT","lineNumber":431,"content":"    fun getPerformanceInfo(): String {"},{"type":"INSERT","lineNumber":432,"content":"        return if (storageManager != null) {"},{"type":"INSERT","lineNumber":433,"content":"            val status = runBlocking { storageManager!!.getStorageStatus() }"},{"type":"DELETE","lineNumber":445,"oldContent":"    "},{"type":"DELETE","lineNumber":447,"oldContent":""},{"type":"DELETE","lineNumber":449,"oldContent":"    "},{"type":"DELETE","lineNumber":451,"oldContent":"    /**"},{"type":"INSERT","lineNumber":444,"content":"        return storageManager?.cleanup()"},{"type":"DELETE","lineNumber":454,"oldContent":"    fun nextNavigationStep() {"},{"type":"DELETE","lineNumber":460,"oldContent":"    /**"},{"type":"INSERT","lineNumber":452,"content":"            try {"},{"type":"INSERT","lineNumber":453,"content":"                Log.i(TAG, \"Lade verfügbare Storage-Daten...\")"},{"type":"INSERT","lineNumber":463,"content":"                }"},{"type":"INSERT","lineNumber":470,"content":"    "},{"type":"INSERT","lineNumber":471,"content":""},{"type":"INSERT","lineNumber":472,"content":"    "},{"type":"INSERT","lineNumber":473,"content":"    /**"},{"type":"INSERT","lineNumber":476,"content":"    fun nextNavigationStep() {"},{"type":"INSERT","lineNumber":482,"content":"    /**"},{"type":"DELETE","lineNumber":514,"oldContent":"                // Fallback: Erstelle eine Demo-Route mit Feature-Navigation"},{"type":"DELETE","lineNumber":516,"oldContent":"                val demoSteps = listOf("},{"type":"DELETE","lineNumber":518,"oldContent":"                    FeatureNavigationStep("},{"type":"DELETE","lineNumber":520,"oldContent":"                        stepNumber = 1,"},{"type":"DELETE","lineNumber":522,"oldContent":"                        instruction = \"Gehen Sie geradeaus zum Haupteingang\","},{"type":"DELETE","lineNumber":524,"oldContent":"                        landmarks = emptyList()"},{"type":"DELETE","lineNumber":539,"oldContent":"    }"},{"type":"DELETE","lineNumber":540,"oldContent":"                    landmarkIds.add(landmark) // landmarks ist bereits List<String>"},{"type":"DELETE","lineNumber":541,"oldContent":"    "},{"type":"INSERT","lineNumber":533,"content":"     * Lädt Feature-Navigation Route für ein bestimmtes Gebäude und Stockwerk"},{"type":"INSERT","lineNumber":534,"content":"     */"},{"type":"INSERT","lineNumber":535,"content":"    fun loadFeatureNavigationRoute(context: Context, building: String, floor: Int) {"},{"type":"DELETE","lineNumber":544,"oldContent":""},{"type":"INSERT","lineNumber":538,"content":"                Log.i(TAG, \"Lade Feature-Navigation Route für Gebäude: $building, Stockwerk: $floor\")"},{"type":"DELETE","lineNumber":548,"oldContent":"    }"},{"type":"INSERT","lineNumber":542,"content":"                "},{"type":"INSERT","lineNumber":543,"content":"                // Fallback: Erstelle eine Demo-Route mit Feature-Navigation"},{"type":"INSERT","lineNumber":544,"content":"                val demoSteps = listOf("},{"type":"INSERT","lineNumber":545,"content":"                    FeatureNavigationStep("},{"type":"INSERT","lineNumber":546,"content":"                        stepNumber = 1,"},{"type":"INSERT","lineNumber":547,"content":"                        instruction = \"Gehen Sie geradeaus zum Haupteingang\","},{"type":"INSERT","lineNumber":548,"content":"                        landmarks = emptyList()"},{"type":"DELETE","lineNumber":560,"oldContent":"        }"},{"type":"DELETE","lineNumber":562,"oldContent":"        "},{"type":"DELETE","lineNumber":582,"oldContent":"                } else {"},{"type":"DELETE","lineNumber":585,"oldContent":"                    _currentMatches.value = emptyList()"},{"type":"DELETE","lineNumber":587,"oldContent":"                }"},{"type":"DELETE","lineNumber":591,"oldContent":"        }"},{"type":"DELETE","lineNumber":593,"oldContent":"    }"},{"type":"DELETE","lineNumber":595,"oldContent":"    "},{"type":"DELETE","lineNumber":597,"oldContent":"    /**"},{"type":"INSERT","lineNumber":589,"content":"        }"},{"type":"INSERT","lineNumber":590,"content":"        "},{"type":"DELETE","lineNumber":599,"oldContent":"     * Generiert simulierte Feature-Matches basierend auf der aktuellen Route"},{"type":"DELETE","lineNumber":601,"oldContent":"     */"},{"type":"INSERT","lineNumber":609,"content":"                } else {"},{"type":"INSERT","lineNumber":611,"content":"                    _currentMatches.value = emptyList()"},{"type":"INSERT","lineNumber":612,"content":"                }"},{"type":"INSERT","lineNumber":617,"content":"        }"},{"type":"INSERT","lineNumber":618,"content":"    }"},{"type":"INSERT","lineNumber":619,"content":"    "},{"type":"INSERT","lineNumber":620,"content":"    /**"},{"type":"INSERT","lineNumber":621,"content":"     * Generiert simulierte Feature-Matches basierend auf der aktuellen Route"},{"type":"INSERT","lineNumber":622,"content":"     */"},{"type":"DELETE","lineNumber":639,"oldContent":"     * Gibt einen benutzerfreundlichen Namen für eine Landmark-ID zurück"},{"type":"DELETE","lineNumber":655,"oldContent":"    /**"},{"type":"INSERT","lineNumber":668,"content":"     * Gibt einen benutzerfreundlichen Namen für eine Landmark-ID zurück"},{"type":"DELETE","lineNumber":676,"oldContent":"        "},{"type":"DELETE","lineNumber":678,"oldContent":"        // Aktualisiere Matches für den neuen Schritt"},{"type":"INSERT","lineNumber":683,"content":"    /**"},{"type":"INSERT","lineNumber":704,"content":"        "},{"type":"INSERT","lineNumber":705,"content":"        // Aktualisiere Matches für den neuen Schritt"},{"type":"DELETE","lineNumber":715,"oldContent":"    /**"},{"type":"DELETE","lineNumber":716,"oldContent":"     * Startet die Navigation von Anfang an"},{"type":"DELETE","lineNumber":719,"oldContent":"     */"},{"type":"DELETE","lineNumber":720,"oldContent":"    fun startNavigation() {"},{"type":"DELETE","lineNumber":722,"oldContent":"        Log.i(TAG, \"Navigation gestartet\")"},{"type":"DELETE","lineNumber":724,"oldContent":"        setCurrentNavigationStep(1)"},{"type":"DELETE","lineNumber":726,"oldContent":"        setFeatureMappingEnabled(true)"},{"type":"DELETE","lineNumber":729,"oldContent":"    "},{"type":"DELETE","lineNumber":748,"oldContent":"        "},{"type":"DELETE","lineNumber":749,"oldContent":"        return buildString {"},{"type":"DELETE","lineNumber":750,"oldContent":"            appendLine(\"=== RouteViewModel Status ===\")"},{"type":"DELETE","lineNumber":752,"oldContent":"            appendLine(\"Route geladen: ${route != null}\")"},{"type":"DELETE","lineNumber":754,"oldContent":"            if (route != null) {"},{"type":"INSERT","lineNumber":743,"content":"    /**"},{"type":"INSERT","lineNumber":744,"content":"     * Startet die Navigation von Anfang an"},{"type":"INSERT","lineNumber":745,"content":"     */"},{"type":"INSERT","lineNumber":746,"content":"    fun startNavigation() {"},{"type":"INSERT","lineNumber":747,"content":"        Log.i(TAG, \"Navigation gestartet\")"},{"type":"INSERT","lineNumber":748,"content":"        setCurrentNavigationStep(1)"},{"type":"INSERT","lineNumber":749,"content":"        setFeatureMappingEnabled(true)"},{"type":"INSERT","lineNumber":751,"content":"    "},{"type":"INSERT","lineNumber":770,"content":"        "},{"type":"INSERT","lineNumber":771,"content":"        return buildString {"},{"type":"INSERT","lineNumber":772,"content":"            appendLine(\"=== RouteViewModel Status ===\")"},{"type":"INSERT","lineNumber":773,"content":"            appendLine(\"Route geladen: ${route != null}\")"},{"type":"INSERT","lineNumber":774,"content":"            if (route != null) {"},{"type":"INSERT","lineNumber":807,"content":"    /**"},{"type":"INSERT","lineNumber":808,"content":"     * Testet die RouteViewModel-Funktionalität"},{"type":"INSERT","lineNumber":809,"content":"     */"},{"type":"INSERT","lineNumber":810,"content":"    fun runSelfTest(context: Context): Boolean {"},{"type":"INSERT","lineNumber":811,"content":"        return try {"},{"type":"INSERT","lineNumber":812,"content":"            Log.i(TAG, \"=== RouteViewModel Self-Test ===\")"},{"type":"INSERT","lineNumber":813,"content":"            "},{"type":"INSERT","lineNumber":814,"content":"            // Test 1: Initialisierung"},{"type":"INSERT","lineNumber":815,"content":"            initialize(context)"},{"type":"INSERT","lineNumber":816,"content":"            Log.d(TAG, \"✓ Initialisierung erfolgreich\")"},{"type":"INSERT","lineNumber":817,"content":"            "},{"type":"INSERT","lineNumber":818,"content":"            // Test 2: Route laden"},{"type":"INSERT","lineNumber":819,"content":"            loadNavigationRoute(context)"},{"type":"INSERT","lineNumber":820,"content":"            Thread.sleep(1000) // Warte auf Coroutine"},{"type":"INSERT","lineNumber":821,"content":"            Log.d(TAG, \"✓ Route-Loading gestartet\")"},{"type":"INSERT","lineNumber":822,"content":"            "},{"type":"INSERT","lineNumber":823,"content":"            // Test 3: Feature-Mapping aktivieren"},{"type":"INSERT","lineNumber":824,"content":"            setFeatureMappingEnabled(true)"},{"type":"INSERT","lineNumber":825,"content":"            Log.d(TAG, \"✓ Feature-Mapping aktiviert\")"},{"type":"INSERT","lineNumber":826,"content":"            "},{"type":"INSERT","lineNumber":827,"content":"            // Test 4: Navigation starten"},{"type":"INSERT","lineNumber":828,"content":"            startNavigation()"},{"type":"INSERT","lineNumber":829,"content":"            Log.d(TAG, \"✓ Navigation gestartet\")"},{"type":"INSERT","lineNumber":830,"content":"            "},{"type":"INSERT","lineNumber":831,"content":"            // Test 5: Status ausgeben"},{"type":"INSERT","lineNumber":832,"content":"            Log.i(TAG, getStatus())"},{"type":"INSERT","lineNumber":833,"content":"            "},{"type":"INSERT","lineNumber":834,"content":"            Log.i(TAG, \"=== Self-Test erfolgreich ===\")"},{"type":"INSERT","lineNumber":835,"content":"            true"},{"type":"INSERT","lineNumber":836,"content":"        } catch (e: Exception) {"},{"type":"INSERT","lineNumber":837,"content":"            Log.e(TAG, \"=== Self-Test fehlgeschlagen: ${e.message} ===\")"},{"type":"INSERT","lineNumber":838,"content":"            false"},{"type":"INSERT","lineNumber":839,"content":"        }"},{"type":"INSERT","lineNumber":840,"content":"    }"},{"type":"INSERT","lineNumber":841,"content":"    "},{"type":"DELETE","lineNumber":811,"oldContent":"                    // Füge nur hinzu, wenn nicht bereits in der Route vorhanden"},{"type":"DELETE","lineNumber":813,"oldContent":"                    if (routeLandmarks.none { it.id == landmarkInfo.id }) {"},{"type":"DELETE","lineNumber":815,"oldContent":"                        routeLandmarks.add("},{"type":"INSERT","lineNumber":849,"content":"    fun getAvailableLandmarks(): List<FeatureLandmark> {"},{"type":"INSERT","lineNumber":850,"content":"        return try {"},{"type":"INSERT","lineNumber":851,"content":"            val routeLandmarks = mutableListOf<FeatureLandmark>()"},{"type":"INSERT","lineNumber":852,"content":"            "},{"type":"INSERT","lineNumber":853,"content":"            // Sammle alle Landmark-IDs aus der aktuellen Route"},{"type":"INSERT","lineNumber":854,"content":"            _currentRoute.value?.route?.path?.forEach { pathItem ->"},{"type":"INSERT","lineNumber":855,"content":"                pathItem.routeParts.forEach { routePart ->"},{"type":"INSERT","lineNumber":856,"content":"                    routePart.landmarks?.forEach { landmark ->"},{"type":"INSERT","lineNumber":857,"content":"                        // landmark ist bereits ein String (Landmark-ID)"},{"type":"INSERT","lineNumber":858,"content":"                        routeLandmarks.add("},{"type":"INSERT","lineNumber":860,"content":"                                id = landmark, // String aus JSON"},{"type":"INSERT","lineNumber":861,"content":"                                name = landmark,"},{"type":"INSERT","lineNumber":862,"content":"                                description = \"Landmark\","},{"type":"INSERT","lineNumber":863,"content":"                                position = Position(0.0, 0.0, 0.0),"},{"type":"INSERT","lineNumber":864,"content":"                                imageUrl = \"\""},{"type":"INSERT","lineNumber":865,"content":"                            )"},{"type":"INSERT","lineNumber":866,"content":"                        )"},{"type":"INSERT","lineNumber":867,"content":"                    }"},{"type":"INSERT","lineNumber":868,"content":"                }"},{"type":"INSERT","lineNumber":869,"content":"            }"},{"type":"INSERT","lineNumber":870,"content":"            "},{"type":"INSERT","lineNumber":871,"content":"            // Zusätzlich: Lade verfügbare Bilder aus dem Storage-System"},{"type":"INSERT","lineNumber":872,"content":"            if (storageManager != null) {"},{"type":"INSERT","lineNumber":873,"content":"                val landmarkInfos = runBlocking { storageManager!!.getAvailableProjectLandmarks() }"},{"type":"INSERT","lineNumber":874,"content":"                landmarkInfos.forEach { landmarkInfo ->"},{"type":"INSERT","lineNumber":875,"content":"                    // Füge nur hinzu, wenn nicht bereits in der Route vorhanden"},{"type":"INSERT","lineNumber":876,"content":"                    if (routeLandmarks.none { it.id == landmarkInfo.id }) {"},{"type":"INSERT","lineNumber":877,"content":"                        routeLandmarks.add("},{"type":"INSERT","lineNumber":878,"content":"                            FeatureLandmark("},{"type":"DELETE","lineNumber":820,"oldContent":"    fun getAvailableLandmarks(): List<FeatureLandmark> {"},{"type":"DELETE","lineNumber":822,"oldContent":"        return try {"},{"type":"INSERT","lineNumber":882,"content":"                                position = Position(0.0, 0.0, 0.0),"},{"type":"INSERT","lineNumber":883,"content":"                                imageUrl = \"\""},{"type":"DELETE","lineNumber":825,"oldContent":"            val routeLandmarks = mutableListOf<FeatureLandmark>()"},{"type":"DELETE","lineNumber":830,"oldContent":"            // Sammle alle Landmark-IDs aus der aktuellen Route"},{"type":"DELETE","lineNumber":831,"oldContent":"            _currentRoute.value?.route?.path?.forEach { pathItem ->"},{"type":"INSERT","lineNumber":890,"content":"            Log.d(TAG, \"Verfügbare Landmarks: ${routeLandmarks.size}\")"},{"type":"INSERT","lineNumber":891,"content":"            routeLandmarks.forEach { landmark ->"},{"type":"INSERT","lineNumber":892,"content":"                Log.d(TAG, \"- ${landmark.id}: ${landmark.name}\")"},{"type":"DELETE","lineNumber":835,"oldContent":"                pathItem.routeParts.forEach { routePart ->"},{"type":"DELETE","lineNumber":838,"oldContent":"                    routePart.landmarks?.forEach { landmark ->"},{"type":"DELETE","lineNumber":840,"oldContent":"                        // landmark ist bereits ein String (Landmark-ID)"},{"type":"DELETE","lineNumber":842,"oldContent":"                        routeLandmarks.add("},{"type":"DELETE","lineNumber":844,"oldContent":"                            FeatureLandmark("},{"type":"DELETE","lineNumber":845,"oldContent":"                                id = landmark, // String aus JSON"},{"type":"INSERT","lineNumber":901,"content":"    "},{"type":"DELETE","lineNumber":847,"oldContent":"                                name = landmark,"},{"type":"DELETE","lineNumber":850,"oldContent":"                                description = \"Landmark\","},{"type":"DELETE","lineNumber":854,"oldContent":"                                position = Position(0.0, 0.0, 0.0),"},{"type":"DELETE","lineNumber":857,"oldContent":"                                imageUrl = \"\""},{"type":"DELETE","lineNumber":859,"oldContent":"                            )"},{"type":"DELETE","lineNumber":861,"oldContent":"                        )"},{"type":"DELETE","lineNumber":862,"oldContent":"                    }"},{"type":"INSERT","lineNumber":912,"content":"            }"},{"type":"DELETE","lineNumber":864,"oldContent":"                }"},{"type":"DELETE","lineNumber":866,"oldContent":"            }"},{"type":"DELETE","lineNumber":868,"oldContent":"            "},{"type":"DELETE","lineNumber":870,"oldContent":"            // Zusätzlich: Lade verfügbare Bilder aus dem Storage-System"},{"type":"DELETE","lineNumber":872,"oldContent":"            if (storageManager != null) {"},{"type":"DELETE","lineNumber":874,"oldContent":"                val landmarkInfos = runBlocking { storageManager!!.getAvailableProjectLandmarks() }"},{"type":"DELETE","lineNumber":877,"oldContent":"                landmarkInfos.forEach { landmarkInfo ->"},{"type":"INSERT","lineNumber":921,"content":"    /**"},{"type":"DELETE","lineNumber":879,"oldContent":"                                position = Position(0.0, 0.0, 0.0),"},{"type":"DELETE","lineNumber":882,"oldContent":"                                imageUrl = \"\""},{"type":"DELETE","lineNumber":884,"oldContent":"            "},{"type":"DELETE","lineNumber":886,"oldContent":"            Log.d(TAG, \"Verfügbare Landmarks: ${routeLandmarks.size}\")"},{"type":"DELETE","lineNumber":888,"oldContent":"            routeLandmarks.forEach { landmark ->"},{"type":"DELETE","lineNumber":890,"oldContent":"                Log.d(TAG, \"- ${landmark.id}: ${landmark.name}\")"},{"type":"DELETE","lineNumber":892,"oldContent":"    "},{"type":"DELETE","lineNumber":894,"oldContent":"            }"},{"type":"DELETE","lineNumber":896,"oldContent":"    /**"},{"type":"DELETE","lineNumber":927,"oldContent":"        // Stub implementation - verhindert Crashes"},{"type":"DELETE","lineNumber":928,"oldContent":"    }"},{"type":"DELETE","lineNumber":937,"oldContent":"    fun getCurrentEndPoint(): String {"},{"type":"DELETE","lineNumber":938,"oldContent":"        Log.d(TAG, \"getCurrentEndPoint called (stub)\")"},{"type":"DELETE","lineNumber":940,"oldContent":"        return \"Haupteingang\""},{"type":"DELETE","lineNumber":942,"oldContent":"    "},{"type":"DELETE","lineNumber":944,"oldContent":"    fun setCurrentNavigationStep(step: Int) {"},{"type":"DELETE","lineNumber":946,"oldContent":"        Log.d(TAG, \"setCurrentNavigationStep called (stub): $step\")"},{"type":"DELETE","lineNumber":948,"oldContent":"    "},{"type":"INSERT","lineNumber":976,"content":"        // Stub implementation - verhindert Crashes"},{"type":"INSERT","lineNumber":977,"content":"    }"},{"type":"DELETE","lineNumber":953,"oldContent":""},{"type":"DELETE","lineNumber":955,"oldContent":""},{"type":"DELETE","lineNumber":957,"oldContent":"    /**"},{"type":"DELETE","lineNumber":958,"oldContent":"     * Cleanup beim Destroy"},{"type":"DELETE","lineNumber":960,"oldContent":"     */"},{"type":"DELETE","lineNumber":961,"oldContent":"                // Storage-Manager bereinigt sich selbst automatisch"},{"type":"DELETE","lineNumber":962,"oldContent":"            try {"},{"type":"DELETE","lineNumber":963,"oldContent":"        viewModelScope.launch {"},{"type":"DELETE","lineNumber":964,"oldContent":"        super.onCleared()"},{"type":"DELETE","lineNumber":965,"oldContent":"    override fun onCleared() {"},{"type":"DELETE","lineNumber":966,"oldContent":"                // Bereinige Feature-Storage Cache"},{"type":"DELETE","lineNumber":967,"oldContent":"     * Cleanup beim Destroy"},{"type":"DELETE","lineNumber":968,"oldContent":"                "},{"type":"INSERT","lineNumber":984,"content":"    fun getCurrentStartPoint(): String {"},{"type":"INSERT","lineNumber":985,"content":"        Log.d(TAG, \"getCurrentStartPoint called (stub)\")"},{"type":"INSERT","lineNumber":986,"content":"        return \"Büro Prof. Dr. Ludwig (PT 3.0.84C)\""},{"type":"INSERT","lineNumber":987,"content":"    }"},{"type":"INSERT","lineNumber":988,"content":"    "},{"type":"INSERT","lineNumber":989,"content":"    fun getCurrentEndPoint(): String {"},{"type":"INSERT","lineNumber":990,"content":"        Log.d(TAG, \"getCurrentEndPoint called (stub)\")"},{"type":"INSERT","lineNumber":991,"content":"        return \"Haupteingang\""},{"type":"INSERT","lineNumber":992,"content":"    }"},{"type":"INSERT","lineNumber":993,"content":"    "},{"type":"INSERT","lineNumber":994,"content":"    fun setCurrentNavigationStep(step: Int) {"},{"type":"INSERT","lineNumber":995,"content":"        Log.d(TAG, \"setCurrentNavigationStep called (stub): $step\")"},{"type":"INSERT","lineNumber":998,"content":"    "},{"type":"INSERT","lineNumber":1006,"content":""},{"type":"INSERT","lineNumber":1007,"content":""},{"type":"INSERT","lineNumber":1008,"content":"    /**"},{"type":"INSERT","lineNumber":1009,"content":"     * Cleanup beim Destroy"},{"type":"INSERT","lineNumber":1010,"content":"     */"},{"type":"DELETE","lineNumber":984,"oldContent":"            try {"},{"type":"INSERT","lineNumber":1017,"content":"                "},{"type":"INSERT","lineNumber":1018,"content":"                // Bereinige Feature-Storage Cache"},{"type":"INSERT","lineNumber":1020,"content":"                "},{"type":"INSERT","lineNumber":1027,"content":"}"}]},{"timestamp":1754346314872,"changes":[{"type":"MODIFY","lineNumber":13,"content":"import java.io.ByteArrayOutputStream","oldContent":""},{"type":"DELETE","lineNumber":129,"oldContent":"            "},{"type":"MODIFY","lineNumber":133,"content":"            ","oldContent":"    "},{"type":"DELETE","lineNumber":136,"oldContent":"    /**"},{"type":"DELETE","lineNumber":137,"oldContent":"     * Loggt Informationen über die geladene NavigationRoute"},{"type":"INSERT","lineNumber":139,"content":"    "},{"type":"INSERT","lineNumber":140,"content":"    /**"},{"type":"INSERT","lineNumber":141,"content":"     * Loggt Informationen über die geladene NavigationRoute"},{"type":"DELETE","lineNumber":157,"oldContent":"    }"},{"type":"DELETE","lineNumber":161,"oldContent":"     * Konvertiert RouteData zu NavigationRoute"},{"type":"DELETE","lineNumber":162,"oldContent":"        return NavigationRoute("},{"type":"INSERT","lineNumber":160,"content":"    }"},{"type":"INSERT","lineNumber":161,"content":"    "},{"type":"INSERT","lineNumber":163,"content":"     * Konvertiert RouteData zu NavigationRoute"},{"type":"DELETE","lineNumber":165,"oldContent":"        var stepNumber = 1"},{"type":"INSERT","lineNumber":167,"content":"        var stepNumber = 1"},{"type":"DELETE","lineNumber":188,"oldContent":"        return NavigationRoute("},{"type":"INSERT","lineNumber":192,"content":"        return NavigationRoute("},{"type":"DELETE","lineNumber":204,"oldContent":"            try {"},{"type":"INSERT","lineNumber":209,"content":"            try {"},{"type":"DELETE","lineNumber":212,"oldContent":"                featureMatchingEngine = FeatureMatchingEngine()"},{"type":"DELETE","lineNumber":214,"oldContent":"                landmarkFeatureStorage = LandmarkFeatureStorage(context)"},{"type":"DELETE","lineNumber":216,"oldContent":"                arTrackingSystem = ARTrackingSystem()"},{"type":"DELETE","lineNumber":218,"oldContent":"                "},{"type":"INSERT","lineNumber":216,"content":"                featureMatchingEngine = FeatureMatchingEngine()"},{"type":"INSERT","lineNumber":217,"content":"                landmarkFeatureStorage = LandmarkFeatureStorage(context)"},{"type":"INSERT","lineNumber":218,"content":"                arTrackingSystem = ARTrackingSystem()"},{"type":"INSERT","lineNumber":219,"content":"                "},{"type":"DELETE","lineNumber":264,"oldContent":"     * Lädt verfügbare Landmarks aus dem Projektverzeichnis"},{"type":"DELETE","lineNumber":265,"oldContent":"     */"},{"type":"DELETE","lineNumber":267,"oldContent":"    fun loadAvailableLandmarks(context: Context) {"},{"type":"INSERT","lineNumber":268,"content":"     * Lädt verfügbare Landmarks aus dem Projektverzeichnis"},{"type":"INSERT","lineNumber":269,"content":"     */"},{"type":"INSERT","lineNumber":270,"content":"    fun loadAvailableLandmarks(context: Context) {"},{"type":"DELETE","lineNumber":274,"oldContent":"                val landmarks = storageManager?.getAvailableProjectLandmarks() ?: emptyList()"},{"type":"DELETE","lineNumber":276,"oldContent":"                "},{"type":"DELETE","lineNumber":277,"oldContent":"                if (landmarks.isNotEmpty()) {"},{"type":"INSERT","lineNumber":279,"content":"                val landmarks = storageManager?.getAvailableProjectLandmarks() ?: emptyList()"},{"type":"INSERT","lineNumber":280,"content":"                "},{"type":"INSERT","lineNumber":281,"content":"                if (landmarks.isNotEmpty()) {"},{"type":"DELETE","lineNumber":283,"oldContent":"                Log.e(TAG, \"Fehler beim Laden der Landmarks: ${e.message}\")"},{"type":"DELETE","lineNumber":285,"oldContent":"            }"},{"type":"DELETE","lineNumber":288,"oldContent":"    }"},{"type":"DELETE","lineNumber":291,"oldContent":"     * Lädt ein Landmark-Bild für die Anzeige"},{"type":"DELETE","lineNumber":293,"oldContent":"        return try {"},{"type":"DELETE","lineNumber":295,"oldContent":"            if (storageManager == null) {"},{"type":"DELETE","lineNumber":296,"oldContent":"                Log.w(TAG, \"Storage-Manager nicht initialisiert\")"},{"type":"DELETE","lineNumber":298,"oldContent":"                return null"},{"type":"DELETE","lineNumber":299,"oldContent":"            }"},{"type":"DELETE","lineNumber":301,"oldContent":"            "},{"type":"INSERT","lineNumber":292,"content":"                Log.e(TAG, \"Fehler beim Laden der Landmarks: ${e.message}\")"},{"type":"INSERT","lineNumber":293,"content":"            }"},{"type":"INSERT","lineNumber":295,"content":"    }"},{"type":"INSERT","lineNumber":298,"content":"     * Lädt ein Landmark-Bild für die Anzeige"},{"type":"DELETE","lineNumber":306,"oldContent":"            }"},{"type":"INSERT","lineNumber":301,"content":"        return try {"},{"type":"INSERT","lineNumber":302,"content":"            if (storageManager == null) {"},{"type":"INSERT","lineNumber":303,"content":"                Log.w(TAG, \"Storage-Manager nicht initialisiert\")"},{"type":"INSERT","lineNumber":304,"content":"                return null"},{"type":"INSERT","lineNumber":305,"content":"            }"},{"type":"INSERT","lineNumber":306,"content":"            "},{"type":"DELETE","lineNumber":311,"oldContent":"            null"},{"type":"DELETE","lineNumber":313,"oldContent":"        }"},{"type":"DELETE","lineNumber":315,"oldContent":"    }"},{"type":"DELETE","lineNumber":316,"oldContent":"    "},{"type":"INSERT","lineNumber":312,"content":"            }"},{"type":"DELETE","lineNumber":318,"oldContent":"    /**"},{"type":"INSERT","lineNumber":316,"content":"            null"},{"type":"INSERT","lineNumber":317,"content":"        }"},{"type":"INSERT","lineNumber":318,"content":"    }"},{"type":"INSERT","lineNumber":319,"content":"    "},{"type":"INSERT","lineNumber":320,"content":"    /**"},{"type":"DELETE","lineNumber":325,"oldContent":"            "},{"type":"DELETE","lineNumber":329,"oldContent":"                        stepNumber = 3,"},{"type":"INSERT","lineNumber":328,"content":"            }"},{"type":"INSERT","lineNumber":329,"content":"            "},{"type":"DELETE","lineNumber":336,"oldContent":"            null"},{"type":"DELETE","lineNumber":338,"oldContent":"        }"},{"type":"INSERT","lineNumber":339,"content":"            null"},{"type":"INSERT","lineNumber":340,"content":"        }"},{"type":"INSERT","lineNumber":341,"content":"    }"},{"type":"INSERT","lineNumber":344,"content":"     * Fügt einen neuen Landmark hinzu (nur lokale Speicherung)"},{"type":"DELETE","lineNumber":344,"oldContent":"}"},{"type":"DELETE","lineNumber":347,"oldContent":"     * Fügt einen neuen Landmark hinzu (nur lokale Speicherung)"},{"type":"DELETE","lineNumber":386,"oldContent":"     * Prüft ob die App im Emulator läuft"},{"type":"DELETE","lineNumber":388,"oldContent":"     */"},{"type":"INSERT","lineNumber":392,"content":"     * Prüft ob die App im Emulator läuft"},{"type":"INSERT","lineNumber":393,"content":"     */"},{"type":"DELETE","lineNumber":396,"oldContent":"                \"google_sdk\" == android.os.Build.PRODUCT)"},{"type":"DELETE","lineNumber":398,"oldContent":"    }"},{"type":"DELETE","lineNumber":401,"oldContent":""},{"type":"DELETE","lineNumber":402,"oldContent":"    "},{"type":"DELETE","lineNumber":404,"oldContent":"     * Lädt ein Thumbnail (schnell) - verwendet neues Storage-System"},{"type":"DELETE","lineNumber":406,"oldContent":"     */"},{"type":"INSERT","lineNumber":402,"content":"                \"google_sdk\" == android.os.Build.PRODUCT)"},{"type":"INSERT","lineNumber":403,"content":"    }"},{"type":"DELETE","lineNumber":409,"oldContent":"                "},{"type":"INSERT","lineNumber":405,"content":""},{"type":"INSERT","lineNumber":406,"content":"    "},{"type":"INSERT","lineNumber":408,"content":"     * Lädt ein Thumbnail (schnell) - verwendet neues Storage-System"},{"type":"INSERT","lineNumber":409,"content":"     */"},{"type":"DELETE","lineNumber":417,"oldContent":"     * Löscht ein Landmark - verwendet neues Storage-System"},{"type":"DELETE","lineNumber":423,"oldContent":"     * Gibt Performance-Informationen zurück"},{"type":"INSERT","lineNumber":421,"content":"    /**"},{"type":"INSERT","lineNumber":422,"content":"     * Löscht ein Landmark - verwendet neues Storage-System"},{"type":"DELETE","lineNumber":425,"oldContent":"     */"},{"type":"DELETE","lineNumber":426,"oldContent":"    fun getPerformanceInfo(): String {"},{"type":"DELETE","lineNumber":428,"oldContent":"        return if (storageManager != null) {"},{"type":"DELETE","lineNumber":430,"oldContent":"            val status = runBlocking { storageManager!!.getStorageStatus() }"},{"type":"INSERT","lineNumber":429,"content":"     * Gibt Performance-Informationen zurück"},{"type":"INSERT","lineNumber":430,"content":"     */"},{"type":"INSERT","lineNumber":431,"content":"    fun getPerformanceInfo(): String {"},{"type":"INSERT","lineNumber":432,"content":"        return if (storageManager != null) {"},{"type":"INSERT","lineNumber":433,"content":"            val status = runBlocking { storageManager!!.getStorageStatus() }"},{"type":"DELETE","lineNumber":440,"oldContent":"        return storageManager?.cleanup()"},{"type":"DELETE","lineNumber":444,"oldContent":"                "},{"type":"DELETE","lineNumber":445,"oldContent":"            try {"},{"type":"INSERT","lineNumber":443,"content":"    suspend fun cleanup(): CleanupSummary? {"},{"type":"INSERT","lineNumber":444,"content":"        return storageManager?.cleanup()"},{"type":"DELETE","lineNumber":447,"oldContent":"                Log.i(TAG, \"Lade verfügbare Storage-Daten...\")"},{"type":"DELETE","lineNumber":453,"oldContent":""},{"type":"INSERT","lineNumber":451,"content":"        viewModelScope.launch {"},{"type":"INSERT","lineNumber":452,"content":"            try {"},{"type":"INSERT","lineNumber":453,"content":"                Log.i(TAG, \"Lade verfügbare Storage-Daten...\")"},{"type":"DELETE","lineNumber":456,"oldContent":"                }"},{"type":"DELETE","lineNumber":464,"oldContent":"    "},{"type":"INSERT","lineNumber":463,"content":"                }"},{"type":"DELETE","lineNumber":466,"oldContent":""},{"type":"DELETE","lineNumber":468,"oldContent":"    "},{"type":"DELETE","lineNumber":470,"oldContent":"    /**"},{"type":"DELETE","lineNumber":474,"oldContent":"    fun nextNavigationStep() {"},{"type":"DELETE","lineNumber":475,"oldContent":"     * Geht zum nächsten Navigationsschritt"},{"type":"DELETE","lineNumber":476,"oldContent":"     */"},{"type":"DELETE","lineNumber":477,"oldContent":"        val currentStep = _currentNavigationStep.value"},{"type":"DELETE","lineNumber":478,"oldContent":"        _currentNavigationStep.value = currentStep + 1"},{"type":"DELETE","lineNumber":479,"oldContent":"        Log.d(TAG, \"Nächster Navigationsschritt: ${currentStep + 1}\")"},{"type":"DELETE","lineNumber":480,"oldContent":"    }"},{"type":"DELETE","lineNumber":481,"oldContent":"    /**"},{"type":"DELETE","lineNumber":483,"oldContent":"     * Geht zum vorherigen Navigationsschritt"},{"type":"DELETE","lineNumber":484,"oldContent":"     */"},{"type":"DELETE","lineNumber":485,"oldContent":"    fun previousNavigationStep() {"},{"type":"DELETE","lineNumber":486,"oldContent":"        val currentStep = _currentNavigationStep.value"},{"type":"DELETE","lineNumber":487,"oldContent":"        if (currentStep > 1) {"},{"type":"DELETE","lineNumber":488,"oldContent":"            _currentNavigationStep.value = currentStep - 1"},{"type":"DELETE","lineNumber":489,"oldContent":"            Log.d(TAG, \"Vorheriger Navigationsschritt: ${currentStep - 1}\")"},{"type":"DELETE","lineNumber":490,"oldContent":"        }"},{"type":"DELETE","lineNumber":491,"oldContent":"    }"},{"type":"INSERT","lineNumber":471,"content":""},{"type":"INSERT","lineNumber":473,"content":""},{"type":"INSERT","lineNumber":474,"content":"    "},{"type":"DELETE","lineNumber":523,"oldContent":"            "},{"type":"INSERT","lineNumber":505,"content":"            } else {"},{"type":"DELETE","lineNumber":527,"oldContent":"     * Lädt Feature-Navigation Route für ein bestimmtes Gebäude und Stockwerk"},{"type":"DELETE","lineNumber":529,"oldContent":"     */"},{"type":"DELETE","lineNumber":531,"oldContent":"    fun loadFeatureNavigationRoute(context: Context, building: String, floor: Int) {"},{"type":"DELETE","lineNumber":535,"oldContent":"                Log.i(TAG, \"Lade Feature-Navigation Route für Gebäude: $building, Stockwerk: $floor\")"},{"type":"DELETE","lineNumber":537,"oldContent":"                "},{"type":"INSERT","lineNumber":515,"content":"     * Lädt Feature-Navigation Route für ein bestimmtes Gebäude und Stockwerk"},{"type":"INSERT","lineNumber":516,"content":"     */"},{"type":"INSERT","lineNumber":517,"content":"    fun loadFeatureNavigationRoute(context: Context, building: String, floor: Int) {"},{"type":"INSERT","lineNumber":519,"content":"            try {"},{"type":"INSERT","lineNumber":520,"content":"                Log.i(TAG, \"Lade Feature-Navigation Route für Gebäude: $building, Stockwerk: $floor\")"},{"type":"INSERT","lineNumber":521,"content":"                "},{"type":"INSERT","lineNumber":522,"content":"                // Stub - echte Route laden würde hier implementiert werden"},{"type":"INSERT","lineNumber":523,"content":"                Log.d(TAG, \"Route loading stub for $building, floor $floor\")"},{"type":"INSERT","lineNumber":524,"content":"                "},{"type":"DELETE","lineNumber":540,"oldContent":"                    name = \"Demo Route\","},{"type":"DELETE","lineNumber":543,"oldContent":"                "},{"type":"DELETE","lineNumber":545,"oldContent":"                // Stub - echte Route laden würde hier implementiert werden"},{"type":"DELETE","lineNumber":547,"oldContent":"                Log.d(TAG, \"Route loading stub for $building, floor $floor\")"},{"type":"DELETE","lineNumber":553,"oldContent":"        Log.d(TAG, \"getCurrentEndPoint called (stub)\")"},{"type":"INSERT","lineNumber":535,"content":"                        landmarks = emptyList()"},{"type":"DELETE","lineNumber":584,"oldContent":"        }"},{"type":"DELETE","lineNumber":586,"oldContent":"        "},{"type":"INSERT","lineNumber":571,"content":"        }"},{"type":"INSERT","lineNumber":572,"content":"        "},{"type":"DELETE","lineNumber":600,"oldContent":"                } else {"},{"type":"DELETE","lineNumber":603,"oldContent":"                    _currentMatches.value = emptyList()"},{"type":"DELETE","lineNumber":605,"oldContent":"                }"},{"type":"DELETE","lineNumber":611,"oldContent":"        }"},{"type":"DELETE","lineNumber":613,"oldContent":"    }"},{"type":"INSERT","lineNumber":591,"content":"                } else {"},{"type":"DELETE","lineNumber":615,"oldContent":"    "},{"type":"INSERT","lineNumber":593,"content":"                    _currentMatches.value = emptyList()"},{"type":"INSERT","lineNumber":594,"content":"                }"},{"type":"DELETE","lineNumber":617,"oldContent":"    /**"},{"type":"DELETE","lineNumber":619,"oldContent":"     * Generiert simulierte Feature-Matches basierend auf der aktuellen Route"},{"type":"DELETE","lineNumber":621,"oldContent":"     */"},{"type":"INSERT","lineNumber":599,"content":"        }"},{"type":"INSERT","lineNumber":600,"content":"    }"},{"type":"INSERT","lineNumber":601,"content":"    "},{"type":"INSERT","lineNumber":602,"content":"    /**"},{"type":"INSERT","lineNumber":603,"content":"     * Generiert simulierte Feature-Matches basierend auf der aktuellen Route"},{"type":"INSERT","lineNumber":604,"content":"     */"},{"type":"DELETE","lineNumber":666,"oldContent":"     * Gibt einen benutzerfreundlichen Namen für eine Landmark-ID zurück"},{"type":"INSERT","lineNumber":650,"content":"     * Gibt einen benutzerfreundlichen Namen für eine Landmark-ID zurück"},{"type":"DELETE","lineNumber":680,"oldContent":"    /**"},{"type":"INSERT","lineNumber":665,"content":"    /**"},{"type":"DELETE","lineNumber":702,"oldContent":"        "},{"type":"DELETE","lineNumber":704,"oldContent":"        // Aktualisiere Matches für den neuen Schritt"},{"type":"INSERT","lineNumber":686,"content":"        "},{"type":"INSERT","lineNumber":687,"content":"        // Aktualisiere Matches für den neuen Schritt"},{"type":"DELETE","lineNumber":735,"oldContent":"    /**"},{"type":"DELETE","lineNumber":737,"oldContent":"     * Startet die Navigation von Anfang an"},{"type":"DELETE","lineNumber":739,"oldContent":"     */"},{"type":"DELETE","lineNumber":741,"oldContent":"    fun startNavigation() {"},{"type":"DELETE","lineNumber":743,"oldContent":"        Log.i(TAG, \"Navigation gestartet\")"},{"type":"DELETE","lineNumber":745,"oldContent":"        setCurrentNavigationStep(1)"},{"type":"DELETE","lineNumber":746,"oldContent":"        setFeatureMappingEnabled(true)"},{"type":"DELETE","lineNumber":747,"oldContent":"    "},{"type":"INSERT","lineNumber":725,"content":"    /**"},{"type":"INSERT","lineNumber":726,"content":"     * Startet die Navigation von Anfang an"},{"type":"INSERT","lineNumber":727,"content":"     */"},{"type":"INSERT","lineNumber":728,"content":"    fun startNavigation() {"},{"type":"INSERT","lineNumber":729,"content":"        Log.i(TAG, \"Navigation gestartet\")"},{"type":"INSERT","lineNumber":730,"content":"        setCurrentNavigationStep(1)"},{"type":"INSERT","lineNumber":731,"content":"        setFeatureMappingEnabled(true)"},{"type":"INSERT","lineNumber":733,"content":"    "},{"type":"DELETE","lineNumber":765,"oldContent":"        "},{"type":"DELETE","lineNumber":767,"oldContent":"        return buildString {"},{"type":"DELETE","lineNumber":769,"oldContent":"            appendLine(\"=== RouteViewModel Status ===\")"},{"type":"DELETE","lineNumber":771,"oldContent":"            appendLine(\"Route geladen: ${route != null}\")"},{"type":"DELETE","lineNumber":773,"oldContent":"            if (route != null) {"},{"type":"INSERT","lineNumber":752,"content":"        "},{"type":"INSERT","lineNumber":753,"content":"        return buildString {"},{"type":"INSERT","lineNumber":754,"content":"            appendLine(\"=== RouteViewModel Status ===\")"},{"type":"INSERT","lineNumber":755,"content":"            appendLine(\"Route geladen: ${route != null}\")"},{"type":"INSERT","lineNumber":756,"content":"            if (route != null) {"},{"type":"DELETE","lineNumber":808,"oldContent":""},{"type":"DELETE","lineNumber":810,"oldContent":"    "},{"type":"DELETE","lineNumber":812,"oldContent":""},{"type":"DELETE","lineNumber":814,"oldContent":"    "},{"type":"DELETE","lineNumber":817,"oldContent":"    /**"},{"type":"DELETE","lineNumber":820,"oldContent":"     * Gibt verfügbare Landmarks zurück - verwendet Landmark-IDs aus der Route"},{"type":"DELETE","lineNumber":823,"oldContent":"     */"},{"type":"DELETE","lineNumber":825,"oldContent":"                            FeatureLandmark("},{"type":"DELETE","lineNumber":827,"oldContent":"                                id = landmarkInfo.id, // Exakte ID aus Dateiname"},{"type":"DELETE","lineNumber":829,"oldContent":"                                name = landmarkInfo.filename.substringBeforeLast('.'),"},{"type":"DELETE","lineNumber":832,"oldContent":"                                description = \"Verfügbares Landmark\","},{"type":"DELETE","lineNumber":835,"oldContent":"                            )"},{"type":"DELETE","lineNumber":837,"oldContent":"                        )"},{"type":"DELETE","lineNumber":840,"oldContent":"                    }"},{"type":"DELETE","lineNumber":842,"oldContent":"                }"},{"type":"DELETE","lineNumber":844,"oldContent":"            }"},{"type":"DELETE","lineNumber":847,"oldContent":"            "},{"type":"DELETE","lineNumber":850,"oldContent":"            }"},{"type":"DELETE","lineNumber":852,"oldContent":"            "},{"type":"DELETE","lineNumber":854,"oldContent":"            routeLandmarks"},{"type":"DELETE","lineNumber":857,"oldContent":"        } catch (e: Exception) {"},{"type":"DELETE","lineNumber":859,"oldContent":"            Log.e(TAG, \"Fehler beim Laden der verfügbaren Landmarks: ${e.message}\")"},{"type":"DELETE","lineNumber":862,"oldContent":"            emptyList()"},{"type":"DELETE","lineNumber":865,"oldContent":"        }"},{"type":"DELETE","lineNumber":866,"oldContent":"    }"},{"type":"INSERT","lineNumber":824,"content":""},{"type":"INSERT","lineNumber":825,"content":"    "},{"type":"INSERT","lineNumber":826,"content":""},{"type":"INSERT","lineNumber":827,"content":"    "},{"type":"DELETE","lineNumber":868,"oldContent":"     * Gibt die aktuellen Navigationsschritte zurück"},{"type":"DELETE","lineNumber":869,"oldContent":"    fun getAvailableLandmarks(): List<FeatureLandmark> {"},{"type":"INSERT","lineNumber":829,"content":"     * Gibt verfügbare Landmarks zurück - verwendet Landmark-IDs aus der Route"},{"type":"INSERT","lineNumber":831,"content":"    fun getAvailableLandmarks(): List<FeatureLandmark> {"},{"type":"DELETE","lineNumber":873,"oldContent":"    fun getCurrentNavigationSteps(): List<NavigationStep> {"},{"type":"DELETE","lineNumber":875,"oldContent":"        return try {"},{"type":"DELETE","lineNumber":877,"oldContent":"            val route = _currentRoute.value"},{"type":"DELETE","lineNumber":880,"oldContent":"            if (route != null) {"},{"type":"DELETE","lineNumber":882,"oldContent":"                convertToNavigationRoute(route).steps"},{"type":"DELETE","lineNumber":885,"oldContent":"            } else {"},{"type":"INSERT","lineNumber":841,"content":"                            FeatureLandmark("},{"type":"DELETE","lineNumber":887,"oldContent":"                emptyList()"},{"type":"DELETE","lineNumber":891,"oldContent":"        } catch (e: Exception) {"},{"type":"DELETE","lineNumber":894,"oldContent":"            Log.e(TAG, \"Fehler beim Laden der Navigationsschritte: ${e.message}\")"},{"type":"DELETE","lineNumber":897,"oldContent":"            emptyList()"},{"type":"DELETE","lineNumber":900,"oldContent":"        }"},{"type":"DELETE","lineNumber":903,"oldContent":"    }"},{"type":"DELETE","lineNumber":906,"oldContent":""},{"type":"DELETE","lineNumber":909,"oldContent":""},{"type":"DELETE","lineNumber":911,"oldContent":""},{"type":"INSERT","lineNumber":861,"content":"                                id = landmarkInfo.id, // Exakte ID aus Dateiname"},{"type":"INSERT","lineNumber":862,"content":"                                name = landmarkInfo.filename.substringBeforeLast('.'),"},{"type":"INSERT","lineNumber":863,"content":"                                description = \"Verfügbares Landmark\","},{"type":"INSERT","lineNumber":864,"content":"                                position = Position(0.0, 0.0, 0.0),"},{"type":"INSERT","lineNumber":865,"content":"                                imageUrl = \"\""},{"type":"INSERT","lineNumber":866,"content":"                            )"},{"type":"INSERT","lineNumber":867,"content":"                        )"},{"type":"INSERT","lineNumber":868,"content":"                    }"},{"type":"INSERT","lineNumber":869,"content":"                }"},{"type":"INSERT","lineNumber":870,"content":"            }"},{"type":"INSERT","lineNumber":871,"content":"            "},{"type":"INSERT","lineNumber":872,"content":"            Log.d(TAG, \"Verfügbare Landmarks: ${routeLandmarks.size}\")"},{"type":"INSERT","lineNumber":873,"content":"            routeLandmarks.forEach { landmark ->"},{"type":"INSERT","lineNumber":874,"content":"                Log.d(TAG, \"- ${landmark.id}: ${landmark.name}\")"},{"type":"INSERT","lineNumber":875,"content":"            }"},{"type":"INSERT","lineNumber":876,"content":"            "},{"type":"INSERT","lineNumber":877,"content":"            routeLandmarks"},{"type":"INSERT","lineNumber":878,"content":"        } catch (e: Exception) {"},{"type":"INSERT","lineNumber":879,"content":"            Log.e(TAG, \"Fehler beim Laden der verfügbaren Landmarks: ${e.message}\")"},{"type":"INSERT","lineNumber":880,"content":"            emptyList()"},{"type":"INSERT","lineNumber":881,"content":"        }"},{"type":"INSERT","lineNumber":882,"content":"    }"},{"type":"INSERT","lineNumber":883,"content":"    "},{"type":"INSERT","lineNumber":884,"content":"    /**"},{"type":"INSERT","lineNumber":885,"content":"     * Gibt die aktuellen Navigationsschritte zurück"},{"type":"INSERT","lineNumber":886,"content":"     */"},{"type":"INSERT","lineNumber":887,"content":"    fun getCurrentNavigationSteps(): List<NavigationStep> {"},{"type":"INSERT","lineNumber":888,"content":"        return try {"},{"type":"INSERT","lineNumber":889,"content":"            val route = _currentRoute.value"},{"type":"INSERT","lineNumber":890,"content":"            if (route != null) {"},{"type":"INSERT","lineNumber":891,"content":"                convertToNavigationRoute(route).steps"},{"type":"INSERT","lineNumber":892,"content":"            } else {"},{"type":"INSERT","lineNumber":893,"content":"                emptyList()"},{"type":"INSERT","lineNumber":894,"content":"            }"},{"type":"INSERT","lineNumber":895,"content":"        } catch (e: Exception) {"},{"type":"INSERT","lineNumber":896,"content":"            Log.e(TAG, \"Fehler beim Laden der Navigationsschritte: ${e.message}\")"},{"type":"INSERT","lineNumber":897,"content":"            emptyList()"},{"type":"INSERT","lineNumber":898,"content":"        }"},{"type":"INSERT","lineNumber":899,"content":"    }"},{"type":"INSERT","lineNumber":900,"content":""},{"type":"INSERT","lineNumber":901,"content":""},{"type":"INSERT","lineNumber":902,"content":""},{"type":"INSERT","lineNumber":903,"content":"    /**"},{"type":"DELETE","lineNumber":917,"oldContent":"                                position = Position(0.0, 0.0, 0.0),"},{"type":"DELETE","lineNumber":918,"oldContent":"                                imageUrl = \"\""},{"type":"DELETE","lineNumber":923,"oldContent":"            Log.d(TAG, \"Verfügbare Landmarks: ${routeLandmarks.size}\")"},{"type":"DELETE","lineNumber":924,"oldContent":"            routeLandmarks.forEach { landmark ->"},{"type":"DELETE","lineNumber":926,"oldContent":"                Log.d(TAG, \"- ${landmark.id}: ${landmark.name}\")"},{"type":"DELETE","lineNumber":933,"oldContent":"    "},{"type":"DELETE","lineNumber":945,"oldContent":"            }"},{"type":"DELETE","lineNumber":955,"oldContent":"    /**"},{"type":"INSERT","lineNumber":958,"content":"        // Stub implementation - verhindert Crashes"},{"type":"INSERT","lineNumber":959,"content":"    }"},{"type":"INSERT","lineNumber":966,"content":"    fun getCurrentStartPoint(): String {"},{"type":"INSERT","lineNumber":967,"content":"        Log.d(TAG, \"getCurrentStartPoint called (stub)\")"},{"type":"INSERT","lineNumber":968,"content":"        return \"Büro Prof. Dr. Ludwig (PT 3.0.84C)\""},{"type":"INSERT","lineNumber":969,"content":"    }"},{"type":"INSERT","lineNumber":970,"content":"    "},{"type":"INSERT","lineNumber":971,"content":"    fun getCurrentEndPoint(): String {"},{"type":"INSERT","lineNumber":972,"content":"        Log.d(TAG, \"getCurrentEndPoint called (stub)\")"},{"type":"INSERT","lineNumber":973,"content":"        return \"Haupteingang\""},{"type":"INSERT","lineNumber":974,"content":"    }"},{"type":"INSERT","lineNumber":975,"content":"    "},{"type":"INSERT","lineNumber":976,"content":"    fun setCurrentNavigationStep(step: Int) {"},{"type":"INSERT","lineNumber":977,"content":"        Log.d(TAG, \"setCurrentNavigationStep called (stub): $step\")"},{"type":"INSERT","lineNumber":980,"content":"    "},{"type":"DELETE","lineNumber":989,"oldContent":"        // Stub implementation - verhindert Crashes"},{"type":"DELETE","lineNumber":991,"oldContent":"    }"},{"type":"INSERT","lineNumber":988,"content":""},{"type":"INSERT","lineNumber":989,"content":""},{"type":"INSERT","lineNumber":990,"content":"    /**"},{"type":"INSERT","lineNumber":991,"content":"     * Cleanup beim Destroy"},{"type":"INSERT","lineNumber":992,"content":"     */"},{"type":"DELETE","lineNumber":999,"oldContent":"    fun getCurrentStartPoint(): String {"},{"type":"DELETE","lineNumber":1000,"oldContent":"        Log.d(TAG, \"getCurrentStartPoint called (stub)\")"},{"type":"INSERT","lineNumber":999,"content":"                "},{"type":"INSERT","lineNumber":1000,"content":"                // Bereinige Feature-Storage Cache"},{"type":"MODIFY","lineNumber":1002,"content":"                ","oldContent":"        return \"Büro Prof. Dr. Ludwig (PT 3.0.84C)\""},{"type":"DELETE","lineNumber":1004,"oldContent":"    }"},{"type":"DELETE","lineNumber":1006,"oldContent":"    "},{"type":"DELETE","lineNumber":1008,"oldContent":"    fun getCurrentEndPoint(): String {"},{"type":"DELETE","lineNumber":1010,"oldContent":"        Log.d(TAG, \"getCurrentEndPoint called (stub)\")"},{"type":"DELETE","lineNumber":1011,"oldContent":"}"},{"type":"DELETE","lineNumber":1012,"oldContent":"        return \"Haupteingang\""},{"type":"DELETE","lineNumber":1013,"oldContent":"                "},{"type":"INSERT","lineNumber":1007,"content":"        }"},{"type":"DELETE","lineNumber":1015,"oldContent":"                // Bereinige Feature-Storage Cache"},{"type":"DELETE","lineNumber":1016,"oldContent":"    "},{"type":"DELETE","lineNumber":1017,"oldContent":"                "},{"type":"DELETE","lineNumber":1018,"oldContent":"    fun setCurrentNavigationStep(step: Int) {"},{"type":"DELETE","lineNumber":1019,"oldContent":"     */"},{"type":"DELETE","lineNumber":1020,"oldContent":"        Log.d(TAG, \"setCurrentNavigationStep called (stub): $step\")"},{"type":"DELETE","lineNumber":1021,"oldContent":"     * Cleanup beim Destroy"},{"type":"DELETE","lineNumber":1022,"oldContent":"    /**"},{"type":"DELETE","lineNumber":1023,"oldContent":""},{"type":"DELETE","lineNumber":1024,"oldContent":"    "},{"type":"DELETE","lineNumber":1025,"oldContent":""},{"type":"INSERT","lineNumber":1009,"content":"}"}]}]},"/Users/florian/Documents/GitHub/ar-walking/app/src/main/AndroidManifest.xml":{"filePath":"/Users/florian/Documents/GitHub/ar-walking/app/src/main/AndroidManifest.xml","baseContent":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\">\n\n    <!-- Camera Permissions -->\n    <uses-permission android:name=\"android.permission.CAMERA\"/>\n    \n    <!-- Network Permissions für Feature-Mapping Server -->\n    <uses-permission android:name=\"android.permission.INTERNET\"/>\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\"/>\n    \n    <!-- Storage Permissions für lokale Feature-Maps -->\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"/>\n    <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\"/>\n\n    <uses-feature android:name=\"android.hardware.camera\" android:required=\"false\"/>\n    <uses-feature android:name=\"android.hardware.camera.autofocus\" android:required=\"false\"/>\n    <uses-feature android:name=\"android.hardware.camera.front\" android:required=\"false\"/>\n    <uses-feature android:name=\"android.hardware.camera.front.autofocus\" android:required=\"false\"/>\n\n    <application\n        android:allowBackup=\"true\"\n        android:label=\"@string/app_name\"\n        android:supportsRtl=\"true\"\n        android:theme=\"@style/Theme.ArWalking\"\n        android:usesCleartextTraffic=\"true\"\n        tools:targetApi=\"31\">\n\n        <activity\n            android:name=\".MainActivity\"\n            android:exported=\"true\"\n            android:label=\"@string/app_name\"\n            android:theme=\"@style/Theme.ArWalking\">\n            <intent-filter>\n                <action android:name=\"android.intent.action.MAIN\"/>\n                <category android:name=\"android.intent.category.LAUNCHER\"/>\n            </intent-filter>\n        </activity>\n        <activity android:name=\".OpenCvCameraActivity\"\n                    android:theme=\"@style/Theme.ArWalking\"/>\n\n    </application>\n</manifest>\n","baseTimestamp":1754346742687},"/Users/florian/Documents/GitHub/ar-walking/README.md":{"filePath":"/Users/florian/Documents/GitHub/ar-walking/README.md","baseContent":"# ArWalking - Augmented Reality Navigation App\n\nArWalking is an Android application that provides augmented reality (AR) walking navigation using computer vision and feature matching. The app uses the device's camera to overlay navigation information on the real world, helping users navigate indoor environments.\n\n## 🚀 Features\n\n- **AR Navigation**: Real-time augmented reality overlays showing navigation directions\n- **Feature Matching**: Computer vision-based landmark recognition using OpenCV\n- **Indoor Navigation**: Specialized for indoor environments like university buildings\n- **Route Planning**: JSON-based route configuration with step-by-step instructions\n- **Modern UI**: Built with Jetpack Compose for a smooth, modern user experience\n- **Camera Integration**: Real-time camera preview with AR overlays\n\n## 📱 Screenshots\n\nThe app provides:\n- Home screen with route selection\n- AR camera view with navigation overlays\n- Feature matching indicators\n- Step-by-step navigation guidance\n\n## 🏗️ Architecture\n\n### Project Structure\n```\nar-walking/\n├── app/                          # Main Android application module\n│   ├── src/main/java/           # Kotlin source code\n│   │   └── com/example/arwalking/\n│   │       ├── components/      # Reusable UI components\n│   │       ├── data/           # Data models and repositories\n│   │       ├── screens/        # Screen composables\n│   │       ├── storage/        # Local storage management\n│   │       ├── ui/theme/       # UI theme and styling\n│   │       └── utils/          # Utility classes\n│   ├── src/main/res/           # Android resources\n│   │   ├── drawable/           # Vector drawables and images\n│   │   ├── layout/            # XML layouts (for OpenCV activities)\n│   │   └── values/            # Colors, strings, themes\n│   └── src/main/assets/        # Asset files\n│       ├── routes/            # Route JSON files\n│       ├── landmark_images/   # Reference landmark images\n│       └── landmark_features/ # Processed feature data\n├── opencv/                      # OpenCV Android module\n└── gradle/                     # Gradle configuration\n```\n\n### Key Components\n\n#### 1. Navigation System\n- **MainActivity.kt**: Main entry point with Compose navigation\n- **HomeScreen.kt**: Route selection interface\n- **Navigation.kt**: Camera-based AR navigation screen\n\n#### 2. AR & Computer Vision\n- **OpenCvCameraActivity.kt**: OpenCV-based camera processing\n- **FeatureMatchingEngine.kt**: Computer vision feature matching\n- **ARTrackingSystem.kt**: AR coordinate system management\n- **LandmarkFeatureStorage.kt**: Landmark data management\n\n#### 3. UI Components\n- **ARInfoIsland.kt**: AR status and information display\n- **SnapchatStyleAR3DArrow.kt**: 3D arrow navigation overlay\n- **LocationDropdown.kt**: Location selection component\n- **FeatureMatchOverlay.kt**: Feature matching visualization\n\n#### 4. Data Management\n- **RouteViewModel.kt**: Central state management\n- **RouteRepository.kt**: JSON route data handling\n- **ArWalkingStorageManager.kt**: Local storage system\n\n## 🛠️ Technical Stack\n\n### Core Technologies\n- **Language**: Kotlin 2.0.0\n- **Build System**: Gradle with Kotlin DSL\n- **UI Framework**: Jetpack Compose\n- **Computer Vision**: OpenCV for Android\n- **Architecture**: MVVM with ViewModels\n- **Navigation**: Jetpack Navigation Compose\n\n### Key Dependencies\n```kotlin\n// Core Android\nandroidx-core-ktx = \"1.16.0\"\nandroidx-lifecycle-runtime-ktx = \"2.9.1\"\n\n// Jetpack Compose\nandroidx-compose-bom = \"2024.04.01\"\nandroidx-activity-compose = \"1.10.1\"\nandroidx-navigation-compose = \"2.9.2\"\n\n// Camera\nandroidx-camera-core = \"1.4.2\"\nandroidx-camera-lifecycle = \"1.4.2\"\n\n// Coroutines\nkotlinx-coroutines-core = \"1.7.3\"\nkotlinx-coroutines-android = \"1.7.3\"\n\n// JSON Processing\ngson = \"2.10.1\"\n```\n\n### Android Configuration\n- **Minimum SDK**: 24 (Android 7.0)\n- **Target SDK**: 35 (Android 14)\n- **Compile SDK**: 36\n- **Java Compatibility**: Java 17\n\n## 🚀 Getting Started\n\n### Prerequisites\n- Android Studio Narwhal (2025.1.2) or later\n- Java 17 or later\n- Android SDK with API level 24+\n- Physical Android device (recommended for AR features)\n\n### Installation\n\n1. **Clone the repository**\n   ```bash\n   git clone https://github.com/your-username/ar-walking.git\n   cd ar-walking\n   ```\n\n2. **Open in Android Studio**\n   - Launch Android Studio\n   - Select \"Open an existing project\"\n   - Navigate to the cloned directory\n\n3. **Sync project**\n   - Android Studio will automatically sync Gradle dependencies\n   - Wait for the sync to complete\n\n4. **Build the project**\n   ```bash\n   ./gradlew build\n   ```\n\n5. **Install on device**\n   ```bash\n   ./gradlew installDebug\n   ```\n\n### Required Permissions\nThe app requires the following permissions:\n- **Camera**: For AR navigation and feature matching\n- **Internet**: For potential future server-based features\n- **Storage**: For local landmark data storage\n\n## 📋 Usage\n\n### Basic Navigation Flow\n\n1. **Launch the app**\n   - The home screen displays available routes\n   - Select start and destination locations\n\n2. **Start AR Navigation**\n   - Grant camera permission when prompted\n   - Point camera at the environment\n   - Follow AR overlays and navigation instructions\n\n3. **Feature Matching**\n   - The app automatically recognizes landmarks\n   - AR indicators show recognition confidence\n   - Navigation arrows guide you to the destination\n\n### Route Configuration\n\nRoutes are defined in JSON format in `app/src/main/assets/route.json`:\n\n```json\n{\n  \"route\": {\n    \"path\": [\n      {\n        \"xmlName\": \"Building Name\",\n        \"levelInfo\": {\n          \"storey\": \"0\",\n          \"storeyName\": \"Ground Floor\"\n        },\n        \"routeParts\": [\n          {\n            \"instruction\": \"Walk straight ahead\",\n            \"instructionDe\": \"Gehen Sie geradeaus\",\n            \"distance\": 50.0,\n            \"duration\": 30,\n            \"landmarks\": [\"landmark_1\", \"landmark_2\"]\n          }\n        ]\n      }\n    ]\n  }\n}\n```\n\n### Adding New Landmarks\n\n1. **Add landmark images** to `app/src/main/assets/landmark_images/`\n2. **Update route JSON** to reference new landmarks\n3. **Feature extraction** happens automatically on first run\n\n## 🔧 Development\n\n### Key Classes Overview\n\n#### RouteViewModel\nCentral state management for:\n- Route data loading from JSON\n- Feature matching coordination\n- AR state management\n- Navigation step tracking\n\n#### FeatureMatchingEngine\nComputer vision processing:\n- OpenCV-based feature detection\n- Landmark recognition\n- Confidence scoring\n- Real-time frame processing\n\n#### ARTrackingSystem\nAR coordinate management:\n- Camera pose estimation\n- 3D coordinate transformations\n- Overlay positioning\n- Tracking stability\n\n### Adding New Features\n\n1. **New UI Components**: Add to `components/` package\n2. **New Screens**: Add to `screens/` package with navigation setup\n3. **Data Models**: Add to `data/` package\n4. **Storage**: Extend `ArWalkingStorageManager` for new data types\n\n### Testing\n\n```bash\n# Run unit tests\n./gradlew test\n\n# Run instrumented tests\n./gradlew connectedAndroidTest\n\n# Run specific test class\n./gradlew test --tests \"com.example.arwalking.RouteViewModelTest\"\n```\n\n## 📊 Performance Considerations\n\n### Optimization Features\n- **Efficient feature matching**: Optimized OpenCV processing\n- **Memory management**: Proper bitmap recycling\n- **Background processing**: Coroutines for heavy operations\n- **Storage optimization**: Compressed landmark data\n\n### Recommended Device Specs\n- **RAM**: 4GB+ recommended\n- **Camera**: Autofocus capability\n- **Sensors**: Gyroscope and accelerometer for better AR\n- **Storage**: 100MB+ free space for landmark data\n\n## 🐛 Troubleshooting\n\n### Common Issues\n\n1. **Camera permission denied**\n   - Check app permissions in device settings\n   - Restart the app after granting permission\n\n2. **Feature matching not working**\n   - Ensure good lighting conditions\n   - Check if landmark images are properly loaded\n   - Verify OpenCV initialization\n\n3. **AR overlays misaligned**\n   - Calibrate device sensors\n   - Ensure stable camera positioning\n   - Check device orientation handling\n\n4. **Build errors**\n   - Clean and rebuild: `./gradlew clean build`\n   - Check Java version compatibility\n   - Verify all dependencies are resolved\n\n### Debug Features\n\nEnable debug mode in `BuildConfig.DEBUG` for:\n- Detailed logging\n- Feature matching visualization\n- Performance metrics\n- Storage system diagnostics\n\n## 🤝 Contributing\n\n1. Fork the repository\n2. Create a feature branch (`git checkout -b feature/amazing-feature`)\n3. Commit your changes (`git commit -m 'Add amazing feature'`)\n4. Push to the branch (`git push origin feature/amazing-feature`)\n5. Open a Pull Request\n\n### Code Style\n- Follow Kotlin coding conventions\n- Use meaningful variable and function names\n- Add documentation for public APIs\n- Write unit tests for new features\n\n## 📄 License\n\nThis project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.\n\n## 🙏 Acknowledgments\n\n- OpenCV community for computer vision capabilities\n- Android Jetpack team for modern Android development tools\n- Contributors and testers who helped improve the app\n\n## 📞 Support\n\nFor support and questions:\n- Create an issue on GitHub\n- Check the troubleshooting section\n- Review existing documentation\n\n---\n\n**Note**: This app is designed for indoor navigation and works best in well-lit environments with distinctive visual landmarks.","baseTimestamp":1754346904962,"deltas":[{"timestamp":1754346916238,"changes":[{"type":"MODIFY","lineNumber":47,"content":"### Komponenten-Übersicht","oldContent":"### Key Components"},{"type":"INSERT","lineNumber":49,"content":"Die ArWalking-App ist modular aufgebaut und besteht aus verschiedenen spezialisierten Komponenten:"},{"type":"INSERT","lineNumber":50,"content":""},{"type":"INSERT","lineNumber":51,"content":"#### 1. Navigation & Routing System"},{"type":"INSERT","lineNumber":52,"content":"- **MainActivity.kt**: Haupteinstiegspunkt der App mit Jetpack Compose Navigation"},{"type":"INSERT","lineNumber":53,"content":"- **HomeScreen.kt**: Startbildschirm für Routenauswahl und Zielkonfiguration"},{"type":"INSERT","lineNumber":54,"content":"- **Navigation.kt**: Hauptnavigationsbildschirm mit AR-Kamera-Integration"},{"type":"INSERT","lineNumber":55,"content":"- **RouteViewModel.kt**: Zentrale Zustandsverwaltung für Routen, Feature-Matching und Navigation"},{"type":"INSERT","lineNumber":56,"content":"- **RouteRepository.kt**: Lädt und verwaltet Routendaten aus JSON-Assets"},{"type":"INSERT","lineNumber":57,"content":"- **NavigationRoute.kt**: Datenmodelle für Navigationsrouten und -schritte"},{"type":"INSERT","lineNumber":58,"content":""},{"type":"INSERT","lineNumber":59,"content":"#### 2. AR & Computer Vision"},{"type":"INSERT","lineNumber":60,"content":"- **OpenCvCameraActivity.kt**: OpenCV-basierte Kameraverarbeitung und Bildanalyse"},{"type":"INSERT","lineNumber":61,"content":"- **FeatureMatchingEngine.kt**: Computer-Vision-Engine für Landmark-Erkennung und Feature-Matching"},{"type":"INSERT","lineNumber":62,"content":"- **LandmarkFeatureStorage.kt**: Verwaltung und Speicherung von Landmark-Features und Bilddaten"},{"type":"INSERT","lineNumber":63,"content":"- **ARTrackingSystem.kt**: AR-Koordinatensystem-Management und Pose-Schätzung (Stub-Implementation)"},{"type":"INSERT","lineNumber":64,"content":""},{"type":"INSERT","lineNumber":65,"content":"#### 3. UI Components & Overlays"},{"type":"INSERT","lineNumber":66,"content":"- **ARInfoIsland.kt**: AR-Status-Anzeige mit Scan-Status und Navigationsinformationen"},{"type":"INSERT","lineNumber":67,"content":"- **AR3DArrowOverlay.kt**: 3D-Pfeil-Overlay für Richtungsanweisungen"},{"type":"INSERT","lineNumber":68,"content":"- **Animated3DArrowOverlay.kt**: Animierte Version des 3D-Pfeils mit Bewegungseffekten"},{"type":"INSERT","lineNumber":69,"content":"- **FeatureMatchOverlay.kt**: Visualisierung von Feature-Matches und Erkennungsvertrauen"},{"type":"INSERT","lineNumber":70,"content":"- **LocationDropdown.kt**: Dropdown-Komponente für Standort- und Zielauswahl"},{"type":"INSERT","lineNumber":71,"content":"- **NavigationDrawer.kt**: Seitliches Navigationsmenü"},{"type":"INSERT","lineNumber":72,"content":"- **MenuOverlay.kt**: Overlay-Menü für zusätzliche Optionen"},{"type":"INSERT","lineNumber":73,"content":"- **ARScanStatus.kt**: Status-Komponente für AR-Scanning-Feedback"},{"type":"INSERT","lineNumber":74,"content":""},{"type":"INSERT","lineNumber":75,"content":"#### 4. Storage & Data Management"},{"type":"INSERT","lineNumber":76,"content":"- **ArWalkingStorageManager.kt**: Zentrales Storage-System für Bilder und Metadaten"},{"type":"INSERT","lineNumber":77,"content":"- **LocalImageStorage.kt**: Lokale Bildspeicherung und -verwaltung"},{"type":"INSERT","lineNumber":78,"content":"- **OptimizedImageManager.kt**: Optimierte Bildverarbeitung und Komprimierung"},{"type":"INSERT","lineNumber":79,"content":"- **ProjectDirectoryImageManager.kt**: Verwaltung von Bildern im Projektverzeichnis"},{"type":"INSERT","lineNumber":80,"content":"- **FavoritesRepository.kt**: Speicherung und Verwaltung von Lieblingsrouten"},{"type":"INSERT","lineNumber":81,"content":""},{"type":"INSERT","lineNumber":82,"content":"#### 5. Data Models & Structures"},{"type":"INSERT","lineNumber":83,"content":"- **RouteData.kt**: Datenmodelle für JSON-basierte Routendefinitionen"},{"type":"INSERT","lineNumber":84,"content":"- **BuildingStructure.kt**: Gebäudestruktur-Definitionen und Stockwerk-Informationen"},{"type":"INSERT","lineNumber":85,"content":"- **FavoriteRoute.kt**: Datenmodell für gespeicherte Lieblingsrouten"},{"type":"INSERT","lineNumber":86,"content":"- **FeatureLandmark.kt**: Landmark-Definitionen mit Feature-Daten"},{"type":"INSERT","lineNumber":87,"content":"- **FeatureNavigationRoute.kt**: Spezielle Routen für Feature-basierte Navigation"},{"type":"INSERT","lineNumber":88,"content":""},{"type":"INSERT","lineNumber":89,"content":"#### 6. Utility & Configuration"},{"type":"INSERT","lineNumber":90,"content":"- **FeatureMappingConfig.kt**: Konfiguration für Feature-Mapping-Parameter"},{"type":"INSERT","lineNumber":91,"content":"- **JsonUtils.kt**: Hilfsfunktionen für JSON-Verarbeitung"},{"type":"INSERT","lineNumber":92,"content":"- **GradientUtils.kt**: UI-Hilfsfunktionen für Farbverläufe"},{"type":"INSERT","lineNumber":93,"content":"- **Color.kt**: App-weite Farbdefinitionen und Themes"},{"type":"INSERT","lineNumber":94,"content":""},{"type":"INSERT","lineNumber":95,"content":"#### 7. Debug & Development"},{"type":"INSERT","lineNumber":96,"content":"- **LandmarkDebugOverlay.kt**: Debug-Overlay für Landmark-Entwicklung"},{"type":"INSERT","lineNumber":97,"content":"- **FeatureMappingStatusIndicator.kt**: Status-Indikator für Feature-Mapping-Prozesse"},{"type":"INSERT","lineNumber":98,"content":"- **ExpandedARInfoIsland.kt**: Erweiterte AR-Info-Anzeige für detaillierte Informationen"},{"type":"INSERT","lineNumber":99,"content":""},{"type":"INSERT","lineNumber":100,"content":"### Key Components (Hauptkomponenten)"},{"type":"INSERT","lineNumber":101,"content":""},{"type":"DELETE","lineNumber":57,"oldContent":"- **ARTrackingSystem.kt**: AR coordinate system management"},{"type":"DELETE","lineNumber":62,"oldContent":"- **SnapchatStyleAR3DArrow.kt**: 3D arrow navigation overlay"},{"type":"INSERT","lineNumber":114,"content":"- **AR3DArrowOverlay.kt**: 3D arrow navigation overlay"}]}]},"/Dummy.txt":{"filePath":"/Dummy.txt","baseContent":"keyboard bug gelöst, zoom kamera hinzugefügt. erster locate button","baseTimestamp":1754346971880,"deltas":[{"timestamp":1754346979418,"changes":[{"type":"MODIFY","lineNumber":0,"content":"bug fixinf","oldContent":"keyboard bug gelöst, zoom kamera hinzugefügt. erster locate button"}]}]}}}